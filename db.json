{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/hueman/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/hueman/source/images/ciazhar.png","path":"images/ciazhar.png","modified":0,"renderable":1},{"_id":"themes/hueman/source/images/hexo.png","path":"images/hexo.png","modified":0,"renderable":1},{"_id":"themes/hueman/source/js/insight.js","path":"js/insight.js","modified":0,"renderable":1},{"_id":"themes/hueman/source/js/main.js","path":"js/main.js","modified":0,"renderable":1},{"_id":"themes/hueman/source/images/photo366748288653830057.jpg","path":"images/photo366748288653830057.jpg","modified":0,"renderable":1},{"_id":"themes/hueman/source/css/images/logo-header.png","path":"css/images/logo-header.png","modified":0,"renderable":1},{"_id":"themes/hueman/source/css/images/opacity-10.png","path":"css/images/opacity-10.png","modified":0,"renderable":1},{"_id":"themes/hueman/source/css/images/s-left.png","path":"css/images/s-left.png","modified":0,"renderable":1},{"_id":"themes/hueman/source/css/images/thumb-default-small.png","path":"css/images/thumb-default-small.png","modified":0,"renderable":1},{"_id":"themes/hueman/source/css/images/thumb-default.png","path":"css/images/thumb-default.png","modified":0,"renderable":1},{"_id":"themes/hueman/source/images/kritik-kpm-udinus/kontak-person.png","path":"images/kritik-kpm-udinus/kontak-person.png","modified":0,"renderable":1},{"_id":"themes/hueman/source/images/kritik-kpm-udinus/pencarian.png","path":"images/kritik-kpm-udinus/pencarian.png","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/justified-gallery/jquery.justifiedGallery.min.js","path":"libs/justified-gallery/jquery.justifiedGallery.min.js","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/justified-gallery/justifiedGallery.min.css","path":"libs/justified-gallery/justifiedGallery.min.css","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/source-code-pro/styles.css","path":"libs/source-code-pro/styles.css","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/titillium-web/styles.css","path":"libs/titillium-web/styles.css","modified":0,"renderable":1},{"_id":"themes/hueman/source/images/kritik-kpm-udinus/agenda.png","path":"images/kritik-kpm-udinus/agenda.png","modified":0,"renderable":1},{"_id":"themes/hueman/source/images/kritik-kpm-udinus/foto.png","path":"images/kritik-kpm-udinus/foto.png","modified":0,"renderable":1},{"_id":"themes/hueman/source/images/kritik-kpm-udinus/index.png","path":"images/kritik-kpm-udinus/index.png","modified":0,"renderable":1},{"_id":"themes/hueman/source/images/kritik-kpm-udinus/sambutan-kepala.png","path":"images/kritik-kpm-udinus/sambutan-kepala.png","modified":0,"renderable":1},{"_id":"themes/hueman/source/images/ui-ux/menu/acyclic-network-menu.png","path":"images/ui-ux/menu/acyclic-network-menu.png","modified":0,"renderable":1},{"_id":"themes/hueman/source/images/ui-ux/menu/cyclic-network-menu.png","path":"images/ui-ux/menu/cyclic-network-menu.png","modified":0,"renderable":1},{"_id":"themes/hueman/source/images/ui-ux/menu/multiple-item.png","path":"images/ui-ux/menu/multiple-item.png","modified":0,"renderable":1},{"_id":"themes/hueman/source/images/ui-ux/menu/multiple-selection.png","path":"images/ui-ux/menu/multiple-selection.png","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/font-awesome/css/font-awesome.css","path":"libs/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/font-awesome/css/font-awesome.min.css","path":"libs/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/lightgallery/css/lg-fb-comment-box.css","path":"libs/lightgallery/css/lg-fb-comment-box.css","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/lightgallery/css/lg-fb-comment-box.css.map","path":"libs/lightgallery/css/lg-fb-comment-box.css.map","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/lightgallery/css/lg-fb-comment-box.min.css","path":"libs/lightgallery/css/lg-fb-comment-box.min.css","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/lightgallery/css/lg-transitions.css","path":"libs/lightgallery/css/lg-transitions.css","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/lightgallery/css/lg-transitions.css.map","path":"libs/lightgallery/css/lg-transitions.css.map","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/lightgallery/css/lg-transitions.min.css","path":"libs/lightgallery/css/lg-transitions.min.css","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/lightgallery/css/lightgallery.css","path":"libs/lightgallery/css/lightgallery.css","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/lightgallery/css/lightgallery.css.map","path":"libs/lightgallery/css/lightgallery.css.map","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/lightgallery/css/lightgallery.min.css","path":"libs/lightgallery/css/lightgallery.min.css","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/lightgallery/fonts/lg.eot","path":"libs/lightgallery/fonts/lg.eot","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/lightgallery/fonts/lg.svg","path":"libs/lightgallery/fonts/lg.svg","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/lightgallery/fonts/lg.ttf","path":"libs/lightgallery/fonts/lg.ttf","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/lightgallery/fonts/lg.woff","path":"libs/lightgallery/fonts/lg.woff","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/lightgallery/img/loading.gif","path":"libs/lightgallery/img/loading.gif","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/lightgallery/img/video-play.png","path":"libs/lightgallery/img/video-play.png","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/lightgallery/img/vimeo-play.png","path":"libs/lightgallery/img/vimeo-play.png","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/lightgallery/img/youtube-play.png","path":"libs/lightgallery/img/youtube-play.png","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/lightgallery/js/lg-autoplay.js","path":"libs/lightgallery/js/lg-autoplay.js","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/lightgallery/js/lg-autoplay.min.js","path":"libs/lightgallery/js/lg-autoplay.min.js","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/lightgallery/js/lg-fullscreen.js","path":"libs/lightgallery/js/lg-fullscreen.js","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/lightgallery/js/lg-fullscreen.min.js","path":"libs/lightgallery/js/lg-fullscreen.min.js","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/lightgallery/js/lg-hash.js","path":"libs/lightgallery/js/lg-hash.js","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/lightgallery/js/lg-hash.min.js","path":"libs/lightgallery/js/lg-hash.min.js","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/lightgallery/js/lg-pager.js","path":"libs/lightgallery/js/lg-pager.js","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/lightgallery/js/lg-pager.min.js","path":"libs/lightgallery/js/lg-pager.min.js","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/lightgallery/js/lg-share.js","path":"libs/lightgallery/js/lg-share.js","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/lightgallery/js/lg-share.min.js","path":"libs/lightgallery/js/lg-share.min.js","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/lightgallery/js/lg-thumbnail.js","path":"libs/lightgallery/js/lg-thumbnail.js","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/lightgallery/js/lg-thumbnail.min.js","path":"libs/lightgallery/js/lg-thumbnail.min.js","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/lightgallery/js/lg-video.js","path":"libs/lightgallery/js/lg-video.js","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/lightgallery/js/lg-video.min.js","path":"libs/lightgallery/js/lg-video.min.js","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/lightgallery/js/lg-zoom.js","path":"libs/lightgallery/js/lg-zoom.js","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/source-code-pro/fonts/mrl8jkM18OlOQN8JLgasD9V_2ngZ8dMf8fLgjYEouxg.woff2","path":"libs/source-code-pro/fonts/mrl8jkM18OlOQN8JLgasD9V_2ngZ8dMf8fLgjYEouxg.woff2","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/source-code-pro/fonts/mrl8jkM18OlOQN8JLgasDy2Q8seG17bfDXYR_jUsrzg.woff2","path":"libs/source-code-pro/fonts/mrl8jkM18OlOQN8JLgasDy2Q8seG17bfDXYR_jUsrzg.woff2","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/titillium-web/fonts/7XUFZ5tgS-tD6QamInJTcSo_WB_cotcEMUw1LsIE8mM.woff2","path":"libs/titillium-web/fonts/7XUFZ5tgS-tD6QamInJTcSo_WB_cotcEMUw1LsIE8mM.woff2","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/titillium-web/fonts/7XUFZ5tgS-tD6QamInJTcZSnX671uNZIV63UdXh3Mg0.woff2","path":"libs/titillium-web/fonts/7XUFZ5tgS-tD6QamInJTcZSnX671uNZIV63UdXh3Mg0.woff2","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/titillium-web/fonts/anMUvcNT0H1YN4FII8wpr4-67659ICLY8bMrYhtePPA.woff2","path":"libs/titillium-web/fonts/anMUvcNT0H1YN4FII8wpr4-67659ICLY8bMrYhtePPA.woff2","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/titillium-web/fonts/anMUvcNT0H1YN4FII8wpr46gJz9aNFrmnwBdd69aqzY.woff2","path":"libs/titillium-web/fonts/anMUvcNT0H1YN4FII8wpr46gJz9aNFrmnwBdd69aqzY.woff2","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/titillium-web/fonts/anMUvcNT0H1YN4FII8wpr9INifKjd1RJ3NxxEi9Cy2w.woff2","path":"libs/titillium-web/fonts/anMUvcNT0H1YN4FII8wpr9INifKjd1RJ3NxxEi9Cy2w.woff2","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/titillium-web/fonts/anMUvcNT0H1YN4FII8wpr_SNRT0fZ5CX-AqRkMYgJJo.woff2","path":"libs/titillium-web/fonts/anMUvcNT0H1YN4FII8wpr_SNRT0fZ5CX-AqRkMYgJJo.woff2","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/lightgallery/js/lightgallery.min.js","path":"libs/lightgallery/js/lightgallery.min.js","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/lightgallery/js/lightgallery.js","path":"libs/lightgallery/js/lightgallery.js","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/lightgallery/js/lg-zoom.min.js","path":"libs/lightgallery/js/lg-zoom.min.js","modified":0,"renderable":1},{"_id":"themes/hueman/source/images/kritik-kpm-udinus/copyright.png","path":"images/kritik-kpm-udinus/copyright.png","modified":0,"renderable":1},{"_id":"themes/hueman/source/images/ui-ux/Ui-Ux.jpg","path":"images/ui-ux/Ui-Ux.jpg","modified":0,"renderable":1},{"_id":"themes/hueman/source/images/ui-ux/menu/binary-menu.png","path":"images/ui-ux/menu/binary-menu.png","modified":0,"renderable":1},{"_id":"themes/hueman/source/images/ui-ux/menu/embedded-links.png","path":"images/ui-ux/menu/embedded-links.png","modified":0,"renderable":1},{"_id":"themes/hueman/source/images/ui-ux/menu/linier-sequence.png","path":"images/ui-ux/menu/linier-sequence.png","modified":0,"renderable":1},{"_id":"themes/hueman/source/images/ui-ux/menu/pull-down-dan-pop-up.png","path":"images/ui-ux/menu/pull-down-dan-pop-up.png","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/font-awesome/fonts/fontawesome-webfont.woff","path":"libs/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/font-awesome/fonts/fontawesome-webfont.woff2","path":"libs/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/jquery/2.0.3/jquery.min.js","path":"libs/jquery/2.0.3/jquery.min.js","modified":0,"renderable":1},{"_id":"themes/hueman/source/images/kritik-kpm-udinus/lamankosong.png","path":"images/kritik-kpm-udinus/lamankosong.png","modified":0,"renderable":1},{"_id":"themes/hueman/source/images/ui-ux/menu/menu-maps.png","path":"images/ui-ux/menu/menu-maps.png","modified":0,"renderable":1},{"_id":"themes/hueman/source/images/ui-ux/menu/simultaneus-menu.png","path":"images/ui-ux/menu/simultaneus-menu.png","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/font-awesome/fonts/FontAwesome.otf","path":"libs/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/font-awesome/fonts/fontawesome-webfont.eot","path":"libs/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/font-awesome/fonts/fontawesome-webfont.ttf","path":"libs/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/hueman/source/images/kritik-kpm-udinus/cp.png","path":"images/kritik-kpm-udinus/cp.png","modified":0,"renderable":1},{"_id":"themes/hueman/source/images/kritik-kpm-udinus/home.png","path":"images/kritik-kpm-udinus/home.png","modified":0,"renderable":1},{"_id":"themes/hueman/source/images/ui-ux/menu/alphasliders.png","path":"images/ui-ux/menu/alphasliders.png","modified":0,"renderable":1},{"_id":"themes/hueman/source/images/ui-ux/menu/tree-structured-menus.png","path":"images/ui-ux/menu/tree-structured-menus.png","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/font-awesome/fonts/fontawesome-webfont.svg","path":"libs/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"themes/hueman/source/images/ui-ux/menu/scrolling.png","path":"images/ui-ux/menu/scrolling.png","modified":0,"renderable":1},{"_id":"themes/hueman/source/images/ui-ux/menu/iconic-menu.png","path":"images/ui-ux/menu/iconic-menu.png","modified":0,"renderable":1},{"_id":"themes/hueman/source/images/springboot.png","path":"images/springboot.png","modified":0,"renderable":1},{"_id":"themes/hueman/source/images/angular.png","path":"images/angular.png","modified":0,"renderable":1},{"_id":"themes/hueman/source/images/android.png","path":"images/android.png","modified":0,"renderable":1},{"_id":"themes/hueman/source/images/spring.png","path":"images/spring.png","modified":0,"renderable":1}],"Cache":[{"_id":"themes/hueman/.gitignore","hash":"cd089ae45ce870c45e434019e8f1ed4f066cd425","modified":1489280179000},{"_id":"themes/hueman/LICENSE","hash":"3975b7883caeb33f61fada7c0ef4add7ab189849","modified":1489280179000},{"_id":"themes/hueman/README.md","hash":"defb1f667677e1fd13b3a4799a6c70eae621f796","modified":1489280179000},{"_id":"themes/hueman/_config.yml","hash":"c05f985077fb00002ce1940df5b9f6604633f35b","modified":1494134096093},{"_id":"themes/hueman/package.json","hash":"d4ff853568e592265c2c9a21ce358f15babec14a","modified":1489280179000},{"_id":"source/about/index.md","hash":"c60da397aff229ec4527ac8f66f93384aae06654","modified":1492123862303},{"_id":"themes/hueman/languages/ca.yml","hash":"d082e6f9e7615556b8f6c5f1286f0db8a0db195e","modified":1489280179000},{"_id":"themes/hueman/languages/en.yml","hash":"f2e6a8595a6e668e5b9aa28f0bb5859e03f101fb","modified":1494133975273},{"_id":"themes/hueman/languages/es.yml","hash":"97191c8ab7ce5334369d96f6e53a6d365a2057b1","modified":1489280179000},{"_id":"themes/hueman/languages/fr.yml","hash":"0624f8f7532f1312caaf4f8d498aab69c80a92f2","modified":1489280179000},{"_id":"themes/hueman/languages/hu.yml","hash":"5dd987ad5f33748bcba1d9a7eb78c1800b7c8bed","modified":1489280179000},{"_id":"themes/hueman/languages/id.yml","hash":"03e45cf88b69e657a340362e18668e443ddaae47","modified":1489280179000},{"_id":"themes/hueman/languages/ja.yml","hash":"56f3af0bf5cc56f9f7bf24fe5cb881a6a1b34e7b","modified":1489280179000},{"_id":"themes/hueman/languages/ko.yml","hash":"81ea44ecda87a4398bb6d88a3b02f6b73c9a1637","modified":1489280179000},{"_id":"themes/hueman/languages/pt-BR.yml","hash":"6f9539673e08d66866bb210b78863ef68023f991","modified":1489280179000},{"_id":"themes/hueman/languages/ru.yml","hash":"99f111b39f867d421ff4cb859dd1deb26caa382e","modified":1489280179000},{"_id":"themes/hueman/languages/tr.yml","hash":"003cb50200eba865d57e5c53925636f1a5ec0a70","modified":1489280179000},{"_id":"themes/hueman/languages/vi.yml","hash":"edeb4492a08af458fe958dc4d48101c96750b159","modified":1489280179000},{"_id":"themes/hueman/languages/zh-CN.yml","hash":"05737aa022a007b97034a9d9fc80e606d5a25598","modified":1489280179000},{"_id":"themes/hueman/layout/archive.ejs","hash":"8785477232088e09a75da88a0cdcb32fedf4f81f","modified":1489280179000},{"_id":"themes/hueman/layout/category.ejs","hash":"5096d3f019098d9940429152295f6d6161d887ba","modified":1489280179000},{"_id":"themes/hueman/layout/index.ejs","hash":"5096d3f019098d9940429152295f6d6161d887ba","modified":1489838179712},{"_id":"themes/hueman/layout/layout.ejs","hash":"35fd7fe6d4e2d313246a0a31446a597714facdea","modified":1490101180340},{"_id":"themes/hueman/layout/page.ejs","hash":"5afddd6a45fa72beacec8d760487dfe8a667e622","modified":1489280179000},{"_id":"themes/hueman/layout/post.ejs","hash":"5afddd6a45fa72beacec8d760487dfe8a667e622","modified":1489280179000},{"_id":"themes/hueman/layout/tag.ejs","hash":"8785477232088e09a75da88a0cdcb32fedf4f81f","modified":1489280179000},{"_id":"themes/hueman/scripts/excerpt.js","hash":"630f17f2647b2ba5b207dba36fb3c6587a3aa04f","modified":1489280179000},{"_id":"themes/hueman/scripts/meta.js","hash":"1993754a2f3dffa283fa0538eb8f056385b69ad4","modified":1489280179000},{"_id":"themes/hueman/scripts/thumbnail.js","hash":"e78b1b978fa1acad5409afc685d13f669e80b24f","modified":1489280179000},{"_id":"themes/hueman/layout/comment/counter.ejs","hash":"5a65e9ef8d225ff789f6e8719aabfc49983da0cd","modified":1489280179000},{"_id":"themes/hueman/layout/comment/disqus.ejs","hash":"83158f5b00f95acf847524fd7ffeb5aab25add78","modified":1489280179000},{"_id":"themes/hueman/layout/comment/duoshuo.ejs","hash":"ce46d7410a99b57704da32e9d09071cef6c9fa93","modified":1489280179000},{"_id":"themes/hueman/layout/comment/facebook.ejs","hash":"5ee16430a4435c2fead0275ff83fc98092d73d4c","modified":1489280179000},{"_id":"themes/hueman/layout/comment/index.ejs","hash":"1ecc5ba82ae4236da7635a58d4584fd67f6f1fc3","modified":1489280179000},{"_id":"themes/hueman/layout/comment/isso.ejs","hash":"4f8b81ff5bb418ec11ce080d515f247bfe436014","modified":1489280179000},{"_id":"themes/hueman/layout/comment/scripts.ejs","hash":"305aa07646ab03e00d8239a811f4ec6f75751e1e","modified":1489280179000},{"_id":"themes/hueman/layout/comment/youyan.ejs","hash":"6fe807992832939caf6c3e7651d052df9520d88e","modified":1489280179000},{"_id":"themes/hueman/layout/common/archive.ejs","hash":"bf909e4d6798374daf114cf41540f2bd300408d9","modified":1489838533968},{"_id":"themes/hueman/layout/common/article.ejs","hash":"94369b0078a61f6f07264f686cef1cede0fd1997","modified":1489280179000},{"_id":"themes/hueman/layout/common/content-title.ejs","hash":"43288ebc0ea30d80e6d7df56f2e7ed5d7935ed1a","modified":1489280179000},{"_id":"themes/hueman/layout/common/footer.ejs","hash":"4d01bd3d28820936b0d09529b60e9d6930afc9fe","modified":1490101180340},{"_id":"themes/hueman/layout/common/head.ejs","hash":"dacc29256a51d4867c662b6f1805d0d7652de45d","modified":1489280179000},{"_id":"themes/hueman/layout/common/header.ejs","hash":"4dbb53393c3ebef01088592babf135d2f6559f47","modified":1489280179000},{"_id":"themes/hueman/layout/common/scripts.ejs","hash":"db677ab336d31292bffc071b2115e25e9c6f198d","modified":1489280179000},{"_id":"themes/hueman/layout/common/sidebar.ejs","hash":"9cd23dad02bf0c8cc92316ea90c76da520e2a716","modified":1492946116647},{"_id":"themes/hueman/layout/common/summary.ejs","hash":"42d6f99906ae96a6d00ee9a727405e47ec5e7c81","modified":1489280179000},{"_id":"themes/hueman/layout/common/thumbnail.ejs","hash":"c5fba5d5287f49e02040c530cd92312b2221a2c1","modified":1489280179000},{"_id":"themes/hueman/layout/plugin/baidu-analytics.ejs","hash":"d99089976258050666208f29000f84496fe1029c","modified":1489280179000},{"_id":"themes/hueman/layout/plugin/google-analytics.ejs","hash":"349f08b6521a16e79046b1f94f04317ac74f556e","modified":1489280179000},{"_id":"themes/hueman/layout/plugin/scripts.ejs","hash":"5c74d66cbda8c5d6c37ee04cc6585005815bc6cf","modified":1489280179000},{"_id":"themes/hueman/layout/search/baidu.ejs","hash":"bcffa60f2d1750ac7499e928f538176e3804393b","modified":1489280179000},{"_id":"themes/hueman/layout/search/index.ejs","hash":"1a6a742727018567f60f8815be0bff5a45294ce5","modified":1489280179000},{"_id":"themes/hueman/layout/search/insight.ejs","hash":"130fe3d33ac71da0b50f7fee6a87979f30938a1b","modified":1489280179000},{"_id":"themes/hueman/layout/search/swiftype.ejs","hash":"379e66d2c13526e72e4120c443f95fccf4edef71","modified":1489280179000},{"_id":"themes/hueman/layout/share/addtoany.ejs","hash":"ac180c4c84b73a04d61b17e7dc18c257e20bf59f","modified":1489280179000},{"_id":"themes/hueman/layout/share/bdshare.ejs","hash":"a1e772c5a6f174d585b0c1e574058f75dc8e2898","modified":1489280179000},{"_id":"themes/hueman/layout/share/default.ejs","hash":"7492f5b375a56c67a1a1a4f6b893e37f49dc86dc","modified":1489280179000},{"_id":"themes/hueman/layout/share/index.ejs","hash":"029e91aace5a4c0d8387fc7744c477ccc6865c30","modified":1489280179000},{"_id":"themes/hueman/layout/share/jiathis.ejs","hash":"21ebaa51e828cba2cefbeeaccb01514643565755","modified":1489280179000},{"_id":"themes/hueman/layout/widget/archive.ejs","hash":"c4d303eaaa23768e52ead324c422a8900b1fe448","modified":1489280179000},{"_id":"themes/hueman/layout/widget/category.ejs","hash":"2d705df76f2eef7d695a971266fc104e89ca6bcd","modified":1489280179000},{"_id":"themes/hueman/layout/widget/imk.ejs","hash":"460a5e76a50a4fea8bb6664e1ed3024836c886e7","modified":1492941435400},{"_id":"themes/hueman/layout/widget/links.ejs","hash":"97dab84d6336a4c926ddc288d5a6c264f54c50c3","modified":1489280179000},{"_id":"themes/hueman/layout/widget/profile.ejs","hash":"13d35f23d8fbae13236ebab8bcc46d44feaae7b3","modified":1490101180356},{"_id":"themes/hueman/layout/widget/recent_posts.ejs","hash":"16a2bd28bdf520616202670a18c6cc93d1dd3f54","modified":1489280179000},{"_id":"themes/hueman/layout/widget/sticky_posts.ejs","hash":"6bad4126bed652f5f9e93027cbe3ee03b67b034a","modified":1489280179000},{"_id":"themes/hueman/layout/widget/tag.ejs","hash":"bfbc63e675439dcdc35e07dce6948e41500b649c","modified":1489280179000},{"_id":"themes/hueman/layout/widget/tagcloud.ejs","hash":"3ecb048d6098bc3953043a4c25f1f7c4b23397cf","modified":1489280179000},{"_id":"themes/hueman/source/css/_extend.styl","hash":"c2160499dc89c524ff17cd2e3fcbb8df83ebca1a","modified":1489280179000},{"_id":"themes/hueman/source/css/_responsive.styl","hash":"4addaf2f203563accf0479850eda1ab4f4a4c34b","modified":1492947836403},{"_id":"themes/hueman/source/css/_variables.styl","hash":"ce03de3658b55b5f90bb4dd18679be18ec38acaa","modified":1489280179000},{"_id":"themes/hueman/source/css/style.styl","hash":"b76d43839bda01ee791e71093f009ad2c8b093b2","modified":1489280179000},{"_id":"themes/hueman/source/images/android.jpg","hash":"8ed4c99b27a382371e21ba27856cc689d6d77f7c","modified":1493802548785},{"_id":"themes/hueman/source/images/angular2.png","hash":"1ccb6b1bd04aa8f6ca4d94c3a42ad8425f9fe389","modified":1493802480144},{"_id":"themes/hueman/source/images/ciazhar.png","hash":"3e87af7a3b01fb29684431b2c4fcca4cfa21836b","modified":1492190030333},{"_id":"themes/hueman/source/images/hexo.png","hash":"be31e741f29e8f276fc4488522764b645f145737","modified":1494148627538},{"_id":"themes/hueman/source/images/springboot.jpg","hash":"9a18d2f0d728f8a89c6828783fb5ff703747b7b5","modified":1493802449905},{"_id":"themes/hueman/source/js/insight.js","hash":"6ee84c42c2b230ff9e9bf605a444bd671d44f9e3","modified":1489280179000},{"_id":"themes/hueman/source/js/main.js","hash":"a15519ae8a397557cc594e8fb2f34fa9468f70fa","modified":1489280179000},{"_id":"themes/hueman/source/images/photo366748288653830057.jpg","hash":"b75ccea4fad3e025a0e8bef4048ba699fd574d3e","modified":1485567803071},{"_id":"source/_posts/kuliah/imk/Kritik-dan-Saran-terhadap-Website-KPM-Udinus.md","hash":"79bff338717986724cf996dbc773960441ad313c","modified":1492347460772},{"_id":"source/_posts/kuliah/imk/ui-ux-fill-in-form-dan-function-key.md","hash":"c9024c941775754629f4729ab4dda2da2b9815d4","modified":1492347437744},{"_id":"source/_posts/kuliah/imk/ui-ux_common-language-and-natural-language.md","hash":"d4b72cbb717206c02e4faef7c296561355b76536","modified":1492347446308},{"_id":"source/_posts/kuliah/imk/ui-ux_menu.md","hash":"66062948875e4eec27b4dba9ff0fe885c9da7bef","modified":1492347431760},{"_id":"source/_posts/kuliah/orakom/orakom-bagian-processor.md","hash":"9d3f96bec792b5bf66011f8869a269c9165b3bce","modified":1492436703945},{"_id":"source/_posts/kuliah/orakom/orakom-sistem-bilangan.md","hash":"d4db9b98a54e6594d85e0089d400f31b5dd00936","modified":1492435321888},{"_id":"source/_posts/kuliah/orakom/orakom_bagaimana-perangkat-elektronik-berjalan.md","hash":"a5c572287658b4404bda2e741884b41c2086e19f","modified":1492605475264},{"_id":"source/_posts/pemrograman/android/0-Introduction-to-Android.md","hash":"9660a80850b00041de08db555e0f0363dba91129","modified":1494148938887},{"_id":"source/_posts/pemrograman/android/1-view.md","hash":"237246eb1639a32470700fb5e7a8bcb22e78266a","modified":1494148943007},{"_id":"source/_posts/pemrograman/angular2/0-Introduction-to-Angular2.md","hash":"883a691ac548457602f60f08afb2aade60867753","modified":1494148919742},{"_id":"source/_posts/pemrograman/angular2/1-Setup-Project-Angular2.md","hash":"1366bf37357c553f7fd5525d7a41aab143c49dd0","modified":1494148923382},{"_id":"source/_posts/pemrograman/angular2/2-Component-dan-Module.md","hash":"111149528fcf5af0acf9f726bc978c6790c84bde","modified":1494148927294},{"_id":"source/_posts/pemrograman/angular2/3-Routing-Component.md","hash":"535336a14b9d3dae197744ee9cd50fbd6cc9e0e5","modified":1494148930598},{"_id":"source/_posts/pemrograman/hexo/0-Introduction-to-Hexo.md","hash":"dd46aab4a0ac19f0fe105b4547070dc693ef48cd","modified":1494136384238},{"_id":"source/_posts/pemrograman/spring/0-introduction-to-spring-boot.md","hash":"39def7fad1729deff983a8d69a3633eeb7d9d3fe","modified":1494149041113},{"_id":"source/_posts/pemrograman/spring/1-setup-project.md","hash":"bc64657986ea189bdaeca7f4b5960a18ba519182","modified":1494148861695},{"_id":"source/_posts/pemrograman/spring/2-membuat-web-sederhana-dengan-spring-boot-starter-web-dan-thymeleaf.md","hash":"4c3cbd81f78c5a86dd2bd19557740cabeac0ba48","modified":1494148865632},{"_id":"source/_posts/pemrograman/spring/3.1-crud-dengan-spring-data-jpa.md","hash":"28b5efc5c182789deac554e1526da752b82c3634","modified":1494148869696},{"_id":"source/_posts/pemrograman/spring/3.2-generate-content-dari-server-side-dengan-thymeleaf.md","hash":"44324ea271dd24033c6c9284687691dc01e99f28","modified":1494148873544},{"_id":"source/_posts/pemrograman/spring/3.2.1-menggunakan-paging-and-sorting-repository.md","hash":"dfe74095c2bb0486b090cd2035ab0b61c56d37c3","modified":1494148877548},{"_id":"source/_posts/pemrograman/spring/3.2.2-menggunakan-entity-manager-factory.md","hash":"f0f62cc5db94695d0b40e4d92924e1e8adcceb3e","modified":1494148881608},{"_id":"source/_posts/pemrograman/spring/3.3-generate-content-dari-client-side-dengan-AngularJS.md","hash":"ed3f3ba20c490dc3d414e93eb19ca77cd5c628f0","modified":1494148886296},{"_id":"source/_posts/pemrograman/spring/3.4-kardinalitas.md","hash":"b204154b088ce1f266829f62a1b6bd92952ff134","modified":1494148891148},{"_id":"source/_posts/pemrograman/spring/4-otorisasi-login-dengan-spring-security.md","hash":"94882955bc48d2659f572d56f6f4a075acdd718c","modified":1494148896053},{"_id":"source/_posts/pemrograman/spring/5-layout-dengan-thymeleaf.md","hash":"f54cec21d07147227dfc3d34abbd3e53e29e3ebf","modified":1494148900069},{"_id":"source/_posts/pemrograman/spring/6-jasper-report.md","hash":"d9663f7b3b4e9377f01f116dce36fd3900fedcbc","modified":1494148904501},{"_id":"themes/hueman/layout/common/post/date.ejs","hash":"198f75157a776b3e05eeb5da85b14a42027bd524","modified":1489280179000},{"_id":"themes/hueman/layout/common/post/gallery.ejs","hash":"659f019761116313169148ec61773e7b84abb739","modified":1489280179000},{"_id":"themes/hueman/layout/common/post/nav.ejs","hash":"c5f41ebf451cff39eaf116096604ce706a175767","modified":1489280179000},{"_id":"themes/hueman/layout/common/post/tag.ejs","hash":"2e966216256321aa0c76fe1b9be689601c76ef31","modified":1489280179000},{"_id":"themes/hueman/layout/common/post/title.ejs","hash":"6d19c61afb1f5f71c483be2ce37c6820ac2cd8b5","modified":1489280179000},{"_id":"themes/hueman/source/css/_highlight/agate.styl","hash":"601eb70448a16b918df132f6fc41e891ae053653","modified":1489280179000},{"_id":"themes/hueman/source/css/_highlight/androidstudio.styl","hash":"65d09f1b0e81c6a182f549fd3de51e59823c97ae","modified":1489280179000},{"_id":"themes/hueman/source/css/_highlight/arduino-light.styl","hash":"15e8572585cd708221c513dea4bdd89d8fe56c10","modified":1489280179000},{"_id":"themes/hueman/source/css/_highlight/arta.styl","hash":"1a5accc115f41d1b669ed708ac6a29abac876599","modified":1489280179000},{"_id":"themes/hueman/source/css/_highlight/ascetic.styl","hash":"32cff3bef6fac3760fe78f203096477052a90552","modified":1489280179000},{"_id":"themes/hueman/source/css/_highlight/atelier-cave-dark.styl","hash":"bc647b2c1d971d7cc947aa1ed66e9fd115261921","modified":1489280179000},{"_id":"themes/hueman/source/css/_highlight/atelier-cave-light.styl","hash":"a5be0744a7ecf4a08f600ade4cfd555afc67bc15","modified":1489280179000},{"_id":"themes/hueman/source/css/_highlight/atelier-dune-dark.styl","hash":"df50a85a4b14c7ca6e825d665594b91229d0e460","modified":1489280179000},{"_id":"themes/hueman/source/css/_highlight/atelier-dune-light.styl","hash":"931435fbc6f974e8ce9e32722680035d248a9dc1","modified":1489280179000},{"_id":"themes/hueman/source/css/_highlight/atelier-estuary-dark.styl","hash":"d84382bc8298f96730757391d3e761b7e640f406","modified":1489280179000},{"_id":"themes/hueman/source/css/_highlight/atelier-estuary-light.styl","hash":"344276ca9b27e51d4c907f76afe5d13cf8e60bdf","modified":1489280179000},{"_id":"themes/hueman/source/css/_highlight/atelier-forest-dark.styl","hash":"57c154c6045a038dc7df0a25927853e10bf48c4a","modified":1489280179000},{"_id":"themes/hueman/source/css/_highlight/atelier-forest-light.styl","hash":"95228d9f2102fad425536aac44b80b2cba1f5950","modified":1489280179000},{"_id":"themes/hueman/source/css/_highlight/atelier-heath-dark.styl","hash":"b0cf13b2233e7bc38342032d2d7296591a4c2bcf","modified":1489280179000},{"_id":"themes/hueman/source/css/_highlight/atelier-heath-light.styl","hash":"8c8c2e445abef85273be966d59770e9ced6aac21","modified":1489280179000},{"_id":"themes/hueman/source/css/_highlight/atelier-lakeside-dark.styl","hash":"bb0a8c4ad0dd8e3e7de7122ddf268fc42aa94acb","modified":1489280179000},{"_id":"themes/hueman/source/css/_highlight/atelier-lakeside-light.styl","hash":"2c54cb9bdb259ae3b5b29f63ac2469ed34b08578","modified":1489280179000},{"_id":"themes/hueman/source/css/_highlight/atelier-plateau-dark.styl","hash":"09c64f1a7052aec9070c36c0431df25216afaea1","modified":1489280179000},{"_id":"themes/hueman/source/css/_highlight/atelier-plateau-light.styl","hash":"d1a05fdd1ededc9063d181ab25bad55a164aeb4a","modified":1489280179000},{"_id":"themes/hueman/source/css/_highlight/atelier-savanna-dark.styl","hash":"a16c919a1ccf2f845488078fb341381bec46b1f3","modified":1489280179000},{"_id":"themes/hueman/source/css/_highlight/atelier-savanna-light.styl","hash":"f8244c93711c7cb59dd79d2df966806b30d171ea","modified":1489280179000},{"_id":"themes/hueman/source/css/_highlight/atelier-seaside-dark.styl","hash":"ce233a101daea7124cbfcd34add43ccfe2e1e1c7","modified":1489280179000},{"_id":"themes/hueman/source/css/_highlight/atelier-seaside-light.styl","hash":"0597342da6e2d0c5bdcc7d42dabb07322b1a4177","modified":1489280179000},{"_id":"themes/hueman/source/css/_highlight/atelier-sulphurpool-dark.styl","hash":"414b0cfc142f70afe359c16450b651e28bf7325a","modified":1489280179000},{"_id":"themes/hueman/source/css/_highlight/atelier-sulphurpool-light.styl","hash":"efa52713efc468abeeb2b9299704371583b857de","modified":1489280179000},{"_id":"themes/hueman/source/css/_highlight/brown-paper.styl","hash":"c2326ba20a5020a66ca7895258d18833327d4334","modified":1489280179000},{"_id":"themes/hueman/source/css/_highlight/brown-papersq.png","hash":"3a1332ede3a75a3d24f60b6ed69035b72da5e182","modified":1489280179000},{"_id":"themes/hueman/source/css/_highlight/codepen-embed.styl","hash":"f4dcc84d8e39f9831a5efe80e51923fc3054feb0","modified":1489280179000},{"_id":"themes/hueman/source/css/_highlight/color-brewer.styl","hash":"2a439d6214430e2f45dd4939b4dfe1fe1a20aa0f","modified":1489280179000},{"_id":"themes/hueman/source/css/_highlight/dark.styl","hash":"71ce56d311cc2f3a605f6e2c495ccd7236878404","modified":1489280179000},{"_id":"themes/hueman/source/css/_highlight/darkula.styl","hash":"ad0d5728d21645039c9f199e7a56814170ed3bab","modified":1489280179000},{"_id":"themes/hueman/source/css/_highlight/docco.styl","hash":"b1c176378bb275f2e8caa759f36294e42d614bf1","modified":1489280179000},{"_id":"themes/hueman/source/css/_highlight/far.styl","hash":"d9928010ffe71e80b97a5afcba1a4975efdd7372","modified":1489280179000},{"_id":"themes/hueman/source/css/_highlight/foundation.styl","hash":"bf8ddc94b4ad995b8b8805b5a4cf95004553fdac","modified":1489280179000},{"_id":"themes/hueman/source/css/_highlight/github-gist.styl","hash":"48211a03d33e7f7ada0b261162bea06676155a71","modified":1489280179000},{"_id":"themes/hueman/source/css/_highlight/github.styl","hash":"3336aeba324c6d34a6fd41fef9b47bc598f7064c","modified":1489280179000},{"_id":"themes/hueman/source/css/_highlight/googlecode.styl","hash":"bda816beee7b439814b514e6869dc678822be1bc","modified":1489280179000},{"_id":"themes/hueman/source/css/_highlight/grayscale.styl","hash":"bf37d8b8d1e602126c51526f0cc28807440228ed","modified":1489280179000},{"_id":"themes/hueman/source/css/_highlight/highlightjs.styl","hash":"0e198b7a59191c7a39b641a4ddd22c948edb9358","modified":1489280179000},{"_id":"themes/hueman/source/css/_highlight/hopscotch.styl","hash":"b374c6550b89b4751aedc8fbc3cf98d95bd70ead","modified":1489280179000},{"_id":"themes/hueman/source/css/_highlight/hybrid.styl","hash":"ea8d7ddc258b073308746385f5cb85aabb8bfb83","modified":1489280179000},{"_id":"themes/hueman/source/css/_highlight/idea.styl","hash":"a02967cb51c16a34e0ee895d33ded2b823d35b21","modified":1489280179000},{"_id":"themes/hueman/source/css/_highlight/index.styl","hash":"d421ed06c84f7a561b293f662a670bf132d41c63","modified":1489280179000},{"_id":"themes/hueman/source/css/_highlight/ir-black.styl","hash":"693078bbd72a2091ed30f506cc55949600b717af","modified":1489280179000},{"_id":"themes/hueman/source/css/_highlight/kimbie.dark.styl","hash":"45dbb168f22d739d0109745d2decd66b5f94e786","modified":1489280179000},{"_id":"themes/hueman/source/css/_highlight/kimbie.light.styl","hash":"61f8baed25be05288c8604d5070afbcd9f183f49","modified":1489280179000},{"_id":"themes/hueman/source/css/_highlight/magula.styl","hash":"16d323f989b1420a0f72ef989242ece9bf17a456","modified":1489280179000},{"_id":"themes/hueman/source/css/_highlight/mono-blue.styl","hash":"4c89a6ae29de67c0700585af82a60607e85df928","modified":1489280179000},{"_id":"themes/hueman/source/css/_highlight/monokai-sublime.styl","hash":"25aa2fc1dbe38593e7c7ebe525438a39574d9935","modified":1489280179000},{"_id":"themes/hueman/source/css/_highlight/monokai.styl","hash":"5a4fe9f957fd7a368c21b62a818403db4270452f","modified":1489280179000},{"_id":"themes/hueman/source/css/_highlight/obsidian.styl","hash":"55572bbcfee1de6c31ac54681bb00336f5ae826d","modified":1489280179000},{"_id":"themes/hueman/source/css/_highlight/paraiso-dark.styl","hash":"f1537bd868579fa018ecdbfd2eb922dcf3ba2cac","modified":1489280179000},{"_id":"themes/hueman/source/css/_highlight/paraiso-light.styl","hash":"d224d1df0eb3395d9eea1344cee945c228af2911","modified":1489280179000},{"_id":"themes/hueman/source/css/_highlight/pojoaque.jpg","hash":"c5fe6533b88b21f8d90d3d03954c6b29baa67791","modified":1489280179000},{"_id":"themes/hueman/source/css/_highlight/pojoaque.styl","hash":"77dae9dc41945359d17fe84dbd317f1b40b2ee33","modified":1489280179000},{"_id":"themes/hueman/source/css/_highlight/railscasts.styl","hash":"acd620f8bb7ff0e3fe5f9a22b4433ceef93a05e6","modified":1489280179000},{"_id":"themes/hueman/source/css/_highlight/rainbow.styl","hash":"ce73b858fc0aba0e57ef9fb136c083082746bc1d","modified":1489280179000},{"_id":"themes/hueman/source/css/_highlight/school-book.png","hash":"711ec983c874e093bb89eb77afcbdf6741fa61ee","modified":1489280179000},{"_id":"themes/hueman/source/css/_highlight/school-book.styl","hash":"d43560fe519a931ce6da7d57416d7aa148441b83","modified":1489280179000},{"_id":"themes/hueman/source/css/_highlight/solarized-dark.styl","hash":"702b9299a48c90124e3ac1d45f1591042f2beccc","modified":1489280179000},{"_id":"themes/hueman/source/css/_highlight/solarized-light.styl","hash":"aa0dd3fd25c464183b59c5575c9bee8756b397f2","modified":1489280179000},{"_id":"themes/hueman/source/css/_highlight/sunburst.styl","hash":"a0b5b5129547a23865d400cfa562ea0ac1ee3958","modified":1489280179000},{"_id":"themes/hueman/source/css/_highlight/tomorrow-night-blue.styl","hash":"8b3087d4422be6eb800935a22eb11e035341c4ba","modified":1489280179000},{"_id":"themes/hueman/source/css/_highlight/tomorrow-night-bright.styl","hash":"0ac6af6ecb446b5b60d6226748e4a6532db34f57","modified":1489280179000},{"_id":"themes/hueman/source/css/_highlight/tomorrow-night-eighties.styl","hash":"fa57b3bb7857a160fc856dbe319b31e30cc5d771","modified":1489280179000},{"_id":"themes/hueman/source/css/_highlight/tomorrow-night.styl","hash":"19b3080d4b066b40d50d7e7f297472482b5801fd","modified":1489280179000},{"_id":"themes/hueman/source/css/_highlight/tomorrow.styl","hash":"15779cf6846725c7c35fc56cac39047d7e0aec1c","modified":1489280179000},{"_id":"themes/hueman/source/css/_highlight/vs.styl","hash":"959a746f4b37aacb5d1d6ff1d57e0c045289d75d","modified":1489280179000},{"_id":"themes/hueman/source/css/_highlight/xcode.styl","hash":"5e8532ae8366dcf6a4ef5e4813dc3d42ab3d0a50","modified":1489280179000},{"_id":"themes/hueman/source/css/_highlight/zenburn.styl","hash":"fc5ec840435dad80964d04519d3f882ddc03746a","modified":1489280179000},{"_id":"themes/hueman/source/css/_partial/archive.styl","hash":"5e5fb791ab54f0acf33850f586f7aa8cb2782f3a","modified":1489280179000},{"_id":"themes/hueman/source/css/_partial/article.styl","hash":"1df1b76979f923b4c7fa39b8679fe234340aac11","modified":1489887145454},{"_id":"themes/hueman/source/css/_partial/assets.styl","hash":"3d95417663c5a737f064a31ab4ef52bac7fda8df","modified":1489280179000},{"_id":"themes/hueman/source/css/_partial/comment.styl","hash":"d2de8f2c1cf6236ead0800c2a1566e01e7ae0b44","modified":1489280179000},{"_id":"themes/hueman/source/css/_partial/footer.styl","hash":"8dffae4ac6a57e506e378a9ce44b85a15a912cad","modified":1489280179000},{"_id":"themes/hueman/source/css/_partial/header.styl","hash":"f94fcb4e2cbda45c8dc910ddb8ff4f19ff0644bf","modified":1489280179000},{"_id":"themes/hueman/source/css/_partial/insight.styl","hash":"3d66323e7b75ad197e80d7189a8d9216e1e1ef2f","modified":1489280179000},{"_id":"themes/hueman/source/css/_partial/nav.styl","hash":"587a9c9d304ed83eb0331a1d16693461805311c3","modified":1489280179000},{"_id":"themes/hueman/source/css/_partial/sidebar.styl","hash":"1e6255f1bfa1a820f70d5cfdadf2caa726bf853d","modified":1489280179000},{"_id":"themes/hueman/source/css/images/logo-header.png","hash":"a874be8f3e33831614a421d1a74d2c13bd5eba59","modified":1489280179000},{"_id":"themes/hueman/source/css/images/opacity-10.png","hash":"bbc979866c5b50e8adb348419154b28b1ff44d78","modified":1489280179000},{"_id":"themes/hueman/source/css/images/s-left.png","hash":"c8cac4f4e3492606fab93196364bd0f87d93bb98","modified":1489280179000},{"_id":"themes/hueman/source/css/images/thumb-default-small.png","hash":"e8403b97ed9251f9f5207765b0ce796c5000b4ba","modified":1489280179000},{"_id":"themes/hueman/source/css/images/thumb-default.png","hash":"2d0ba175d958d342494241c616a74d37f48059fb","modified":1489280179000},{"_id":"themes/hueman/source/images/kritik-kpm-udinus/kontak-person.png","hash":"201eafbf0a775c2f5a11bd8b9b0699d0e8069cda","modified":1492184340108},{"_id":"themes/hueman/source/images/kritik-kpm-udinus/pencarian.png","hash":"3873449d1afd4bc73153bb7e3cc6fa2b388b255e","modified":1492184390407},{"_id":"themes/hueman/source/libs/justified-gallery/jquery.justifiedGallery.min.js","hash":"b2683e7a872bc109b1756a65188a37cef7d0bd5c","modified":1489280179000},{"_id":"themes/hueman/source/libs/justified-gallery/justifiedGallery.min.css","hash":"13fbcba5e97aa88b748d94d3efc4718475279907","modified":1489280179000},{"_id":"themes/hueman/source/libs/source-code-pro/styles.css","hash":"93c308012738728f906cd4c5cfdb34189e0c712b","modified":1489280179000},{"_id":"themes/hueman/source/libs/titillium-web/styles.css","hash":"d98f0c50aae4c922cd0b663fa820fd7dff2dd9b1","modified":1489280179000},{"_id":"themes/hueman/source/images/kritik-kpm-udinus/agenda.png","hash":"0a51d167859470c9c7420f2afbb476e9ca4e3831","modified":1492184270361},{"_id":"themes/hueman/source/images/kritik-kpm-udinus/foto.png","hash":"a83b52d5d5ab57b0789bb1c581fd5d77d272dfd9","modified":1491904344112},{"_id":"themes/hueman/source/images/kritik-kpm-udinus/index.png","hash":"7f322eb59f583c128e73205cb2e4fc910e143bad","modified":1491904350224},{"_id":"themes/hueman/source/images/kritik-kpm-udinus/sambutan-kepala.png","hash":"a48949d340895c8c21b7d1f5ca9e09b17c86942e","modified":1492184502782},{"_id":"themes/hueman/source/images/ui-ux/menu/acyclic-network-menu.png","hash":"181c0e55f869c32b47c5d234288e099e6086ae2e","modified":1489881149379},{"_id":"themes/hueman/source/images/ui-ux/menu/cyclic-network-menu.png","hash":"ac992b2c1b5b4729049cb9baf1c329a8ef6974a1","modified":1489881131626},{"_id":"themes/hueman/source/images/ui-ux/menu/multiple-item.png","hash":"644e16f8d3ea0ccf6a3aeebc2614a2393cbb21dc","modified":1489880630516},{"_id":"themes/hueman/source/images/ui-ux/menu/multiple-selection.png","hash":"f3af9104efeda44201e3e4899ef1c100eb98f075","modified":1489880651907},{"_id":"themes/hueman/source/libs/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1482439833000},{"_id":"themes/hueman/source/libs/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1482439834000},{"_id":"themes/hueman/source/libs/lightgallery/css/lg-fb-comment-box.css","hash":"844ce27b8488968bccb3e50bb49184ba2aae0625","modified":1489280179000},{"_id":"themes/hueman/source/libs/lightgallery/css/lg-fb-comment-box.css.map","hash":"51e9df39edf0faa3f38c1bab0c1fa6c922b9edcb","modified":1489280179000},{"_id":"themes/hueman/source/libs/lightgallery/css/lg-fb-comment-box.min.css","hash":"05830fadb8454f39dcc98c8686eb4d5c24b71fc0","modified":1489280179000},{"_id":"themes/hueman/source/libs/lightgallery/css/lg-transitions.css","hash":"7871c28498d74451d6aa438c8d3a1817810a1e19","modified":1489280179000},{"_id":"themes/hueman/source/libs/lightgallery/css/lg-transitions.css.map","hash":"50c3348638b4d82fa08a449c690e8d2bb593005d","modified":1489280179000},{"_id":"themes/hueman/source/libs/lightgallery/css/lg-transitions.min.css","hash":"5c22e2073a4c96d6212c72135391b599e8d1359f","modified":1489280179000},{"_id":"themes/hueman/source/libs/lightgallery/css/lightgallery.css","hash":"bef55316a32e512d5a8940e5d0bfe8bf7a9c5c61","modified":1489280179000},{"_id":"themes/hueman/source/libs/lightgallery/css/lightgallery.css.map","hash":"3175b4107078674d25798979f7666f4daf31e624","modified":1489280179000},{"_id":"themes/hueman/source/libs/lightgallery/css/lightgallery.min.css","hash":"c9a2e19c932b56f4a2ce30c98910d10b74edb38a","modified":1489280179000},{"_id":"themes/hueman/source/libs/lightgallery/fonts/lg.eot","hash":"54caf05a81e33d7bf04f2e420736ce6f1de5f936","modified":1489280179000},{"_id":"themes/hueman/source/libs/lightgallery/fonts/lg.svg","hash":"9a732790adc004b22022cc60fd5f77ec4c8e3e5a","modified":1489280179000},{"_id":"themes/hueman/source/libs/lightgallery/fonts/lg.ttf","hash":"f6421c0c397311ae09f9257aa58bcd5e9720f493","modified":1489280179000},{"_id":"themes/hueman/source/libs/lightgallery/fonts/lg.woff","hash":"3048de344dd5cad4624e0127e58eaae4b576f574","modified":1489280179000},{"_id":"themes/hueman/source/libs/lightgallery/img/loading.gif","hash":"607810444094b8619fa4efa6273bc2a7e38dd4b4","modified":1489280179000},{"_id":"themes/hueman/source/libs/lightgallery/img/video-play.png","hash":"3ea484cdc04d2e4547f80cbf80001dcf248c94ef","modified":1489280179000},{"_id":"themes/hueman/source/libs/lightgallery/img/vimeo-play.png","hash":"6190254f2804904a4a1fa1eb390dfd334e416992","modified":1489280179000},{"_id":"themes/hueman/source/libs/lightgallery/img/youtube-play.png","hash":"fea6df9d9d43151f9c9d15f000adb30eb3e26fc4","modified":1489280179000},{"_id":"themes/hueman/source/libs/lightgallery/js/lg-autoplay.js","hash":"426bb78b93acfc39d533ea2bab1cec8dc289cf24","modified":1489280179000},{"_id":"themes/hueman/source/libs/lightgallery/js/lg-autoplay.min.js","hash":"d845741bcaf961579622880eb2a445257efad1ac","modified":1489280179000},{"_id":"themes/hueman/source/libs/lightgallery/js/lg-fullscreen.js","hash":"65c47ac65362854ba44b00a010bb01e3630209d8","modified":1489280179000},{"_id":"themes/hueman/source/libs/lightgallery/js/lg-fullscreen.min.js","hash":"b6b9e4022700b7faf2a5a175ba44a3bd938fdd20","modified":1489280179000},{"_id":"themes/hueman/source/libs/lightgallery/js/lg-hash.js","hash":"15d16516c5642d3de1566ff8fc9160136ccaa405","modified":1489280179000},{"_id":"themes/hueman/source/libs/lightgallery/js/lg-hash.min.js","hash":"43f1e1e720ab0e241c19b83aa26bd6848eab8edc","modified":1489280179000},{"_id":"themes/hueman/source/libs/lightgallery/js/lg-pager.js","hash":"8092c692b244bb26343eb03b91bd97deb9dafc9c","modified":1489280179000},{"_id":"themes/hueman/source/libs/lightgallery/js/lg-pager.min.js","hash":"25caa6ff65b1c6dee09941e795ae2633bdbab211","modified":1489280179000},{"_id":"themes/hueman/source/libs/lightgallery/js/lg-share.js","hash":"b7fb5f6474911060a351b0a6fe9dbb9ac3fb22aa","modified":1489280179000},{"_id":"themes/hueman/source/libs/lightgallery/js/lg-share.min.js","hash":"39c615f07c5d3aaa65a2c3068a30fdd6dd5c372d","modified":1489280179000},{"_id":"themes/hueman/source/libs/lightgallery/js/lg-thumbnail.js","hash":"3a6476b6df1d2bef4a21861a78776282a7a11ef1","modified":1489280179000},{"_id":"themes/hueman/source/libs/lightgallery/js/lg-thumbnail.min.js","hash":"18dd7d2909d1bfd6852f031d03e774b4428c512b","modified":1489280179000},{"_id":"themes/hueman/source/libs/lightgallery/js/lg-video.js","hash":"4f99b598f6bb18de9eca8c45c5b4373a03962367","modified":1489280179000},{"_id":"themes/hueman/source/libs/lightgallery/js/lg-video.min.js","hash":"032c001ab045a69856f9c3ed4a2a3bf12a8e310f","modified":1489280179000},{"_id":"themes/hueman/source/libs/lightgallery/js/lg-zoom.js","hash":"a758e2c8fcf710f9ff761da0eea0ab9321f3484d","modified":1489280179000},{"_id":"themes/hueman/source/libs/source-code-pro/fonts/mrl8jkM18OlOQN8JLgasD9V_2ngZ8dMf8fLgjYEouxg.woff2","hash":"942addaec4d3a60af33947a84a3d85f926015947","modified":1489280179000},{"_id":"themes/hueman/source/libs/source-code-pro/fonts/mrl8jkM18OlOQN8JLgasDy2Q8seG17bfDXYR_jUsrzg.woff2","hash":"b0e0bb5ef78db8b15d430d0b9be9d4329289a310","modified":1489280179000},{"_id":"themes/hueman/source/libs/titillium-web/fonts/7XUFZ5tgS-tD6QamInJTcSo_WB_cotcEMUw1LsIE8mM.woff2","hash":"6d17eac7fcc2866f10d1f2725a08ab749a6e978d","modified":1489280179000},{"_id":"themes/hueman/source/libs/titillium-web/fonts/7XUFZ5tgS-tD6QamInJTcZSnX671uNZIV63UdXh3Mg0.woff2","hash":"78029561e4c2ec565ea11c3f5bbd052b018af8a6","modified":1489280179000},{"_id":"themes/hueman/source/libs/titillium-web/fonts/anMUvcNT0H1YN4FII8wpr4-67659ICLY8bMrYhtePPA.woff2","hash":"4e5557954ec161edc03b6f971ddefee6179c1305","modified":1489280179000},{"_id":"themes/hueman/source/libs/titillium-web/fonts/anMUvcNT0H1YN4FII8wpr46gJz9aNFrmnwBdd69aqzY.woff2","hash":"1454a4753468b607c23deac9f5438cd0ed5cb35d","modified":1489280179000},{"_id":"themes/hueman/source/libs/titillium-web/fonts/anMUvcNT0H1YN4FII8wpr9INifKjd1RJ3NxxEi9Cy2w.woff2","hash":"1758c64c8acec4497735ccb5336b1a518d24024c","modified":1489280179000},{"_id":"themes/hueman/source/libs/titillium-web/fonts/anMUvcNT0H1YN4FII8wpr_SNRT0fZ5CX-AqRkMYgJJo.woff2","hash":"e2e2993940fc54ed41f26e39257fdbd824c05e81","modified":1489280179000},{"_id":"themes/hueman/source/libs/lightgallery/js/lightgallery.min.js","hash":"956ef9b706755318da69ad0b5d7786339d831251","modified":1489280179000},{"_id":"themes/hueman/source/libs/lightgallery/js/lightgallery.js","hash":"3cd19b33ba99efd5ba1d167da91720566d274b2c","modified":1489280179000},{"_id":"themes/hueman/source/libs/lightgallery/js/lg-zoom.min.js","hash":"15b49f9728439819ece15e4295cce254c87a4f45","modified":1489280179000},{"_id":"themes/hueman/source/images/kritik-kpm-udinus/copyright.png","hash":"11eec1de2c7999d661bc30df3c0fdbe09dfa2ae5","modified":1491904328108},{"_id":"themes/hueman/source/images/ui-ux/Ui-Ux.jpg","hash":"84566077f321a62d8f9143ad82ec1dc77274b3ad","modified":1489886614624},{"_id":"themes/hueman/source/images/ui-ux/menu/binary-menu.png","hash":"69ea40dd173a62d53742fe055fbc9e7a176bf735","modified":1489880611562},{"_id":"themes/hueman/source/images/ui-ux/menu/embedded-links.png","hash":"7394facc4c8d1113359d6f174aad188e42277d79","modified":1489880719845},{"_id":"themes/hueman/source/images/ui-ux/menu/linier-sequence.png","hash":"dba345b23df4934645b0aee1c79bff7db551b1c5","modified":1489880776201},{"_id":"themes/hueman/source/images/ui-ux/menu/pull-down-dan-pop-up.png","hash":"62b0daf907156f230e409de6b837bc850918bc3e","modified":1489880686000},{"_id":"themes/hueman/source/libs/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1482439833000},{"_id":"themes/hueman/source/libs/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1482439833000},{"_id":"themes/hueman/source/libs/jquery/2.0.3/jquery.min.js","hash":"a6eedf84389e1bc9f757bc2d19538f8c8d1cae9d","modified":1489280179000},{"_id":"themes/hueman/source/images/kritik-kpm-udinus/lamankosong.png","hash":"e352d3a38fbfbe81bc3dec32dda7903f3c9bbca9","modified":1491904355548},{"_id":"themes/hueman/source/images/ui-ux/menu/menu-maps.png","hash":"915762d9d1f4ca80d9a08d6554f2314f48f5bb2d","modified":1489881060174},{"_id":"themes/hueman/source/images/ui-ux/menu/simultaneus-menu.png","hash":"6dc9eb6b200dbe6d16c66401e32c63755064cbb3","modified":1489880791825},{"_id":"themes/hueman/source/libs/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1482439833000},{"_id":"themes/hueman/source/libs/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1482439833000},{"_id":"themes/hueman/source/libs/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1482439833000},{"_id":"themes/hueman/source/images/kritik-kpm-udinus/cp.png","hash":"51f136a1d2265b115cf52e9aafe66139947a6d10","modified":1491904339428},{"_id":"themes/hueman/source/images/kritik-kpm-udinus/home.png","hash":"c1f8e2bb1c0f3530da1f12cf7249534b35528ae5","modified":1491905630202},{"_id":"themes/hueman/source/images/ui-ux/menu/alphasliders.png","hash":"f2bc3953f09f8b56ee1be41bd8f2bcdfe90f25c0","modified":1489880710308},{"_id":"themes/hueman/source/images/ui-ux/menu/tree-structured-menus.png","hash":"3676706a7cb1da9af4693b2ebcd866c3603992c5","modified":1489880758844},{"_id":"themes/hueman/source/libs/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1482439833000},{"_id":"themes/hueman/source/images/ui-ux/menu/scrolling.png","hash":"040129dd91d55feb719928757623cc2d230cebb5","modified":1489880699606},{"_id":"themes/hueman/source/images/ui-ux/menu/iconic-menu.png","hash":"5f14c885f056a472e3e2542d34ec04963bec753e","modified":1489880731246},{"_id":"public/content.json","hash":"1ac97390a7d838afddb5e821fd63f95757057d6d","modified":1494149256540},{"_id":"public/search.xml","hash":"ce267a50a4e05995eb21b0f1d032ce2163a70f5f","modified":1494149259189},{"_id":"public/about/index.html","hash":"fd5885c176fbef76a38c044c03beaa0667b9116c","modified":1494149259341},{"_id":"public/2017/05/07/pemrograman/hexo/0-Introduction-to-Hexo/index.html","hash":"2177ea5ffd2ee85361c15d8d87d4ef150b3070db","modified":1494149259426},{"_id":"public/2017/05/07/pemrograman/android/0-Introduction-to-Android/index.html","hash":"df9cc0816e7eb864867de4ddce5bcc88afd773e2","modified":1494149259427},{"_id":"public/2017/04/28/pemrograman/angular2/3-Routing-Component/index.html","hash":"af4584a576776d5a48b4a54f786b3123a128e13c","modified":1494149259427},{"_id":"public/2017/04/28/pemrograman/angular2/2-Component-dan-Module/index.html","hash":"4ce5d5f8fd1bfccb1b747fe49afd00eac603edeb","modified":1494149259427},{"_id":"public/2017/04/28/pemrograman/angular2/1-Setup-Project-Angular2/index.html","hash":"8228463af6ca9ace28dd69e0baac30fa83993078","modified":1494149259427},{"_id":"public/2017/04/28/pemrograman/angular2/0-Introduction-to-Angular2/index.html","hash":"b84739924a653b233d4296b11097c7ff3b8c28ef","modified":1494149259427},{"_id":"public/2017/04/23/pemrograman/spring/6-jasper-report/index.html","hash":"2c6ad7f85322d3e91aab35426f440cc9771f39c4","modified":1494149259428},{"_id":"public/2017/04/23/pemrograman/spring/5-layout-dengan-thymeleaf/index.html","hash":"d032c9d3ebd0f84530acf5bdf9c0cfbfa4dff738","modified":1494149259428},{"_id":"public/2017/04/23/pemrograman/spring/4-otorisasi-login-dengan-spring-security/index.html","hash":"2764139d70df51159698dc207581bb3b982c2834","modified":1494149259428},{"_id":"public/2017/04/23/pemrograman/spring/3.4-kardinalitas/index.html","hash":"fe3eb8e3bf40e9321eda2b5cb08eb24760dc93fa","modified":1494149259428},{"_id":"public/2017/04/23/pemrograman/spring/3.3-generate-content-dari-client-side-dengan-AngularJS/index.html","hash":"9468bcf64986c0399df48e4db6febd1f724deae5","modified":1494149259428},{"_id":"public/2017/04/23/pemrograman/spring/3.2.2-menggunakan-entity-manager-factory/index.html","hash":"fd31003acd0acebd24f50a53a2a202707d8519e3","modified":1494149259428},{"_id":"public/2017/04/23/pemrograman/spring/3.2.1-menggunakan-paging-and-sorting-repository/index.html","hash":"b8c82cc6cbbd39beff05a53d123a71f5dc96c5ff","modified":1494149259429},{"_id":"public/2017/04/23/pemrograman/spring/3.2-generate-content-dari-server-side-dengan-thymeleaf/index.html","hash":"3e38d74e1e91c82de9c6afdc2ce373b6ac352938","modified":1494149259429},{"_id":"public/2017/04/23/pemrograman/spring/3.1-crud-dengan-spring-data-jpa/index.html","hash":"a98290b868e42b68a57436819ffdfef6e55ff580","modified":1494149259429},{"_id":"public/2017/04/23/pemrograman/spring/2-membuat-web-sederhana-dengan-spring-boot-starter-web-dan-thymeleaf/index.html","hash":"4d76839781564eb0728da82ca2c60b355d71ee98","modified":1494149259429},{"_id":"public/2017/04/23/pemrograman/android/1-view/index.html","hash":"bcbe24bbffd3c4dc8c70efa15f1cb1d6fe592360","modified":1494149259429},{"_id":"public/2017/04/23/pemrograman/spring/1-setup-project/index.html","hash":"0f75337c91de734e65575dbb3265883829a322d2","modified":1494149259429},{"_id":"public/2017/04/23/pemrograman/spring/0-introduction-to-spring-boot/index.html","hash":"cd40ab1c7a2a9fa5f87d4be8947c278274196ef1","modified":1494149259430},{"_id":"public/2017/04/17/kuliah/orakom/orakom-bagian-processor/index.html","hash":"a007c054a35742a01424470bc4566225ecfe2498","modified":1494149259430},{"_id":"public/2017/04/17/kuliah/orakom/orakom-sistem-bilangan/index.html","hash":"b585c0be1304fec6f1ed0d6c0f4e8296d8df4ea8","modified":1494149259430},{"_id":"public/2017/04/15/kuliah/orakom/orakom_bagaimana-perangkat-elektronik-berjalan/index.html","hash":"6650f7db0ea006d0d73e733a37aca1f08ec68fa9","modified":1494149259430},{"_id":"public/2017/04/14/kuliah/imk/ui-ux-fill-in-form-dan-function-key/index.html","hash":"6c218ea51cc782e515b52c721d83389e3cc17bf7","modified":1494149259430},{"_id":"public/2017/04/11/kuliah/imk/Kritik-dan-Saran-terhadap-Website-KPM-Udinus/index.html","hash":"6dae85d38a7f00e63e2ef07a6d3bb59ca670a4de","modified":1494149259430},{"_id":"public/2017/03/27/kuliah/imk/ui-ux_common-language-and-natural-language/index.html","hash":"bcc7dbbdd56720fe9286fe56160f6c0aa48c641c","modified":1494149259431},{"_id":"public/2017/03/19/kuliah/imk/ui-ux_menu/index.html","hash":"1655fc230641afaa5890e77b3f0c711de00f78ba","modified":1494149259431},{"_id":"public/archives/index.html","hash":"b87469819777d73c91ffb0cefc3c60779a3934b5","modified":1494149259431},{"_id":"public/archives/page/2/index.html","hash":"4117f650c74cbd1fc1505ba6d645baf326a61540","modified":1494149259431},{"_id":"public/archives/page/3/index.html","hash":"1fa7f2b24bf9516c48008699e512f972308bcea2","modified":1494149259431},{"_id":"public/archives/2017/index.html","hash":"06bab827db672eefefae5e2ce1450da5584f6df2","modified":1494149259431},{"_id":"public/archives/2017/page/2/index.html","hash":"ac7730ad6d46b6c6f8174ec928c8684b628cd9a9","modified":1494149259432},{"_id":"public/archives/2017/page/3/index.html","hash":"0cb60a471df86390b963110d85a42a7e5bffd241","modified":1494149259432},{"_id":"public/archives/2017/03/index.html","hash":"e9dcb0ab8a60f50cc51950a538543978fe273929","modified":1494149259432},{"_id":"public/archives/2017/04/index.html","hash":"4d5fe1b2271113547d7411c5c8f21178c1c1c5b1","modified":1494149259432},{"_id":"public/archives/2017/04/page/2/index.html","hash":"4232dc2f6a8fed503b26fcb7964bdc877aa0c020","modified":1494149259432},{"_id":"public/archives/2017/04/page/3/index.html","hash":"b915359fff331020549fc616f121bdb706200e4f","modified":1494149259432},{"_id":"public/archives/2017/05/index.html","hash":"e359572249f76cf014effa821b6e95f201a9e8c0","modified":1494149259433},{"_id":"public/categories/Teknologi/index.html","hash":"400f5aab1ceb6c8d42d325c0b5b588991b515c1b","modified":1494149259433},{"_id":"public/categories/Teknologi/Interaksi-Manusia-dan-Komputer/index.html","hash":"dbf6e5d6327f0f3e4eae5b0f4bd0569b9150c872","modified":1494149259433},{"_id":"public/categories/Teknologi/Organisasi-dan-Arsitektur-Komputer/index.html","hash":"6d4d3701dd6e9daed622859512847a4be5cb63cd","modified":1494149259433},{"_id":"public/categories/Pemrograman/index.html","hash":"849a578969fa6c14ec95c99d5de23320d4e88d8a","modified":1494149259433},{"_id":"public/categories/Pemrograman/page/2/index.html","hash":"000bedcc5ce5b9287ba42ad113b39236c66efeb3","modified":1494149259433},{"_id":"public/categories/Pemrograman/Android/index.html","hash":"4e478c8b7024037dcc7a0af24785e8d368814349","modified":1494149259434},{"_id":"public/categories/Pemrograman/Angular/index.html","hash":"d596ee2ba58cfef78b629b241f7d87e0b98caec1","modified":1494149259434},{"_id":"public/categories/Pemrograman/Hexo/index.html","hash":"8201efec529a88dcc2fb96da520f2efb9711f2cf","modified":1494149259434},{"_id":"public/categories/Pemrograman/Spring-Framework/index.html","hash":"fe4dbdc938124db8abf4bf0670bab80fed821b1c","modified":1494145965738},{"_id":"public/categories/Pemrograman/Spring-Framework/page/2/index.html","hash":"48b2ed0fb65967e038e3183b3a2d4455f6a612d4","modified":1494143325905},{"_id":"public/categories/Pemrograman/Spring-Framework/Spring-Boot/index.html","hash":"8fd31d356bdf8c98515f570131db8b3b504f55ef","modified":1494145965738},{"_id":"public/categories/Pemrograman/Spring-Framework/Spring-Boot/page/2/index.html","hash":"32fe94e00a792b279426a0a04839d4126910f537","modified":1494143325906},{"_id":"public/index.html","hash":"0309de04ea4e0f965e9a2f4120cb8e7d1226e4e7","modified":1494149259434},{"_id":"public/page/2/index.html","hash":"fbf3e0acd82ebcf2faaab913240f621abe900442","modified":1494149259434},{"_id":"public/page/3/index.html","hash":"3aa8caba1c0c3f7559f171cbc0c13d32aff6a699","modified":1494149259435},{"_id":"public/tags/ui-ux/index.html","hash":"f7496db5aad528ea93f7fb4518941156a2fbb7ee","modified":1494149259435},{"_id":"public/tags/komputer/index.html","hash":"2a215e031cec51ba2baa1821d41b95eac83cce68","modified":1494149259435},{"_id":"themes/hueman/source/images/android.png","hash":"0edf5c9e2281facd1e9610999f28809d4003368b","modified":1494148768326},{"_id":"themes/hueman/source/images/angular.png","hash":"f0191f8d50460c560d9e28b29e849b4f44ed0bf4","modified":1494148569560},{"_id":"themes/hueman/source/images/spring.png","hash":"7706ae26c11e26f8b1c0758b72a3e782f63ede5b","modified":1494149231119},{"_id":"themes/hueman/source/images/springboot.png","hash":"cdc0bba7672b836f9c42306a17a9625524780fb2","modified":1494148454603},{"_id":"public/categories/Pemrograman/Spring/index.html","hash":"9ab6e7ed3be6eb997f0261449f2e4d8692787776","modified":1494149259447},{"_id":"public/categories/Pemrograman/Spring/page/2/index.html","hash":"ae7ed4da4333436f20722d8b7755ec66dd63b10b","modified":1494149259447},{"_id":"public/images/hexo.png","hash":"be31e741f29e8f276fc4488522764b645f145737","modified":1494149259450},{"_id":"public/images/springboot.png","hash":"cdc0bba7672b836f9c42306a17a9625524780fb2","modified":1494149259451},{"_id":"public/images/angular.png","hash":"f0191f8d50460c560d9e28b29e849b4f44ed0bf4","modified":1494149259451},{"_id":"public/images/android.png","hash":"0edf5c9e2281facd1e9610999f28809d4003368b","modified":1494149259451},{"_id":"public/images/spring.png","hash":"7706ae26c11e26f8b1c0758b72a3e782f63ede5b","modified":1494149259451}],"Category":[{"name":"Teknologi","_id":"cj2ed41kv00038jlph4pb0n3k"},{"name":"Interaksi Manusia dan Komputer","parent":"cj2ed41kv00038jlph4pb0n3k","_id":"cj2ed41mf000i8jlpgamqvv8o"},{"name":"Organisasi dan Arsitektur Komputer","parent":"cj2ed41kv00038jlph4pb0n3k","_id":"cj2ed41n6000t8jlpfql6ilfq"},{"name":"Pemrograman","_id":"cj2ed41nu001a8jlp5xpq168r"},{"name":"Android","parent":"cj2ed41nu001a8jlp5xpq168r","_id":"cj2ed41oo001o8jlpbe1v0vsp"},{"name":"Angular","parent":"cj2ed41nu001a8jlp5xpq168r","_id":"cj2ed41or001r8jlphgmmg2z5"},{"name":"Hexo","parent":"cj2ed41nu001a8jlp5xpq168r","_id":"cj2ed41p600238jlpd2sr0lah"},{"name":"Spring Framework","parent":"cj2ed41nu001a8jlp5xpq168r","_id":"cj2ed41p800268jlprw8p156o"},{"name":"Spring Boot","parent":"cj2ed41p800268jlprw8p156o","_id":"cj2ed41pb002a8jlpkihy9j98"},{"name":"Spring","parent":"cj2ed41nu001a8jlp5xpq168r","_id":"cj2eh889u000r4nlpjg78752f"}],"Data":[],"Page":[{"title":"About","type":"about","_content":"\nMuhammad Hafidz\n","source":"about/index.md","raw":"---\ntitle: About\ntype: about\n---\n\nMuhammad Hafidz\n","date":"2017-04-13T22:51:02.303Z","updated":"2017-04-13T22:51:02.303Z","path":"about/index.html","comments":1,"layout":"page","_id":"cj2ed41c200008jlpqf8d6u47","content":"<p>Muhammad Hafidz</p>\n","excerpt":"","more":"<p>Muhammad Hafidz</p>\n"}],"Post":[{"title":"Kritik dan Saran terhadap Website KPM Udinus","date":"2017-04-11T08:43:58.000Z","_content":"\n# Sekilas Tentang KPM UDINUS\nKantor Penjaminan Mutu Univeristas Dian Nuswantoro adalah suatu badan internal di bawah Universitas Dian Nuswantoro yang bertujuan untuk mengembangkan sistem penjaminan mutu, menyelenggarakan sistem audit mutu internal dalam rangka pelaksanaan sistem penjaminan mutu dan menjamin perbaikan mutu secara terus menerus terhadap pencapaian kinerja penyelenggaraan pendidikan tinggi di Universitas Dian Nuswantoro.\n\n# Kritik dan Saran\n- Copyright telah kadaluarsa. Seharusnya selalu diperbaharui secara konsekuen. Kemudian perlu ditambahkan instansi (udinus) karena KPM sendiri berada di bawah udinus.\n\n![](/images/kritik-kpm-udinus/copyright.png)\n\n\n- Foto dari Anggota KPM tidak proporsional dan tidak rapi. Pada laman web terlalu kecil sedangkan pada mobile terlalu besar. Pada laman web foto tidak center dan penulisanya tidak rapi. Seharusnya kontenya dikonfigurasi agar progresive dan rapi. Kami menyarankan menggunakan grid system yang ada pada bootstrap agar lebih mudah dalam mengkonfigurasinya.\n\n![](/images/kritik-kpm-udinus/foto.png)\n\n\n- Tidak terdapat paging indeks halaman sehingga kontennya terlihat semua dan website terlihat tidak sedap di pandang mata. Seharusnya dikonfigurasi semisal untuk setiap laman hanya berisi 10 konten. Dan untuk mengakses konten lainya melalui indeks selanjutnya.\n\n![](/images/kritik-kpm-udinus/index.png)\n\n\n- Terdapat 2 tombol home pada halama utama yang membingungkan user. Seharusnya satu saja sudah cukup.\n\n![](/images/kritik-kpm-udinus/home.png)\n\n\n- Konten yang belum siap dipublikasikan sebaiknya tidak perlu di tampilkan di menu. (contohnya Pelatihan, Bantuan Teknis, Kunjungan dll)\n\n![](/images/kritik-kpm-udinus/cp.png)\n\n\n- Terdapat laman yang kontenya terlalu sepi, sehingga perlu ditambahkan konten lain yang relevan.\n\n![](/images/kritik-kpm-udinus/lamankosong.png)\n\n\n- Perlu ditambahkan fasilitash search untuk memudahkan user mencari konten yang dikehendaki.\n\n![](/images/kritik-kpm-udinus/pencarian.png)\n\n\n- Perlu dicantumkan kontak person pada bagian bawah web. Sehingga apabila terjadi permasalahan pada webiste dan sebagainya dapat langsung ditanggulangi. Seperti pada  http://kjm.ugm.ac.id/\n\n![](/images/kritik-kpm-udinus/kontak-person.png)\n\n\n- Perlu ditambahkan jadwal agenda kegiatan mengenai kpm. Seperti pada http://kjm.ugm.ac.id/\n\n![](/images/kritik-kpm-udinus/agenda.png)\n\n\n- Perlu ditambahkan laman mengenai sambutan ketua kpm untuk menambah kesan hangat kepada pengunjung  webste. Seperti pada http://kjm.ugm.ac.id/sambutan-rektor-universitas-gadjah-mada-prof-dr-pratikno-m-soc-sc/\n\n![](/images/kritik-kpm-udinus/sambutan-kepala.png)\n","source":"_posts/kuliah/imk/Kritik-dan-Saran-terhadap-Website-KPM-Udinus.md","raw":"---\ntitle: Kritik dan Saran terhadap Website KPM Udinus\ndate: 2017-04-11 15:43:58\ntags:\n\ncategories:\n  - Teknologi\n  - Interaksi Manusia dan Komputer\n\n---\n\n# Sekilas Tentang KPM UDINUS\nKantor Penjaminan Mutu Univeristas Dian Nuswantoro adalah suatu badan internal di bawah Universitas Dian Nuswantoro yang bertujuan untuk mengembangkan sistem penjaminan mutu, menyelenggarakan sistem audit mutu internal dalam rangka pelaksanaan sistem penjaminan mutu dan menjamin perbaikan mutu secara terus menerus terhadap pencapaian kinerja penyelenggaraan pendidikan tinggi di Universitas Dian Nuswantoro.\n\n# Kritik dan Saran\n- Copyright telah kadaluarsa. Seharusnya selalu diperbaharui secara konsekuen. Kemudian perlu ditambahkan instansi (udinus) karena KPM sendiri berada di bawah udinus.\n\n![](/images/kritik-kpm-udinus/copyright.png)\n\n\n- Foto dari Anggota KPM tidak proporsional dan tidak rapi. Pada laman web terlalu kecil sedangkan pada mobile terlalu besar. Pada laman web foto tidak center dan penulisanya tidak rapi. Seharusnya kontenya dikonfigurasi agar progresive dan rapi. Kami menyarankan menggunakan grid system yang ada pada bootstrap agar lebih mudah dalam mengkonfigurasinya.\n\n![](/images/kritik-kpm-udinus/foto.png)\n\n\n- Tidak terdapat paging indeks halaman sehingga kontennya terlihat semua dan website terlihat tidak sedap di pandang mata. Seharusnya dikonfigurasi semisal untuk setiap laman hanya berisi 10 konten. Dan untuk mengakses konten lainya melalui indeks selanjutnya.\n\n![](/images/kritik-kpm-udinus/index.png)\n\n\n- Terdapat 2 tombol home pada halama utama yang membingungkan user. Seharusnya satu saja sudah cukup.\n\n![](/images/kritik-kpm-udinus/home.png)\n\n\n- Konten yang belum siap dipublikasikan sebaiknya tidak perlu di tampilkan di menu. (contohnya Pelatihan, Bantuan Teknis, Kunjungan dll)\n\n![](/images/kritik-kpm-udinus/cp.png)\n\n\n- Terdapat laman yang kontenya terlalu sepi, sehingga perlu ditambahkan konten lain yang relevan.\n\n![](/images/kritik-kpm-udinus/lamankosong.png)\n\n\n- Perlu ditambahkan fasilitash search untuk memudahkan user mencari konten yang dikehendaki.\n\n![](/images/kritik-kpm-udinus/pencarian.png)\n\n\n- Perlu dicantumkan kontak person pada bagian bawah web. Sehingga apabila terjadi permasalahan pada webiste dan sebagainya dapat langsung ditanggulangi. Seperti pada  http://kjm.ugm.ac.id/\n\n![](/images/kritik-kpm-udinus/kontak-person.png)\n\n\n- Perlu ditambahkan jadwal agenda kegiatan mengenai kpm. Seperti pada http://kjm.ugm.ac.id/\n\n![](/images/kritik-kpm-udinus/agenda.png)\n\n\n- Perlu ditambahkan laman mengenai sambutan ketua kpm untuk menambah kesan hangat kepada pengunjung  webste. Seperti pada http://kjm.ugm.ac.id/sambutan-rektor-universitas-gadjah-mada-prof-dr-pratikno-m-soc-sc/\n\n![](/images/kritik-kpm-udinus/sambutan-kepala.png)\n","slug":"kuliah/imk/Kritik-dan-Saran-terhadap-Website-KPM-Udinus","published":1,"updated":"2017-04-16T12:57:40.772Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj2ed41kc00018jlpv8gzjc8h","content":"<h1 id=\"Sekilas-Tentang-KPM-UDINUS\"><a href=\"#Sekilas-Tentang-KPM-UDINUS\" class=\"headerlink\" title=\"Sekilas Tentang KPM UDINUS\"></a>Sekilas Tentang KPM UDINUS</h1><p>Kantor Penjaminan Mutu Univeristas Dian Nuswantoro adalah suatu badan internal di bawah Universitas Dian Nuswantoro yang bertujuan untuk mengembangkan sistem penjaminan mutu, menyelenggarakan sistem audit mutu internal dalam rangka pelaksanaan sistem penjaminan mutu dan menjamin perbaikan mutu secara terus menerus terhadap pencapaian kinerja penyelenggaraan pendidikan tinggi di Universitas Dian Nuswantoro.</p>\n<h1 id=\"Kritik-dan-Saran\"><a href=\"#Kritik-dan-Saran\" class=\"headerlink\" title=\"Kritik dan Saran\"></a>Kritik dan Saran</h1><ul>\n<li>Copyright telah kadaluarsa. Seharusnya selalu diperbaharui secara konsekuen. Kemudian perlu ditambahkan instansi (udinus) karena KPM sendiri berada di bawah udinus.</li>\n</ul>\n<p><img src=\"/images/kritik-kpm-udinus/copyright.png\" alt=\"\"></p>\n<ul>\n<li>Foto dari Anggota KPM tidak proporsional dan tidak rapi. Pada laman web terlalu kecil sedangkan pada mobile terlalu besar. Pada laman web foto tidak center dan penulisanya tidak rapi. Seharusnya kontenya dikonfigurasi agar progresive dan rapi. Kami menyarankan menggunakan grid system yang ada pada bootstrap agar lebih mudah dalam mengkonfigurasinya.</li>\n</ul>\n<p><img src=\"/images/kritik-kpm-udinus/foto.png\" alt=\"\"></p>\n<ul>\n<li>Tidak terdapat paging indeks halaman sehingga kontennya terlihat semua dan website terlihat tidak sedap di pandang mata. Seharusnya dikonfigurasi semisal untuk setiap laman hanya berisi 10 konten. Dan untuk mengakses konten lainya melalui indeks selanjutnya.</li>\n</ul>\n<p><img src=\"/images/kritik-kpm-udinus/index.png\" alt=\"\"></p>\n<ul>\n<li>Terdapat 2 tombol home pada halama utama yang membingungkan user. Seharusnya satu saja sudah cukup.</li>\n</ul>\n<p><img src=\"/images/kritik-kpm-udinus/home.png\" alt=\"\"></p>\n<ul>\n<li>Konten yang belum siap dipublikasikan sebaiknya tidak perlu di tampilkan di menu. (contohnya Pelatihan, Bantuan Teknis, Kunjungan dll)</li>\n</ul>\n<p><img src=\"/images/kritik-kpm-udinus/cp.png\" alt=\"\"></p>\n<ul>\n<li>Terdapat laman yang kontenya terlalu sepi, sehingga perlu ditambahkan konten lain yang relevan.</li>\n</ul>\n<p><img src=\"/images/kritik-kpm-udinus/lamankosong.png\" alt=\"\"></p>\n<ul>\n<li>Perlu ditambahkan fasilitash search untuk memudahkan user mencari konten yang dikehendaki.</li>\n</ul>\n<p><img src=\"/images/kritik-kpm-udinus/pencarian.png\" alt=\"\"></p>\n<ul>\n<li>Perlu dicantumkan kontak person pada bagian bawah web. Sehingga apabila terjadi permasalahan pada webiste dan sebagainya dapat langsung ditanggulangi. Seperti pada  <a href=\"http://kjm.ugm.ac.id/\" target=\"_blank\" rel=\"external\">http://kjm.ugm.ac.id/</a></li>\n</ul>\n<p><img src=\"/images/kritik-kpm-udinus/kontak-person.png\" alt=\"\"></p>\n<ul>\n<li>Perlu ditambahkan jadwal agenda kegiatan mengenai kpm. Seperti pada <a href=\"http://kjm.ugm.ac.id/\" target=\"_blank\" rel=\"external\">http://kjm.ugm.ac.id/</a></li>\n</ul>\n<p><img src=\"/images/kritik-kpm-udinus/agenda.png\" alt=\"\"></p>\n<ul>\n<li>Perlu ditambahkan laman mengenai sambutan ketua kpm untuk menambah kesan hangat kepada pengunjung  webste. Seperti pada <a href=\"http://kjm.ugm.ac.id/sambutan-rektor-universitas-gadjah-mada-prof-dr-pratikno-m-soc-sc/\" target=\"_blank\" rel=\"external\">http://kjm.ugm.ac.id/sambutan-rektor-universitas-gadjah-mada-prof-dr-pratikno-m-soc-sc/</a></li>\n</ul>\n<p><img src=\"/images/kritik-kpm-udinus/sambutan-kepala.png\" alt=\"\"></p>\n","excerpt":"","more":"<h1 id=\"Sekilas-Tentang-KPM-UDINUS\"><a href=\"#Sekilas-Tentang-KPM-UDINUS\" class=\"headerlink\" title=\"Sekilas Tentang KPM UDINUS\"></a>Sekilas Tentang KPM UDINUS</h1><p>Kantor Penjaminan Mutu Univeristas Dian Nuswantoro adalah suatu badan internal di bawah Universitas Dian Nuswantoro yang bertujuan untuk mengembangkan sistem penjaminan mutu, menyelenggarakan sistem audit mutu internal dalam rangka pelaksanaan sistem penjaminan mutu dan menjamin perbaikan mutu secara terus menerus terhadap pencapaian kinerja penyelenggaraan pendidikan tinggi di Universitas Dian Nuswantoro.</p>\n<h1 id=\"Kritik-dan-Saran\"><a href=\"#Kritik-dan-Saran\" class=\"headerlink\" title=\"Kritik dan Saran\"></a>Kritik dan Saran</h1><ul>\n<li>Copyright telah kadaluarsa. Seharusnya selalu diperbaharui secara konsekuen. Kemudian perlu ditambahkan instansi (udinus) karena KPM sendiri berada di bawah udinus.</li>\n</ul>\n<p><img src=\"/images/kritik-kpm-udinus/copyright.png\" alt=\"\"></p>\n<ul>\n<li>Foto dari Anggota KPM tidak proporsional dan tidak rapi. Pada laman web terlalu kecil sedangkan pada mobile terlalu besar. Pada laman web foto tidak center dan penulisanya tidak rapi. Seharusnya kontenya dikonfigurasi agar progresive dan rapi. Kami menyarankan menggunakan grid system yang ada pada bootstrap agar lebih mudah dalam mengkonfigurasinya.</li>\n</ul>\n<p><img src=\"/images/kritik-kpm-udinus/foto.png\" alt=\"\"></p>\n<ul>\n<li>Tidak terdapat paging indeks halaman sehingga kontennya terlihat semua dan website terlihat tidak sedap di pandang mata. Seharusnya dikonfigurasi semisal untuk setiap laman hanya berisi 10 konten. Dan untuk mengakses konten lainya melalui indeks selanjutnya.</li>\n</ul>\n<p><img src=\"/images/kritik-kpm-udinus/index.png\" alt=\"\"></p>\n<ul>\n<li>Terdapat 2 tombol home pada halama utama yang membingungkan user. Seharusnya satu saja sudah cukup.</li>\n</ul>\n<p><img src=\"/images/kritik-kpm-udinus/home.png\" alt=\"\"></p>\n<ul>\n<li>Konten yang belum siap dipublikasikan sebaiknya tidak perlu di tampilkan di menu. (contohnya Pelatihan, Bantuan Teknis, Kunjungan dll)</li>\n</ul>\n<p><img src=\"/images/kritik-kpm-udinus/cp.png\" alt=\"\"></p>\n<ul>\n<li>Terdapat laman yang kontenya terlalu sepi, sehingga perlu ditambahkan konten lain yang relevan.</li>\n</ul>\n<p><img src=\"/images/kritik-kpm-udinus/lamankosong.png\" alt=\"\"></p>\n<ul>\n<li>Perlu ditambahkan fasilitash search untuk memudahkan user mencari konten yang dikehendaki.</li>\n</ul>\n<p><img src=\"/images/kritik-kpm-udinus/pencarian.png\" alt=\"\"></p>\n<ul>\n<li>Perlu dicantumkan kontak person pada bagian bawah web. Sehingga apabila terjadi permasalahan pada webiste dan sebagainya dapat langsung ditanggulangi. Seperti pada  <a href=\"http://kjm.ugm.ac.id/\">http://kjm.ugm.ac.id/</a></li>\n</ul>\n<p><img src=\"/images/kritik-kpm-udinus/kontak-person.png\" alt=\"\"></p>\n<ul>\n<li>Perlu ditambahkan jadwal agenda kegiatan mengenai kpm. Seperti pada <a href=\"http://kjm.ugm.ac.id/\">http://kjm.ugm.ac.id/</a></li>\n</ul>\n<p><img src=\"/images/kritik-kpm-udinus/agenda.png\" alt=\"\"></p>\n<ul>\n<li>Perlu ditambahkan laman mengenai sambutan ketua kpm untuk menambah kesan hangat kepada pengunjung  webste. Seperti pada <a href=\"http://kjm.ugm.ac.id/sambutan-rektor-universitas-gadjah-mada-prof-dr-pratikno-m-soc-sc/\">http://kjm.ugm.ac.id/sambutan-rektor-universitas-gadjah-mada-prof-dr-pratikno-m-soc-sc/</a></li>\n</ul>\n<p><img src=\"/images/kritik-kpm-udinus/sambutan-kepala.png\" alt=\"\"></p>\n"},{"title":"Fill in form dan Function Key","date":"2017-04-14T15:27:25.000Z","_content":"![](/images/ui-ux/Ui-Ux.jpg)\n# FILL IN FORM\n\n## Definisi Fill in Form :\n   Sebuah tabel data yang diwajibkan diisi oleh user, data tersebut biasanya digunakan untuk sebuah pendaftaran.\n   Data yang diinputkan umumnya banyak keakuratan data, misal fill in form memerintahkan user untuk memasukkan data pribadi ( nama, umur, jenis kelamin dst ).\n\n\n\n## Hal yang perlu diperhatikan terkait Fill In Form :\n   - Keyboard.\n   - Kegunaan Tab atau Mouse untuk memindahkan cursor.\n   - Maksud dari masing - masing field dan label.\n   - Metode dalam mengoreksi kesalahan.\n   - Kegunaan Enter dan Return.\n\n\n## Pedoman dalam membuat Fill Inform :\n\n   - Berikan judul yang jelas dan memiliki arti.\n   - Instruksi yang komprehensif.\n   - Pengelompokkan dan pengurutan secara logikal.\n   - Layout ( Desain tata letak ) yang mudah dilihat.\n   - Berikan nama field yang dikenal secara umum.\n   - Berikan tempat yang jelas untuk menginputkan data,\n   - Pergerakan kursor yang nyaman.\n   - Berikan koreksi eror / penanganan kesalahan untuk setiap karakter  tidak tepat yang diinputkan.\n   - Sertakan informasi mengenai status pengisian form.\n\n\n## Kelebihan Fill In Form :\n\n   - Keterbiasaan Pengguna dalam Mengisi Form dapat mempermudah pengisian.\n   - Beban memori rendah.\n   - Perancangan yang mudah dengan berbagai alat/Software bantu perancangan tampilan.\n   - Isian Formulir yang disederhanakan.\n\n## Kekurangan Fill In Form :\n\n   - Bila tak terbiasa, membutuhkan waktu bagi user untuk memahami dan mengisi form.\n   - Jika Formulir bermenu datar, akan memakan ruang pada layar.\n   - Pembuatan data pertanyaan harus logis dan tersusun dengan jelas jika tidak akan membuat user kebingungan.\n\n\n# FUNCTION KEYS\n\n## Pendahuluan :\n   Tahun 1986, IBM ( International Business Machine ) menambahkan beberapa tombol fungsi pada keyboard standard. Tombol ini dapat dipergunakan sebagai perintah khusus yang disertakan pada sistem operasi maupun aplikasi dan disebut function keys.\n   Key Modal Styles : Penyampaian \"aksi\" melalui penekanan tombol-tombol yang diprogram sebelumnya untuk menjalankan perintah tertentu.\n\n## Definisi :\n  Tombol khusus yang terdapat pada keyboard yang memberikan masukan tanpa berhubungan dengan setiap karakter F1 s/d F12. Contoh Fungsi umumnya :\n     ```\n     F1 = Help.\n     F2 = Merubah nama file.\n     F3 = Search.\n     alt + F4 = Menutup program yang sedang berjalan.\n     F5 = Refresh.\n     F6 = Memindahkan kursor ke Address bar.\n     F7 = memeriksa ejaan/tata bahasa (Ms. Word).\n     F8 = Tombol fungsi yang digunakan untuk masuk ke menu startup windows, biasa digunakan masuk ke Windows Safe Mode.\n     F9 = Untuk membuka toolbar Measurements pada Quark 5.0.\n     shift + F10 = Menampilkan menu shortcut ( MS Word ).\n     F11 = Full Screen pada browser.\n     shift + F12 = Save As ( MS. Word ).\n     ```\n\n## Kelebihan Function Keys :\n   - Mempermudah pekerjaan.\n   - Kecepatan yang lebih tinggi dan praktis.\n   - Dapat menjadi pengganti input saat mouse sedang error.\n\n\nKekurangan Function Keys :\n   - Jarang Digunakan dan Diketahui oleh pengguna - pengguna baru.\n","source":"_posts/kuliah/imk/ui-ux-fill-in-form-dan-function-key.md","raw":"---\ntitle: Fill in form dan Function Key\ndate: 2017-04-14 22:27:25\ntags:\n  - ui-ux\ncategories:\n  - Teknologi\n  - Interaksi Manusia dan Komputer\n\n---\n![](/images/ui-ux/Ui-Ux.jpg)\n# FILL IN FORM\n\n## Definisi Fill in Form :\n   Sebuah tabel data yang diwajibkan diisi oleh user, data tersebut biasanya digunakan untuk sebuah pendaftaran.\n   Data yang diinputkan umumnya banyak keakuratan data, misal fill in form memerintahkan user untuk memasukkan data pribadi ( nama, umur, jenis kelamin dst ).\n\n\n\n## Hal yang perlu diperhatikan terkait Fill In Form :\n   - Keyboard.\n   - Kegunaan Tab atau Mouse untuk memindahkan cursor.\n   - Maksud dari masing - masing field dan label.\n   - Metode dalam mengoreksi kesalahan.\n   - Kegunaan Enter dan Return.\n\n\n## Pedoman dalam membuat Fill Inform :\n\n   - Berikan judul yang jelas dan memiliki arti.\n   - Instruksi yang komprehensif.\n   - Pengelompokkan dan pengurutan secara logikal.\n   - Layout ( Desain tata letak ) yang mudah dilihat.\n   - Berikan nama field yang dikenal secara umum.\n   - Berikan tempat yang jelas untuk menginputkan data,\n   - Pergerakan kursor yang nyaman.\n   - Berikan koreksi eror / penanganan kesalahan untuk setiap karakter  tidak tepat yang diinputkan.\n   - Sertakan informasi mengenai status pengisian form.\n\n\n## Kelebihan Fill In Form :\n\n   - Keterbiasaan Pengguna dalam Mengisi Form dapat mempermudah pengisian.\n   - Beban memori rendah.\n   - Perancangan yang mudah dengan berbagai alat/Software bantu perancangan tampilan.\n   - Isian Formulir yang disederhanakan.\n\n## Kekurangan Fill In Form :\n\n   - Bila tak terbiasa, membutuhkan waktu bagi user untuk memahami dan mengisi form.\n   - Jika Formulir bermenu datar, akan memakan ruang pada layar.\n   - Pembuatan data pertanyaan harus logis dan tersusun dengan jelas jika tidak akan membuat user kebingungan.\n\n\n# FUNCTION KEYS\n\n## Pendahuluan :\n   Tahun 1986, IBM ( International Business Machine ) menambahkan beberapa tombol fungsi pada keyboard standard. Tombol ini dapat dipergunakan sebagai perintah khusus yang disertakan pada sistem operasi maupun aplikasi dan disebut function keys.\n   Key Modal Styles : Penyampaian \"aksi\" melalui penekanan tombol-tombol yang diprogram sebelumnya untuk menjalankan perintah tertentu.\n\n## Definisi :\n  Tombol khusus yang terdapat pada keyboard yang memberikan masukan tanpa berhubungan dengan setiap karakter F1 s/d F12. Contoh Fungsi umumnya :\n     ```\n     F1 = Help.\n     F2 = Merubah nama file.\n     F3 = Search.\n     alt + F4 = Menutup program yang sedang berjalan.\n     F5 = Refresh.\n     F6 = Memindahkan kursor ke Address bar.\n     F7 = memeriksa ejaan/tata bahasa (Ms. Word).\n     F8 = Tombol fungsi yang digunakan untuk masuk ke menu startup windows, biasa digunakan masuk ke Windows Safe Mode.\n     F9 = Untuk membuka toolbar Measurements pada Quark 5.0.\n     shift + F10 = Menampilkan menu shortcut ( MS Word ).\n     F11 = Full Screen pada browser.\n     shift + F12 = Save As ( MS. Word ).\n     ```\n\n## Kelebihan Function Keys :\n   - Mempermudah pekerjaan.\n   - Kecepatan yang lebih tinggi dan praktis.\n   - Dapat menjadi pengganti input saat mouse sedang error.\n\n\nKekurangan Function Keys :\n   - Jarang Digunakan dan Diketahui oleh pengguna - pengguna baru.\n","slug":"kuliah/imk/ui-ux-fill-in-form-dan-function-key","published":1,"updated":"2017-04-16T12:57:17.744Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj2ed41kl00028jlpbgql58cl","content":"<p><img src=\"/images/ui-ux/Ui-Ux.jpg\" alt=\"\"></p>\n<h1 id=\"FILL-IN-FORM\"><a href=\"#FILL-IN-FORM\" class=\"headerlink\" title=\"FILL IN FORM\"></a>FILL IN FORM</h1><h2 id=\"Definisi-Fill-in-Form\"><a href=\"#Definisi-Fill-in-Form\" class=\"headerlink\" title=\"Definisi Fill in Form :\"></a>Definisi Fill in Form :</h2><p>   Sebuah tabel data yang diwajibkan diisi oleh user, data tersebut biasanya digunakan untuk sebuah pendaftaran.<br>   Data yang diinputkan umumnya banyak keakuratan data, misal fill in form memerintahkan user untuk memasukkan data pribadi ( nama, umur, jenis kelamin dst ).</p>\n<h2 id=\"Hal-yang-perlu-diperhatikan-terkait-Fill-In-Form\"><a href=\"#Hal-yang-perlu-diperhatikan-terkait-Fill-In-Form\" class=\"headerlink\" title=\"Hal yang perlu diperhatikan terkait Fill In Form :\"></a>Hal yang perlu diperhatikan terkait Fill In Form :</h2><ul>\n<li>Keyboard.</li>\n<li>Kegunaan Tab atau Mouse untuk memindahkan cursor.</li>\n<li>Maksud dari masing - masing field dan label.</li>\n<li>Metode dalam mengoreksi kesalahan.</li>\n<li>Kegunaan Enter dan Return.</li>\n</ul>\n<h2 id=\"Pedoman-dalam-membuat-Fill-Inform\"><a href=\"#Pedoman-dalam-membuat-Fill-Inform\" class=\"headerlink\" title=\"Pedoman dalam membuat Fill Inform :\"></a>Pedoman dalam membuat Fill Inform :</h2><ul>\n<li>Berikan judul yang jelas dan memiliki arti.</li>\n<li>Instruksi yang komprehensif.</li>\n<li>Pengelompokkan dan pengurutan secara logikal.</li>\n<li>Layout ( Desain tata letak ) yang mudah dilihat.</li>\n<li>Berikan nama field yang dikenal secara umum.</li>\n<li>Berikan tempat yang jelas untuk menginputkan data,</li>\n<li>Pergerakan kursor yang nyaman.</li>\n<li>Berikan koreksi eror / penanganan kesalahan untuk setiap karakter  tidak tepat yang diinputkan.</li>\n<li>Sertakan informasi mengenai status pengisian form.</li>\n</ul>\n<h2 id=\"Kelebihan-Fill-In-Form\"><a href=\"#Kelebihan-Fill-In-Form\" class=\"headerlink\" title=\"Kelebihan Fill In Form :\"></a>Kelebihan Fill In Form :</h2><ul>\n<li>Keterbiasaan Pengguna dalam Mengisi Form dapat mempermudah pengisian.</li>\n<li>Beban memori rendah.</li>\n<li>Perancangan yang mudah dengan berbagai alat/Software bantu perancangan tampilan.</li>\n<li>Isian Formulir yang disederhanakan.</li>\n</ul>\n<h2 id=\"Kekurangan-Fill-In-Form\"><a href=\"#Kekurangan-Fill-In-Form\" class=\"headerlink\" title=\"Kekurangan Fill In Form :\"></a>Kekurangan Fill In Form :</h2><ul>\n<li>Bila tak terbiasa, membutuhkan waktu bagi user untuk memahami dan mengisi form.</li>\n<li>Jika Formulir bermenu datar, akan memakan ruang pada layar.</li>\n<li>Pembuatan data pertanyaan harus logis dan tersusun dengan jelas jika tidak akan membuat user kebingungan.</li>\n</ul>\n<h1 id=\"FUNCTION-KEYS\"><a href=\"#FUNCTION-KEYS\" class=\"headerlink\" title=\"FUNCTION KEYS\"></a>FUNCTION KEYS</h1><h2 id=\"Pendahuluan\"><a href=\"#Pendahuluan\" class=\"headerlink\" title=\"Pendahuluan :\"></a>Pendahuluan :</h2><p>   Tahun 1986, IBM ( International Business Machine ) menambahkan beberapa tombol fungsi pada keyboard standard. Tombol ini dapat dipergunakan sebagai perintah khusus yang disertakan pada sistem operasi maupun aplikasi dan disebut function keys.<br>   Key Modal Styles : Penyampaian “aksi” melalui penekanan tombol-tombol yang diprogram sebelumnya untuk menjalankan perintah tertentu.</p>\n<h2 id=\"Definisi\"><a href=\"#Definisi\" class=\"headerlink\" title=\"Definisi :\"></a>Definisi :</h2><p>  Tombol khusus yang terdapat pada keyboard yang memberikan masukan tanpa berhubungan dengan setiap karakter F1 s/d F12. Contoh Fungsi umumnya :<br>     <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">F1 = Help.</div><div class=\"line\">F2 = Merubah nama file.</div><div class=\"line\">F3 = Search.</div><div class=\"line\">alt + F4 = Menutup program yang sedang berjalan.</div><div class=\"line\">F5 = Refresh.</div><div class=\"line\">F6 = Memindahkan kursor ke Address bar.</div><div class=\"line\">F7 = memeriksa ejaan/tata bahasa (Ms. Word).</div><div class=\"line\">F8 = Tombol fungsi yang digunakan untuk masuk ke menu startup windows, biasa digunakan masuk ke Windows Safe Mode.</div><div class=\"line\">F9 = Untuk membuka toolbar Measurements pada Quark 5.0.</div><div class=\"line\">shift + F10 = Menampilkan menu shortcut ( MS Word ).</div><div class=\"line\">F11 = Full Screen pada browser.</div><div class=\"line\">shift + F12 = Save As ( MS. Word ).</div></pre></td></tr></table></figure></p>\n<h2 id=\"Kelebihan-Function-Keys\"><a href=\"#Kelebihan-Function-Keys\" class=\"headerlink\" title=\"Kelebihan Function Keys :\"></a>Kelebihan Function Keys :</h2><ul>\n<li>Mempermudah pekerjaan.</li>\n<li>Kecepatan yang lebih tinggi dan praktis.</li>\n<li>Dapat menjadi pengganti input saat mouse sedang error.</li>\n</ul>\n<p>Kekurangan Function Keys :</p>\n<ul>\n<li>Jarang Digunakan dan Diketahui oleh pengguna - pengguna baru.</li>\n</ul>\n","excerpt":"","more":"<p><img src=\"/images/ui-ux/Ui-Ux.jpg\" alt=\"\"></p>\n<h1 id=\"FILL-IN-FORM\"><a href=\"#FILL-IN-FORM\" class=\"headerlink\" title=\"FILL IN FORM\"></a>FILL IN FORM</h1><h2 id=\"Definisi-Fill-in-Form\"><a href=\"#Definisi-Fill-in-Form\" class=\"headerlink\" title=\"Definisi Fill in Form :\"></a>Definisi Fill in Form :</h2><p>   Sebuah tabel data yang diwajibkan diisi oleh user, data tersebut biasanya digunakan untuk sebuah pendaftaran.<br>   Data yang diinputkan umumnya banyak keakuratan data, misal fill in form memerintahkan user untuk memasukkan data pribadi ( nama, umur, jenis kelamin dst ).</p>\n<h2 id=\"Hal-yang-perlu-diperhatikan-terkait-Fill-In-Form\"><a href=\"#Hal-yang-perlu-diperhatikan-terkait-Fill-In-Form\" class=\"headerlink\" title=\"Hal yang perlu diperhatikan terkait Fill In Form :\"></a>Hal yang perlu diperhatikan terkait Fill In Form :</h2><ul>\n<li>Keyboard.</li>\n<li>Kegunaan Tab atau Mouse untuk memindahkan cursor.</li>\n<li>Maksud dari masing - masing field dan label.</li>\n<li>Metode dalam mengoreksi kesalahan.</li>\n<li>Kegunaan Enter dan Return.</li>\n</ul>\n<h2 id=\"Pedoman-dalam-membuat-Fill-Inform\"><a href=\"#Pedoman-dalam-membuat-Fill-Inform\" class=\"headerlink\" title=\"Pedoman dalam membuat Fill Inform :\"></a>Pedoman dalam membuat Fill Inform :</h2><ul>\n<li>Berikan judul yang jelas dan memiliki arti.</li>\n<li>Instruksi yang komprehensif.</li>\n<li>Pengelompokkan dan pengurutan secara logikal.</li>\n<li>Layout ( Desain tata letak ) yang mudah dilihat.</li>\n<li>Berikan nama field yang dikenal secara umum.</li>\n<li>Berikan tempat yang jelas untuk menginputkan data,</li>\n<li>Pergerakan kursor yang nyaman.</li>\n<li>Berikan koreksi eror / penanganan kesalahan untuk setiap karakter  tidak tepat yang diinputkan.</li>\n<li>Sertakan informasi mengenai status pengisian form.</li>\n</ul>\n<h2 id=\"Kelebihan-Fill-In-Form\"><a href=\"#Kelebihan-Fill-In-Form\" class=\"headerlink\" title=\"Kelebihan Fill In Form :\"></a>Kelebihan Fill In Form :</h2><ul>\n<li>Keterbiasaan Pengguna dalam Mengisi Form dapat mempermudah pengisian.</li>\n<li>Beban memori rendah.</li>\n<li>Perancangan yang mudah dengan berbagai alat/Software bantu perancangan tampilan.</li>\n<li>Isian Formulir yang disederhanakan.</li>\n</ul>\n<h2 id=\"Kekurangan-Fill-In-Form\"><a href=\"#Kekurangan-Fill-In-Form\" class=\"headerlink\" title=\"Kekurangan Fill In Form :\"></a>Kekurangan Fill In Form :</h2><ul>\n<li>Bila tak terbiasa, membutuhkan waktu bagi user untuk memahami dan mengisi form.</li>\n<li>Jika Formulir bermenu datar, akan memakan ruang pada layar.</li>\n<li>Pembuatan data pertanyaan harus logis dan tersusun dengan jelas jika tidak akan membuat user kebingungan.</li>\n</ul>\n<h1 id=\"FUNCTION-KEYS\"><a href=\"#FUNCTION-KEYS\" class=\"headerlink\" title=\"FUNCTION KEYS\"></a>FUNCTION KEYS</h1><h2 id=\"Pendahuluan\"><a href=\"#Pendahuluan\" class=\"headerlink\" title=\"Pendahuluan :\"></a>Pendahuluan :</h2><p>   Tahun 1986, IBM ( International Business Machine ) menambahkan beberapa tombol fungsi pada keyboard standard. Tombol ini dapat dipergunakan sebagai perintah khusus yang disertakan pada sistem operasi maupun aplikasi dan disebut function keys.<br>   Key Modal Styles : Penyampaian “aksi” melalui penekanan tombol-tombol yang diprogram sebelumnya untuk menjalankan perintah tertentu.</p>\n<h2 id=\"Definisi\"><a href=\"#Definisi\" class=\"headerlink\" title=\"Definisi :\"></a>Definisi :</h2><p>  Tombol khusus yang terdapat pada keyboard yang memberikan masukan tanpa berhubungan dengan setiap karakter F1 s/d F12. Contoh Fungsi umumnya :<br>     <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">F1 = Help.</div><div class=\"line\">F2 = Merubah nama file.</div><div class=\"line\">F3 = Search.</div><div class=\"line\">alt + F4 = Menutup program yang sedang berjalan.</div><div class=\"line\">F5 = Refresh.</div><div class=\"line\">F6 = Memindahkan kursor ke Address bar.</div><div class=\"line\">F7 = memeriksa ejaan/tata bahasa (Ms. Word).</div><div class=\"line\">F8 = Tombol fungsi yang digunakan untuk masuk ke menu startup windows, biasa digunakan masuk ke Windows Safe Mode.</div><div class=\"line\">F9 = Untuk membuka toolbar Measurements pada Quark 5.0.</div><div class=\"line\">shift + F10 = Menampilkan menu shortcut ( MS Word ).</div><div class=\"line\">F11 = Full Screen pada browser.</div><div class=\"line\">shift + F12 = Save As ( MS. Word ).</div></pre></td></tr></table></figure></p>\n<h2 id=\"Kelebihan-Function-Keys\"><a href=\"#Kelebihan-Function-Keys\" class=\"headerlink\" title=\"Kelebihan Function Keys :\"></a>Kelebihan Function Keys :</h2><ul>\n<li>Mempermudah pekerjaan.</li>\n<li>Kecepatan yang lebih tinggi dan praktis.</li>\n<li>Dapat menjadi pengganti input saat mouse sedang error.</li>\n</ul>\n<p>Kekurangan Function Keys :</p>\n<ul>\n<li>Jarang Digunakan dan Diketahui oleh pengguna - pengguna baru.</li>\n</ul>\n"},{"title":"Bahasa Perintah dan Bahasa Alami","date":"2017-03-26T23:06:11.000Z","_content":"![](/images/ui-ux/Ui-Ux.jpg)\n## Pendahuluan\n- Tujuan dasar bahasa\n  - presisi\n  - kekompakan\n  - kemudahan dalam penulisan dan pembacaan\n  - mudah dipelajari\n  - sederhana dan mengurangi kesalahan\n  - mudah diingat\n\n- Tujuan tingkat lebih tinggi\n  - Hubungan yang dekat antara realitas dan notasi.\n  - Kemudahan dalam melaksanakan manipulasi yang relevan dengan tugas.\n  - Kompatibilitas dengan notasi yang telah ada.\n  - Fleksibilitas untuk mengakomodasi pemakai pemula dan ahli.\n  - Ekspresif, mendukung kreativitas.\n  - Daya tarik visual.\n\n- Kendala-kendala penggunaan Bahasa\n  - kapasitas manusia mengingat notasi\n  - kecocokan antara ingatan dan media penampil\n  - kemudahan berbicara(mengucapkan)\n\n- Bahasa komputer yang efektif\n  Bahasa komputer yang efektif harus tidak hanya merepresentasikan tugas pemakai dan memenuhi kebutuhan manusia untuk berkomunikasi, tetapi juga harus selaras dengan mekanisme perekaman, manipulasi, dan penampilannya di komputer.\n  Beberapa contoh bahasa yang efektif\n  - Bahasa pemrograman:\n    - Pemakaian noninteraktif: Fortran, COBOL, ALGOL, PL/I, Pascal.\n    - Inkremental: BASIC, LISP, APL, PROLOG.\n    - Kompilasi dan eksekusi cepat: C.\n    - Pemrograman tim, sharing, reusability: ADA, C++.\n    - Jaringan, cross-platform: Java.\n    - Scripting World Wide Web: PHP, JavaScript, VBScript.\n  - Alamat World Wide Web.\n  - Bahasa database query: SQL.\n  - Bahasa perintah command line: perintah Unix, MS-DOS.\n\n## Strategi Organisasi perintah\n  - Simple command set\n    Setiap perintah dipilih untuk melaksanakan tugas (task) tunggal, jumlah perintah sama dengan jumlah tugas.\n    Contoh: vim editor (Unix):\n    0\t\t: go to start of line\n    $\t\t: go to end of line\n    (space)\t: go right one space\n    H\t\t: go left one space\n    W\t\t: forward one word\n    b\t\t: backward one word\n    )\t\t: forward one sentence\n    (\t\t: backward one sentence\n  - Command plus arguments\n    Perintah diikuti argumen yang menunjukkan objek yang dimanipulasi.\n    Contoh:\n    ```bash\n    COPY FILEA FILEB\n    DEL FILEA\n    ```\n    Label keyword dapat membantu untuk meningkatkan keterbacaan dan meniadakan urutan.\n    ```html\n    <img src=\"gbr.gif\" width=\"40\" height=\"5\" alt=\"Gambar\">\n    ```\n  - Command plus options and arguments\n    Perintah dapat berisi options untuk menunjukkan kondisi khusus.\n    Jumlah argumen dan option yang banyak dapat meningkatkan tingkat kesalahan.\n    Contoh:\n    ```bash\n    DIR C:\\WINDOWS\\*.EXE /S/W/P/O-N\n    ls -alF /home/agus\n    ```\n  - Hierarchical command structure\n    Perangkat penuh perintah disusun menjadi struktur tree, seperti menu tree.\n    Contoh:\n    ```\n    Action    Object     Destination\n    CREATE    File       File\n    DISPLAY   Process    Local printer\n    REMOVE    Directory  Screen\n    COPY                 Remote  printer\n    MOVE\n    ```\n    Contoh di atas menghasilkan struktur berarti bagi\n    5 × 3 × 4 = 60 tugas.\n\n## Manfaat Struktur\n    - Manfaat struktur:\n      - Membantu proses belajar manusia, pemecahan masalah, dan ingatan.\n      - Membantu task concepts, computer concepts, dan rincian sintaktik bahasa perintah.\n    - Topik:\n      - Urutan argumen yang konsisten\n      - Simbol vs keyword\n      - Struktur hierarkis dan kongruensi\n\n### Urutan Argumen yang konsistensi\n    Beberapa studi menunjukkan adanya manfaat urutan argumen yang konsisten.\n    ```\n    Inconsistent order              Consistent order\n\n    SEARCH file no, message id      SEARCH message id, file no\n    TRIM message id, segment size   TRIM message id, segment size\n    REPLACE message id, code no     REPLACE message id, code no\n    INVERT group size, message id   INVERT message id, group size\n    ```\n### Simbol Lawan Keyword\n    Penggunaan keyword lebih mudah daripada simbol.\n    Pemakai berpengalaman dapat mengembangkan keterampilan untuk menggunakan notasi aneh sehingga variasi sintaktik tidak banyak berpengaruh.\n    ```\n  \tSymbol Editor                Keyword Editor\n\n  \tFIND:/TOOTH/-1               BACKWARD TO “TOOTH”\n  \tLIST;10                      LIST 10 LINES\n  \tRS:/KO/,/OK/;*               CHANGE ALL “KO” TO “OK”\n    ```\n### Struktur Hierarkis dan Kongruensi\n    Kongruen: pasangan yang berlawanan secara selaras dan berarti (simetris).\n    Struktur hierarkis dan kongruensi dapat membantu ingatan pemakai.\n    ```\n    Congruent\n    Hierarchical           Nonhierarchical\n    MOVE ROBOT FORWARD     ADVANCE\n    MOVE ROBOT BACKWARD    RETREAT\n    MOVE ARM FORWARD       PUSH\n    MOVE ARM BACKWARD      PULL\n    MOVE ARM RIGHT         SWING OUT\n    MOVE ARM LEFT          SWING IN\n\n    Noncongruent\n    Hierarchical           Nonhierarchical\n    MOVE ROBOT FORWARD     GO\n    CHANGE ROBOT BACKWARD  BACK\n    CHANGE ARM FORWARD     POKE\n    MOVE ARM BACKWARD      PULL\n    CHANGE ARM RIGHT       PIVOT\n    MOVE ARM LEFT          SWEEP\n    ```\n### Ringkasan Manfaat Struktur\n    Sumber struktur yang terbukti bermanfaat meliputi:\n    - Konsistensi posisi\n    - Konsistensi tatabahasa\n    - Pasangan yang kongruen\n    - Bentuk hierarkis\n\n## Penamaan perintah\n  Penamaan penting untuk proses belajar, pemecahan masalah, dan ingatan.\n  Ketertentuan (specificity) vs keumuman (generality):\n  - Istilah-istilah yang spesifik lebih deskriptif dan lebih mudah diingat.\n  - Istilah-istilah yang umum lebih dikenal dan mudah diterima.\n  Contoh pengujian untuk menambah dan menghapus teks (Black & Moran):\n  ```\n  Infrequent, discriminating words      insert    delete\n  Frequent, discriminating words        add       remove\n  Infrequent, nondiscriminating words   amble     perceive\n  Frequent, nondiscriminating words     walk      view\n  General words (frequent, nondiscr.)   alter     correct\n  Nondiscriminating nonwords (nonsense) GAC       MIK\n  Discriminating nonwords (icons)       abc-adbc  abc-ac\n  ```\n  Paling baik: “infrequent, discriminating”\n  Paling buruk: general words.\n  Nonsense cukup baik!\n## Penyingkatan Perintah\n  - Pemotongan sederhana.\n    directory -> dir, delete -> del.\n  - Buang huruf hidup dengan pemotongan sederhana.\n    check disk -> chkdsk, move -> mv.\n  - Huruf pertama dan terakhir.\n    sort -> ST, block -> BK.\n  - Huruf awal setiap kata dalam frase.\n    change directory -> cd, switch user -> su.\n  - Singkatan standar dari konteks lain.\n    quantity -> QTY, transfer ->  XFER,\n    backup -> BAK.\n  - Fonik: fokus pada suara.\n    execute -> XQT, I seek you -> ICQ,\n    connection -> CNXN.\n\n## Menu perintah\n    Untuk mengatasi beban penghafalan perintah, beberapa perancang memberikan daftar perintah yang tersedia, dalam format yang disebut menu perintah.\n    Contoh:\n    ```\n    Lynx\n      H)elp O)ptions P)rint G)o M)ain screen Q)uit /=search [delete]=history list\n\n    Pico\n    \t^G Get Help  ^O Writeout  ^R Read File\n      ^X Exit      ^J Justify   ^W Where is\n\n    WordStar\n    \t    --Cursor Movement--     | -Delete-\n    ^S char left ^D char right    |^G char\n    ^A word left ^F word right    |DEL chr lf\n    ^E line up   ^X line down     | ^T word rt\n          --Scrolling–-           |^Y line\n    ^Z line down ^W line up       |\n    ^C screen up ^R screen down   |\n    ```\n## Bahasa Alami di dalam komputer\n  - Natural-language interaction\n    Operasi komputer menggunakan bahasa alami manusia (mis. Inggris) untuk memberi instruksi dan menerima respons.\n  - Natural-language queries\n    Operasi pada database relasional.\n    Masih lebih buruk daripada SQL.\n    Contoh: INTELLECT, Symantec Q&A.\n  - Text-database searching\n    Untuk mencari database tekstual.\n    Contoh: Ask Jeeves (ask.com).\n  - Natural-language text generation\n    Digunakan untuk laporan (mis. Prakiraan cuaca, laboratorium medis).\n    Di sisi artistik dapat menghasilkan puisi dan novel.\n  - Adventure and educational games\n    Pemakai menyatakan gerakan dan perintah dengan bahasa alami.\n    Menarik karena sistem tak dapat diramalkan dan perlu dijelajahi.\n\n## Pedoman bahasa perintah\n- Buat model objek dan aksi yang eksplisit.\n- Pilih nama yang berarti, spesifik, dan dapat dibedakan.\n- Coba mencapai struktur hierarkis.\n- Gunakan struktur yang konsisten (hierarki, urutan argumen, aksi-objek).\n- Dukung aturan penyingkatan yang konsisten.\n- Berikan kemampuan membuat makro bagi frequent users.\n- Pertimbangkan menu perintah pada tampilan berkecepatan tinggi.\n- Batasi jumlah perintah dan cara melakukan tugas.\n","source":"_posts/kuliah/imk/ui-ux_common-language-and-natural-language.md","raw":"---\ntitle: Bahasa Perintah dan Bahasa Alami\ndate: 2017-03-27 06:06:11\ntags:  \n  - ui-ux\ncategories:\n  - Teknologi\n  - Interaksi Manusia dan Komputer\n---\n![](/images/ui-ux/Ui-Ux.jpg)\n## Pendahuluan\n- Tujuan dasar bahasa\n  - presisi\n  - kekompakan\n  - kemudahan dalam penulisan dan pembacaan\n  - mudah dipelajari\n  - sederhana dan mengurangi kesalahan\n  - mudah diingat\n\n- Tujuan tingkat lebih tinggi\n  - Hubungan yang dekat antara realitas dan notasi.\n  - Kemudahan dalam melaksanakan manipulasi yang relevan dengan tugas.\n  - Kompatibilitas dengan notasi yang telah ada.\n  - Fleksibilitas untuk mengakomodasi pemakai pemula dan ahli.\n  - Ekspresif, mendukung kreativitas.\n  - Daya tarik visual.\n\n- Kendala-kendala penggunaan Bahasa\n  - kapasitas manusia mengingat notasi\n  - kecocokan antara ingatan dan media penampil\n  - kemudahan berbicara(mengucapkan)\n\n- Bahasa komputer yang efektif\n  Bahasa komputer yang efektif harus tidak hanya merepresentasikan tugas pemakai dan memenuhi kebutuhan manusia untuk berkomunikasi, tetapi juga harus selaras dengan mekanisme perekaman, manipulasi, dan penampilannya di komputer.\n  Beberapa contoh bahasa yang efektif\n  - Bahasa pemrograman:\n    - Pemakaian noninteraktif: Fortran, COBOL, ALGOL, PL/I, Pascal.\n    - Inkremental: BASIC, LISP, APL, PROLOG.\n    - Kompilasi dan eksekusi cepat: C.\n    - Pemrograman tim, sharing, reusability: ADA, C++.\n    - Jaringan, cross-platform: Java.\n    - Scripting World Wide Web: PHP, JavaScript, VBScript.\n  - Alamat World Wide Web.\n  - Bahasa database query: SQL.\n  - Bahasa perintah command line: perintah Unix, MS-DOS.\n\n## Strategi Organisasi perintah\n  - Simple command set\n    Setiap perintah dipilih untuk melaksanakan tugas (task) tunggal, jumlah perintah sama dengan jumlah tugas.\n    Contoh: vim editor (Unix):\n    0\t\t: go to start of line\n    $\t\t: go to end of line\n    (space)\t: go right one space\n    H\t\t: go left one space\n    W\t\t: forward one word\n    b\t\t: backward one word\n    )\t\t: forward one sentence\n    (\t\t: backward one sentence\n  - Command plus arguments\n    Perintah diikuti argumen yang menunjukkan objek yang dimanipulasi.\n    Contoh:\n    ```bash\n    COPY FILEA FILEB\n    DEL FILEA\n    ```\n    Label keyword dapat membantu untuk meningkatkan keterbacaan dan meniadakan urutan.\n    ```html\n    <img src=\"gbr.gif\" width=\"40\" height=\"5\" alt=\"Gambar\">\n    ```\n  - Command plus options and arguments\n    Perintah dapat berisi options untuk menunjukkan kondisi khusus.\n    Jumlah argumen dan option yang banyak dapat meningkatkan tingkat kesalahan.\n    Contoh:\n    ```bash\n    DIR C:\\WINDOWS\\*.EXE /S/W/P/O-N\n    ls -alF /home/agus\n    ```\n  - Hierarchical command structure\n    Perangkat penuh perintah disusun menjadi struktur tree, seperti menu tree.\n    Contoh:\n    ```\n    Action    Object     Destination\n    CREATE    File       File\n    DISPLAY   Process    Local printer\n    REMOVE    Directory  Screen\n    COPY                 Remote  printer\n    MOVE\n    ```\n    Contoh di atas menghasilkan struktur berarti bagi\n    5 × 3 × 4 = 60 tugas.\n\n## Manfaat Struktur\n    - Manfaat struktur:\n      - Membantu proses belajar manusia, pemecahan masalah, dan ingatan.\n      - Membantu task concepts, computer concepts, dan rincian sintaktik bahasa perintah.\n    - Topik:\n      - Urutan argumen yang konsisten\n      - Simbol vs keyword\n      - Struktur hierarkis dan kongruensi\n\n### Urutan Argumen yang konsistensi\n    Beberapa studi menunjukkan adanya manfaat urutan argumen yang konsisten.\n    ```\n    Inconsistent order              Consistent order\n\n    SEARCH file no, message id      SEARCH message id, file no\n    TRIM message id, segment size   TRIM message id, segment size\n    REPLACE message id, code no     REPLACE message id, code no\n    INVERT group size, message id   INVERT message id, group size\n    ```\n### Simbol Lawan Keyword\n    Penggunaan keyword lebih mudah daripada simbol.\n    Pemakai berpengalaman dapat mengembangkan keterampilan untuk menggunakan notasi aneh sehingga variasi sintaktik tidak banyak berpengaruh.\n    ```\n  \tSymbol Editor                Keyword Editor\n\n  \tFIND:/TOOTH/-1               BACKWARD TO “TOOTH”\n  \tLIST;10                      LIST 10 LINES\n  \tRS:/KO/,/OK/;*               CHANGE ALL “KO” TO “OK”\n    ```\n### Struktur Hierarkis dan Kongruensi\n    Kongruen: pasangan yang berlawanan secara selaras dan berarti (simetris).\n    Struktur hierarkis dan kongruensi dapat membantu ingatan pemakai.\n    ```\n    Congruent\n    Hierarchical           Nonhierarchical\n    MOVE ROBOT FORWARD     ADVANCE\n    MOVE ROBOT BACKWARD    RETREAT\n    MOVE ARM FORWARD       PUSH\n    MOVE ARM BACKWARD      PULL\n    MOVE ARM RIGHT         SWING OUT\n    MOVE ARM LEFT          SWING IN\n\n    Noncongruent\n    Hierarchical           Nonhierarchical\n    MOVE ROBOT FORWARD     GO\n    CHANGE ROBOT BACKWARD  BACK\n    CHANGE ARM FORWARD     POKE\n    MOVE ARM BACKWARD      PULL\n    CHANGE ARM RIGHT       PIVOT\n    MOVE ARM LEFT          SWEEP\n    ```\n### Ringkasan Manfaat Struktur\n    Sumber struktur yang terbukti bermanfaat meliputi:\n    - Konsistensi posisi\n    - Konsistensi tatabahasa\n    - Pasangan yang kongruen\n    - Bentuk hierarkis\n\n## Penamaan perintah\n  Penamaan penting untuk proses belajar, pemecahan masalah, dan ingatan.\n  Ketertentuan (specificity) vs keumuman (generality):\n  - Istilah-istilah yang spesifik lebih deskriptif dan lebih mudah diingat.\n  - Istilah-istilah yang umum lebih dikenal dan mudah diterima.\n  Contoh pengujian untuk menambah dan menghapus teks (Black & Moran):\n  ```\n  Infrequent, discriminating words      insert    delete\n  Frequent, discriminating words        add       remove\n  Infrequent, nondiscriminating words   amble     perceive\n  Frequent, nondiscriminating words     walk      view\n  General words (frequent, nondiscr.)   alter     correct\n  Nondiscriminating nonwords (nonsense) GAC       MIK\n  Discriminating nonwords (icons)       abc-adbc  abc-ac\n  ```\n  Paling baik: “infrequent, discriminating”\n  Paling buruk: general words.\n  Nonsense cukup baik!\n## Penyingkatan Perintah\n  - Pemotongan sederhana.\n    directory -> dir, delete -> del.\n  - Buang huruf hidup dengan pemotongan sederhana.\n    check disk -> chkdsk, move -> mv.\n  - Huruf pertama dan terakhir.\n    sort -> ST, block -> BK.\n  - Huruf awal setiap kata dalam frase.\n    change directory -> cd, switch user -> su.\n  - Singkatan standar dari konteks lain.\n    quantity -> QTY, transfer ->  XFER,\n    backup -> BAK.\n  - Fonik: fokus pada suara.\n    execute -> XQT, I seek you -> ICQ,\n    connection -> CNXN.\n\n## Menu perintah\n    Untuk mengatasi beban penghafalan perintah, beberapa perancang memberikan daftar perintah yang tersedia, dalam format yang disebut menu perintah.\n    Contoh:\n    ```\n    Lynx\n      H)elp O)ptions P)rint G)o M)ain screen Q)uit /=search [delete]=history list\n\n    Pico\n    \t^G Get Help  ^O Writeout  ^R Read File\n      ^X Exit      ^J Justify   ^W Where is\n\n    WordStar\n    \t    --Cursor Movement--     | -Delete-\n    ^S char left ^D char right    |^G char\n    ^A word left ^F word right    |DEL chr lf\n    ^E line up   ^X line down     | ^T word rt\n          --Scrolling–-           |^Y line\n    ^Z line down ^W line up       |\n    ^C screen up ^R screen down   |\n    ```\n## Bahasa Alami di dalam komputer\n  - Natural-language interaction\n    Operasi komputer menggunakan bahasa alami manusia (mis. Inggris) untuk memberi instruksi dan menerima respons.\n  - Natural-language queries\n    Operasi pada database relasional.\n    Masih lebih buruk daripada SQL.\n    Contoh: INTELLECT, Symantec Q&A.\n  - Text-database searching\n    Untuk mencari database tekstual.\n    Contoh: Ask Jeeves (ask.com).\n  - Natural-language text generation\n    Digunakan untuk laporan (mis. Prakiraan cuaca, laboratorium medis).\n    Di sisi artistik dapat menghasilkan puisi dan novel.\n  - Adventure and educational games\n    Pemakai menyatakan gerakan dan perintah dengan bahasa alami.\n    Menarik karena sistem tak dapat diramalkan dan perlu dijelajahi.\n\n## Pedoman bahasa perintah\n- Buat model objek dan aksi yang eksplisit.\n- Pilih nama yang berarti, spesifik, dan dapat dibedakan.\n- Coba mencapai struktur hierarkis.\n- Gunakan struktur yang konsisten (hierarki, urutan argumen, aksi-objek).\n- Dukung aturan penyingkatan yang konsisten.\n- Berikan kemampuan membuat makro bagi frequent users.\n- Pertimbangkan menu perintah pada tampilan berkecepatan tinggi.\n- Batasi jumlah perintah dan cara melakukan tugas.\n","slug":"kuliah/imk/ui-ux_common-language-and-natural-language","published":1,"updated":"2017-04-16T12:57:26.308Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj2ed41l100048jlpqb83e624","content":"<p><img src=\"/images/ui-ux/Ui-Ux.jpg\" alt=\"\"></p>\n<h2 id=\"Pendahuluan\"><a href=\"#Pendahuluan\" class=\"headerlink\" title=\"Pendahuluan\"></a>Pendahuluan</h2><ul>\n<li><p>Tujuan dasar bahasa</p>\n<ul>\n<li>presisi</li>\n<li>kekompakan</li>\n<li>kemudahan dalam penulisan dan pembacaan</li>\n<li>mudah dipelajari</li>\n<li>sederhana dan mengurangi kesalahan</li>\n<li>mudah diingat</li>\n</ul>\n</li>\n<li><p>Tujuan tingkat lebih tinggi</p>\n<ul>\n<li>Hubungan yang dekat antara realitas dan notasi.</li>\n<li>Kemudahan dalam melaksanakan manipulasi yang relevan dengan tugas.</li>\n<li>Kompatibilitas dengan notasi yang telah ada.</li>\n<li>Fleksibilitas untuk mengakomodasi pemakai pemula dan ahli.</li>\n<li>Ekspresif, mendukung kreativitas.</li>\n<li>Daya tarik visual.</li>\n</ul>\n</li>\n<li><p>Kendala-kendala penggunaan Bahasa</p>\n<ul>\n<li>kapasitas manusia mengingat notasi</li>\n<li>kecocokan antara ingatan dan media penampil</li>\n<li>kemudahan berbicara(mengucapkan)</li>\n</ul>\n</li>\n<li><p>Bahasa komputer yang efektif<br>Bahasa komputer yang efektif harus tidak hanya merepresentasikan tugas pemakai dan memenuhi kebutuhan manusia untuk berkomunikasi, tetapi juga harus selaras dengan mekanisme perekaman, manipulasi, dan penampilannya di komputer.<br>Beberapa contoh bahasa yang efektif</p>\n<ul>\n<li>Bahasa pemrograman:<ul>\n<li>Pemakaian noninteraktif: Fortran, COBOL, ALGOL, PL/I, Pascal.</li>\n<li>Inkremental: BASIC, LISP, APL, PROLOG.</li>\n<li>Kompilasi dan eksekusi cepat: C.</li>\n<li>Pemrograman tim, sharing, reusability: ADA, C++.</li>\n<li>Jaringan, cross-platform: Java.</li>\n<li>Scripting World Wide Web: PHP, JavaScript, VBScript.</li>\n</ul>\n</li>\n<li>Alamat World Wide Web.</li>\n<li>Bahasa database query: SQL.</li>\n<li>Bahasa perintah command line: perintah Unix, MS-DOS.</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Strategi-Organisasi-perintah\"><a href=\"#Strategi-Organisasi-perintah\" class=\"headerlink\" title=\"Strategi Organisasi perintah\"></a>Strategi Organisasi perintah</h2><ul>\n<li>Simple command set<br>Setiap perintah dipilih untuk melaksanakan tugas (task) tunggal, jumlah perintah sama dengan jumlah tugas.<br>Contoh: vim editor (Unix):<br>0        : go to start of line<br>$        : go to end of line<br>(space)    : go right one space<br>H        : go left one space<br>W        : forward one word<br>b        : backward one word<br>)        : forward one sentence<br>(        : backward one sentence</li>\n<li><p>Command plus arguments<br>Perintah diikuti argumen yang menunjukkan objek yang dimanipulasi.<br>Contoh:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">COPY FILEA FILEB</div><div class=\"line\">DEL FILEA</div></pre></td></tr></table></figure>\n<p>Label keyword dapat membantu untuk meningkatkan keterbacaan dan meniadakan urutan.</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"gbr.gif\"</span> <span class=\"attr\">width</span>=<span class=\"string\">\"40\"</span> <span class=\"attr\">height</span>=<span class=\"string\">\"5\"</span> <span class=\"attr\">alt</span>=<span class=\"string\">\"Gambar\"</span>&gt;</span></div></pre></td></tr></table></figure>\n</li>\n<li><p>Command plus options and arguments<br>Perintah dapat berisi options untuk menunjukkan kondisi khusus.<br>Jumlah argumen dan option yang banyak dapat meningkatkan tingkat kesalahan.<br>Contoh:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">DIR C:\\WINDOWS\\*.EXE /S/W/P/O-N</div><div class=\"line\">ls -alF /home/agus</div></pre></td></tr></table></figure>\n</li>\n<li><p>Hierarchical command structure<br>Perangkat penuh perintah disusun menjadi struktur tree, seperti menu tree.<br>Contoh:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">Action    Object     Destination</div><div class=\"line\">CREATE    File       File</div><div class=\"line\">DISPLAY   Process    Local printer</div><div class=\"line\">REMOVE    Directory  Screen</div><div class=\"line\">COPY                 Remote  printer</div><div class=\"line\">MOVE</div></pre></td></tr></table></figure>\n<p>Contoh di atas menghasilkan struktur berarti bagi<br>5 × 3 × 4 = 60 tugas.</p>\n</li>\n</ul>\n<h2 id=\"Manfaat-Struktur\"><a href=\"#Manfaat-Struktur\" class=\"headerlink\" title=\"Manfaat Struktur\"></a>Manfaat Struktur</h2><pre><code>- Manfaat struktur:\n  - Membantu proses belajar manusia, pemecahan masalah, dan ingatan.\n  - Membantu task concepts, computer concepts, dan rincian sintaktik bahasa perintah.\n- Topik:\n  - Urutan argumen yang konsisten\n  - Simbol vs keyword\n  - Struktur hierarkis dan kongruensi\n</code></pre><h3 id=\"Urutan-Argumen-yang-konsistensi\"><a href=\"#Urutan-Argumen-yang-konsistensi\" class=\"headerlink\" title=\"Urutan Argumen yang konsistensi\"></a>Urutan Argumen yang konsistensi</h3><pre><code>Beberapa studi menunjukkan adanya manfaat urutan argumen yang konsisten.\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">Inconsistent order              Consistent order</div><div class=\"line\"></div><div class=\"line\">SEARCH file no, message id      SEARCH message id, file no</div><div class=\"line\">TRIM message id, segment size   TRIM message id, segment size</div><div class=\"line\">REPLACE message id, code no     REPLACE message id, code no</div><div class=\"line\">INVERT group size, message id   INVERT message id, group size</div></pre></td></tr></table></figure>\n</code></pre><h3 id=\"Simbol-Lawan-Keyword\"><a href=\"#Simbol-Lawan-Keyword\" class=\"headerlink\" title=\"Simbol Lawan Keyword\"></a>Simbol Lawan Keyword</h3><pre><code>Penggunaan keyword lebih mudah daripada simbol.\nPemakai berpengalaman dapat mengembangkan keterampilan untuk menggunakan notasi aneh sehingga variasi sintaktik tidak banyak berpengaruh.\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">Symbol Editor                Keyword Editor</div><div class=\"line\"></div><div class=\"line\">FIND:/TOOTH/-1               BACKWARD TO “TOOTH”</div><div class=\"line\">LIST;10                      LIST 10 LINES</div><div class=\"line\">RS:/KO/,/OK/;*               CHANGE ALL “KO” TO “OK”</div></pre></td></tr></table></figure>\n</code></pre><h3 id=\"Struktur-Hierarkis-dan-Kongruensi\"><a href=\"#Struktur-Hierarkis-dan-Kongruensi\" class=\"headerlink\" title=\"Struktur Hierarkis dan Kongruensi\"></a>Struktur Hierarkis dan Kongruensi</h3><pre><code>Kongruen: pasangan yang berlawanan secara selaras dan berarti (simetris).\nStruktur hierarkis dan kongruensi dapat membantu ingatan pemakai.\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">Congruent</div><div class=\"line\">Hierarchical           Nonhierarchical</div><div class=\"line\">MOVE ROBOT FORWARD     ADVANCE</div><div class=\"line\">MOVE ROBOT BACKWARD    RETREAT</div><div class=\"line\">MOVE ARM FORWARD       PUSH</div><div class=\"line\">MOVE ARM BACKWARD      PULL</div><div class=\"line\">MOVE ARM RIGHT         SWING OUT</div><div class=\"line\">MOVE ARM LEFT          SWING IN</div><div class=\"line\"></div><div class=\"line\">Noncongruent</div><div class=\"line\">Hierarchical           Nonhierarchical</div><div class=\"line\">MOVE ROBOT FORWARD     GO</div><div class=\"line\">CHANGE ROBOT BACKWARD  BACK</div><div class=\"line\">CHANGE ARM FORWARD     POKE</div><div class=\"line\">MOVE ARM BACKWARD      PULL</div><div class=\"line\">CHANGE ARM RIGHT       PIVOT</div><div class=\"line\">MOVE ARM LEFT          SWEEP</div></pre></td></tr></table></figure>\n</code></pre><h3 id=\"Ringkasan-Manfaat-Struktur\"><a href=\"#Ringkasan-Manfaat-Struktur\" class=\"headerlink\" title=\"Ringkasan Manfaat Struktur\"></a>Ringkasan Manfaat Struktur</h3><pre><code>Sumber struktur yang terbukti bermanfaat meliputi:\n- Konsistensi posisi\n- Konsistensi tatabahasa\n- Pasangan yang kongruen\n- Bentuk hierarkis\n</code></pre><h2 id=\"Penamaan-perintah\"><a href=\"#Penamaan-perintah\" class=\"headerlink\" title=\"Penamaan perintah\"></a>Penamaan perintah</h2><p>  Penamaan penting untuk proses belajar, pemecahan masalah, dan ingatan.<br>  Ketertentuan (specificity) vs keumuman (generality):</p>\n<ul>\n<li>Istilah-istilah yang spesifik lebih deskriptif dan lebih mudah diingat.</li>\n<li><p>Istilah-istilah yang umum lebih dikenal dan mudah diterima.<br>Contoh pengujian untuk menambah dan menghapus teks (Black &amp; Moran):</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">Infrequent, discriminating words      insert    delete</div><div class=\"line\">Frequent, discriminating words        add       remove</div><div class=\"line\">Infrequent, nondiscriminating words   amble     perceive</div><div class=\"line\">Frequent, nondiscriminating words     walk      view</div><div class=\"line\">General words (frequent, nondiscr.)   alter     correct</div><div class=\"line\">Nondiscriminating nonwords (nonsense) GAC       MIK</div><div class=\"line\">Discriminating nonwords (icons)       abc-adbc  abc-ac</div></pre></td></tr></table></figure>\n<p>Paling baik: “infrequent, discriminating”<br>Paling buruk: general words.<br>Nonsense cukup baik!</p>\n<h2 id=\"Penyingkatan-Perintah\"><a href=\"#Penyingkatan-Perintah\" class=\"headerlink\" title=\"Penyingkatan Perintah\"></a>Penyingkatan Perintah</h2></li>\n<li>Pemotongan sederhana.<br>directory -&gt; dir, delete -&gt; del.</li>\n<li>Buang huruf hidup dengan pemotongan sederhana.<br>check disk -&gt; chkdsk, move -&gt; mv.</li>\n<li>Huruf pertama dan terakhir.<br>sort -&gt; ST, block -&gt; BK.</li>\n<li>Huruf awal setiap kata dalam frase.<br>change directory -&gt; cd, switch user -&gt; su.</li>\n<li>Singkatan standar dari konteks lain.<br>quantity -&gt; QTY, transfer -&gt;  XFER,<br>backup -&gt; BAK.</li>\n<li>Fonik: fokus pada suara.<br>execute -&gt; XQT, I seek you -&gt; ICQ,<br>connection -&gt; CNXN.</li>\n</ul>\n<h2 id=\"Menu-perintah\"><a href=\"#Menu-perintah\" class=\"headerlink\" title=\"Menu perintah\"></a>Menu perintah</h2><pre><code>Untuk mengatasi beban penghafalan perintah, beberapa perancang memberikan daftar perintah yang tersedia, dalam format yang disebut menu perintah.\nContoh:\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">Lynx</div><div class=\"line\">  H)elp O)ptions P)rint G)o M)ain screen Q)uit /=search [delete]=history list</div><div class=\"line\"></div><div class=\"line\">Pico</div><div class=\"line\">\t^G Get Help  ^O Writeout  ^R Read File</div><div class=\"line\">  ^X Exit      ^J Justify   ^W Where is</div><div class=\"line\"></div><div class=\"line\">WordStar</div><div class=\"line\">\t    --Cursor Movement--     | -Delete-</div><div class=\"line\">^S char left ^D char right    |^G char</div><div class=\"line\">^A word left ^F word right    |DEL chr lf</div><div class=\"line\">^E line up   ^X line down     | ^T word rt</div><div class=\"line\">      --Scrolling–-           |^Y line</div><div class=\"line\">^Z line down ^W line up       |</div><div class=\"line\">^C screen up ^R screen down   |</div></pre></td></tr></table></figure>\n</code></pre><h2 id=\"Bahasa-Alami-di-dalam-komputer\"><a href=\"#Bahasa-Alami-di-dalam-komputer\" class=\"headerlink\" title=\"Bahasa Alami di dalam komputer\"></a>Bahasa Alami di dalam komputer</h2><ul>\n<li>Natural-language interaction<br>Operasi komputer menggunakan bahasa alami manusia (mis. Inggris) untuk memberi instruksi dan menerima respons.</li>\n<li>Natural-language queries<br>Operasi pada database relasional.<br>Masih lebih buruk daripada SQL.<br>Contoh: INTELLECT, Symantec Q&amp;A.</li>\n<li>Text-database searching<br>Untuk mencari database tekstual.<br>Contoh: Ask Jeeves (ask.com).</li>\n<li>Natural-language text generation<br>Digunakan untuk laporan (mis. Prakiraan cuaca, laboratorium medis).<br>Di sisi artistik dapat menghasilkan puisi dan novel.</li>\n<li>Adventure and educational games<br>Pemakai menyatakan gerakan dan perintah dengan bahasa alami.<br>Menarik karena sistem tak dapat diramalkan dan perlu dijelajahi.</li>\n</ul>\n<h2 id=\"Pedoman-bahasa-perintah\"><a href=\"#Pedoman-bahasa-perintah\" class=\"headerlink\" title=\"Pedoman bahasa perintah\"></a>Pedoman bahasa perintah</h2><ul>\n<li>Buat model objek dan aksi yang eksplisit.</li>\n<li>Pilih nama yang berarti, spesifik, dan dapat dibedakan.</li>\n<li>Coba mencapai struktur hierarkis.</li>\n<li>Gunakan struktur yang konsisten (hierarki, urutan argumen, aksi-objek).</li>\n<li>Dukung aturan penyingkatan yang konsisten.</li>\n<li>Berikan kemampuan membuat makro bagi frequent users.</li>\n<li>Pertimbangkan menu perintah pada tampilan berkecepatan tinggi.</li>\n<li>Batasi jumlah perintah dan cara melakukan tugas.</li>\n</ul>\n","excerpt":"","more":"<p><img src=\"/images/ui-ux/Ui-Ux.jpg\" alt=\"\"></p>\n<h2 id=\"Pendahuluan\"><a href=\"#Pendahuluan\" class=\"headerlink\" title=\"Pendahuluan\"></a>Pendahuluan</h2><ul>\n<li><p>Tujuan dasar bahasa</p>\n<ul>\n<li>presisi</li>\n<li>kekompakan</li>\n<li>kemudahan dalam penulisan dan pembacaan</li>\n<li>mudah dipelajari</li>\n<li>sederhana dan mengurangi kesalahan</li>\n<li>mudah diingat</li>\n</ul>\n</li>\n<li><p>Tujuan tingkat lebih tinggi</p>\n<ul>\n<li>Hubungan yang dekat antara realitas dan notasi.</li>\n<li>Kemudahan dalam melaksanakan manipulasi yang relevan dengan tugas.</li>\n<li>Kompatibilitas dengan notasi yang telah ada.</li>\n<li>Fleksibilitas untuk mengakomodasi pemakai pemula dan ahli.</li>\n<li>Ekspresif, mendukung kreativitas.</li>\n<li>Daya tarik visual.</li>\n</ul>\n</li>\n<li><p>Kendala-kendala penggunaan Bahasa</p>\n<ul>\n<li>kapasitas manusia mengingat notasi</li>\n<li>kecocokan antara ingatan dan media penampil</li>\n<li>kemudahan berbicara(mengucapkan)</li>\n</ul>\n</li>\n<li><p>Bahasa komputer yang efektif<br>Bahasa komputer yang efektif harus tidak hanya merepresentasikan tugas pemakai dan memenuhi kebutuhan manusia untuk berkomunikasi, tetapi juga harus selaras dengan mekanisme perekaman, manipulasi, dan penampilannya di komputer.<br>Beberapa contoh bahasa yang efektif</p>\n<ul>\n<li>Bahasa pemrograman:<ul>\n<li>Pemakaian noninteraktif: Fortran, COBOL, ALGOL, PL/I, Pascal.</li>\n<li>Inkremental: BASIC, LISP, APL, PROLOG.</li>\n<li>Kompilasi dan eksekusi cepat: C.</li>\n<li>Pemrograman tim, sharing, reusability: ADA, C++.</li>\n<li>Jaringan, cross-platform: Java.</li>\n<li>Scripting World Wide Web: PHP, JavaScript, VBScript.</li>\n</ul>\n</li>\n<li>Alamat World Wide Web.</li>\n<li>Bahasa database query: SQL.</li>\n<li>Bahasa perintah command line: perintah Unix, MS-DOS.</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Strategi-Organisasi-perintah\"><a href=\"#Strategi-Organisasi-perintah\" class=\"headerlink\" title=\"Strategi Organisasi perintah\"></a>Strategi Organisasi perintah</h2><ul>\n<li>Simple command set<br>Setiap perintah dipilih untuk melaksanakan tugas (task) tunggal, jumlah perintah sama dengan jumlah tugas.<br>Contoh: vim editor (Unix):<br>0        : go to start of line<br>$        : go to end of line<br>(space)    : go right one space<br>H        : go left one space<br>W        : forward one word<br>b        : backward one word<br>)        : forward one sentence<br>(        : backward one sentence</li>\n<li><p>Command plus arguments<br>Perintah diikuti argumen yang menunjukkan objek yang dimanipulasi.<br>Contoh:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">COPY FILEA FILEB</div><div class=\"line\">DEL FILEA</div></pre></td></tr></table></figure>\n<p>Label keyword dapat membantu untuk meningkatkan keterbacaan dan meniadakan urutan.</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"gbr.gif\"</span> <span class=\"attr\">width</span>=<span class=\"string\">\"40\"</span> <span class=\"attr\">height</span>=<span class=\"string\">\"5\"</span> <span class=\"attr\">alt</span>=<span class=\"string\">\"Gambar\"</span>&gt;</span></div></pre></td></tr></table></figure>\n</li>\n<li><p>Command plus options and arguments<br>Perintah dapat berisi options untuk menunjukkan kondisi khusus.<br>Jumlah argumen dan option yang banyak dapat meningkatkan tingkat kesalahan.<br>Contoh:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">DIR C:\\WINDOWS\\*.EXE /S/W/P/O-N</div><div class=\"line\">ls -alF /home/agus</div></pre></td></tr></table></figure>\n</li>\n<li><p>Hierarchical command structure<br>Perangkat penuh perintah disusun menjadi struktur tree, seperti menu tree.<br>Contoh:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">Action    Object     Destination</div><div class=\"line\">CREATE    File       File</div><div class=\"line\">DISPLAY   Process    Local printer</div><div class=\"line\">REMOVE    Directory  Screen</div><div class=\"line\">COPY                 Remote  printer</div><div class=\"line\">MOVE</div></pre></td></tr></table></figure>\n<p>Contoh di atas menghasilkan struktur berarti bagi<br>5 × 3 × 4 = 60 tugas.</p>\n</li>\n</ul>\n<h2 id=\"Manfaat-Struktur\"><a href=\"#Manfaat-Struktur\" class=\"headerlink\" title=\"Manfaat Struktur\"></a>Manfaat Struktur</h2><pre><code>- Manfaat struktur:\n  - Membantu proses belajar manusia, pemecahan masalah, dan ingatan.\n  - Membantu task concepts, computer concepts, dan rincian sintaktik bahasa perintah.\n- Topik:\n  - Urutan argumen yang konsisten\n  - Simbol vs keyword\n  - Struktur hierarkis dan kongruensi\n</code></pre><h3 id=\"Urutan-Argumen-yang-konsistensi\"><a href=\"#Urutan-Argumen-yang-konsistensi\" class=\"headerlink\" title=\"Urutan Argumen yang konsistensi\"></a>Urutan Argumen yang konsistensi</h3><pre><code>Beberapa studi menunjukkan adanya manfaat urutan argumen yang konsisten.\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">Inconsistent order              Consistent order</div><div class=\"line\"></div><div class=\"line\">SEARCH file no, message id      SEARCH message id, file no</div><div class=\"line\">TRIM message id, segment size   TRIM message id, segment size</div><div class=\"line\">REPLACE message id, code no     REPLACE message id, code no</div><div class=\"line\">INVERT group size, message id   INVERT message id, group size</div></pre></td></tr></table></figure>\n</code></pre><h3 id=\"Simbol-Lawan-Keyword\"><a href=\"#Simbol-Lawan-Keyword\" class=\"headerlink\" title=\"Simbol Lawan Keyword\"></a>Simbol Lawan Keyword</h3><pre><code>Penggunaan keyword lebih mudah daripada simbol.\nPemakai berpengalaman dapat mengembangkan keterampilan untuk menggunakan notasi aneh sehingga variasi sintaktik tidak banyak berpengaruh.\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">Symbol Editor                Keyword Editor</div><div class=\"line\"></div><div class=\"line\">FIND:/TOOTH/-1               BACKWARD TO “TOOTH”</div><div class=\"line\">LIST;10                      LIST 10 LINES</div><div class=\"line\">RS:/KO/,/OK/;*               CHANGE ALL “KO” TO “OK”</div></pre></td></tr></table></figure>\n</code></pre><h3 id=\"Struktur-Hierarkis-dan-Kongruensi\"><a href=\"#Struktur-Hierarkis-dan-Kongruensi\" class=\"headerlink\" title=\"Struktur Hierarkis dan Kongruensi\"></a>Struktur Hierarkis dan Kongruensi</h3><pre><code>Kongruen: pasangan yang berlawanan secara selaras dan berarti (simetris).\nStruktur hierarkis dan kongruensi dapat membantu ingatan pemakai.\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">Congruent</div><div class=\"line\">Hierarchical           Nonhierarchical</div><div class=\"line\">MOVE ROBOT FORWARD     ADVANCE</div><div class=\"line\">MOVE ROBOT BACKWARD    RETREAT</div><div class=\"line\">MOVE ARM FORWARD       PUSH</div><div class=\"line\">MOVE ARM BACKWARD      PULL</div><div class=\"line\">MOVE ARM RIGHT         SWING OUT</div><div class=\"line\">MOVE ARM LEFT          SWING IN</div><div class=\"line\"></div><div class=\"line\">Noncongruent</div><div class=\"line\">Hierarchical           Nonhierarchical</div><div class=\"line\">MOVE ROBOT FORWARD     GO</div><div class=\"line\">CHANGE ROBOT BACKWARD  BACK</div><div class=\"line\">CHANGE ARM FORWARD     POKE</div><div class=\"line\">MOVE ARM BACKWARD      PULL</div><div class=\"line\">CHANGE ARM RIGHT       PIVOT</div><div class=\"line\">MOVE ARM LEFT          SWEEP</div></pre></td></tr></table></figure>\n</code></pre><h3 id=\"Ringkasan-Manfaat-Struktur\"><a href=\"#Ringkasan-Manfaat-Struktur\" class=\"headerlink\" title=\"Ringkasan Manfaat Struktur\"></a>Ringkasan Manfaat Struktur</h3><pre><code>Sumber struktur yang terbukti bermanfaat meliputi:\n- Konsistensi posisi\n- Konsistensi tatabahasa\n- Pasangan yang kongruen\n- Bentuk hierarkis\n</code></pre><h2 id=\"Penamaan-perintah\"><a href=\"#Penamaan-perintah\" class=\"headerlink\" title=\"Penamaan perintah\"></a>Penamaan perintah</h2><p>  Penamaan penting untuk proses belajar, pemecahan masalah, dan ingatan.<br>  Ketertentuan (specificity) vs keumuman (generality):</p>\n<ul>\n<li>Istilah-istilah yang spesifik lebih deskriptif dan lebih mudah diingat.</li>\n<li><p>Istilah-istilah yang umum lebih dikenal dan mudah diterima.<br>Contoh pengujian untuk menambah dan menghapus teks (Black &amp; Moran):</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">Infrequent, discriminating words      insert    delete</div><div class=\"line\">Frequent, discriminating words        add       remove</div><div class=\"line\">Infrequent, nondiscriminating words   amble     perceive</div><div class=\"line\">Frequent, nondiscriminating words     walk      view</div><div class=\"line\">General words (frequent, nondiscr.)   alter     correct</div><div class=\"line\">Nondiscriminating nonwords (nonsense) GAC       MIK</div><div class=\"line\">Discriminating nonwords (icons)       abc-adbc  abc-ac</div></pre></td></tr></table></figure>\n<p>Paling baik: “infrequent, discriminating”<br>Paling buruk: general words.<br>Nonsense cukup baik!</p>\n<h2 id=\"Penyingkatan-Perintah\"><a href=\"#Penyingkatan-Perintah\" class=\"headerlink\" title=\"Penyingkatan Perintah\"></a>Penyingkatan Perintah</h2></li>\n<li>Pemotongan sederhana.<br>directory -&gt; dir, delete -&gt; del.</li>\n<li>Buang huruf hidup dengan pemotongan sederhana.<br>check disk -&gt; chkdsk, move -&gt; mv.</li>\n<li>Huruf pertama dan terakhir.<br>sort -&gt; ST, block -&gt; BK.</li>\n<li>Huruf awal setiap kata dalam frase.<br>change directory -&gt; cd, switch user -&gt; su.</li>\n<li>Singkatan standar dari konteks lain.<br>quantity -&gt; QTY, transfer -&gt;  XFER,<br>backup -&gt; BAK.</li>\n<li>Fonik: fokus pada suara.<br>execute -&gt; XQT, I seek you -&gt; ICQ,<br>connection -&gt; CNXN.</li>\n</ul>\n<h2 id=\"Menu-perintah\"><a href=\"#Menu-perintah\" class=\"headerlink\" title=\"Menu perintah\"></a>Menu perintah</h2><pre><code>Untuk mengatasi beban penghafalan perintah, beberapa perancang memberikan daftar perintah yang tersedia, dalam format yang disebut menu perintah.\nContoh:\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">Lynx</div><div class=\"line\">  H)elp O)ptions P)rint G)o M)ain screen Q)uit /=search [delete]=history list</div><div class=\"line\"></div><div class=\"line\">Pico</div><div class=\"line\">\t^G Get Help  ^O Writeout  ^R Read File</div><div class=\"line\">  ^X Exit      ^J Justify   ^W Where is</div><div class=\"line\"></div><div class=\"line\">WordStar</div><div class=\"line\">\t    --Cursor Movement--     | -Delete-</div><div class=\"line\">^S char left ^D char right    |^G char</div><div class=\"line\">^A word left ^F word right    |DEL chr lf</div><div class=\"line\">^E line up   ^X line down     | ^T word rt</div><div class=\"line\">      --Scrolling–-           |^Y line</div><div class=\"line\">^Z line down ^W line up       |</div><div class=\"line\">^C screen up ^R screen down   |</div></pre></td></tr></table></figure>\n</code></pre><h2 id=\"Bahasa-Alami-di-dalam-komputer\"><a href=\"#Bahasa-Alami-di-dalam-komputer\" class=\"headerlink\" title=\"Bahasa Alami di dalam komputer\"></a>Bahasa Alami di dalam komputer</h2><ul>\n<li>Natural-language interaction<br>Operasi komputer menggunakan bahasa alami manusia (mis. Inggris) untuk memberi instruksi dan menerima respons.</li>\n<li>Natural-language queries<br>Operasi pada database relasional.<br>Masih lebih buruk daripada SQL.<br>Contoh: INTELLECT, Symantec Q&amp;A.</li>\n<li>Text-database searching<br>Untuk mencari database tekstual.<br>Contoh: Ask Jeeves (ask.com).</li>\n<li>Natural-language text generation<br>Digunakan untuk laporan (mis. Prakiraan cuaca, laboratorium medis).<br>Di sisi artistik dapat menghasilkan puisi dan novel.</li>\n<li>Adventure and educational games<br>Pemakai menyatakan gerakan dan perintah dengan bahasa alami.<br>Menarik karena sistem tak dapat diramalkan dan perlu dijelajahi.</li>\n</ul>\n<h2 id=\"Pedoman-bahasa-perintah\"><a href=\"#Pedoman-bahasa-perintah\" class=\"headerlink\" title=\"Pedoman bahasa perintah\"></a>Pedoman bahasa perintah</h2><ul>\n<li>Buat model objek dan aksi yang eksplisit.</li>\n<li>Pilih nama yang berarti, spesifik, dan dapat dibedakan.</li>\n<li>Coba mencapai struktur hierarkis.</li>\n<li>Gunakan struktur yang konsisten (hierarki, urutan argumen, aksi-objek).</li>\n<li>Dukung aturan penyingkatan yang konsisten.</li>\n<li>Berikan kemampuan membuat makro bagi frequent users.</li>\n<li>Pertimbangkan menu perintah pada tampilan berkecepatan tinggi.</li>\n<li>Batasi jumlah perintah dan cara melakukan tugas.</li>\n</ul>\n"},{"title":"Menu","date":"2017-03-18T23:19:30.000Z","_content":"![](/images/ui-ux/Ui-Ux.jpg)\n## Pengertian Menu ##\nMenu adalah suatu penyajian petunjuk yang sudah di tentukan untuk memudahkan user.\n\n## Tujuan Menu ##\nMemudahkan user dalam mengoperasikan suatu sistem yang mudah diingat dan dipahami.\n\n## Kelebihan Menu ##\n- Memudahkan bagi pengguna baru/tidak ahli\n- Memungkinkan explorasi (pengguna bisa melihat menu untuk perintah lainnya yang cocok)\n- Menginstruksikan pengambilan keputusan bagi pengguna\n- Adanya penanganan kesalahan yang mudah (tidak perlu di-parsed sepeti halnya command entry)\n- Pengguna tidak perlu mengingat item yang diinginkan\n\n## Kekurangan Menu ##\n- Tidak cocok untuk tampilan grafis kecil\n- Cukup lambat bagi pengguna ahli/usser yang sering memakai sistem\n- Terlalu banyak menu menyebabkan overload informasi\n\n## Tipe Tipe Menu\nAda 2 macam tipe menu berdasarkan banyaknya sub menu pada suatu menu yaitu :\n- Single Menu\n- Multiple Combination Menu\n\n### Single Menu ###\n##### Pengertian\nSingle menu adalah menu yang berdiri secara independen tidak mempengaruhi yang lainnya.\n\n##### Macam-macam #####\n###### Binary Menu ######\n![](/images/ui-ux/menu/binary-menu.png)\nMenu yang terdiri dari dua pilihan.\n###### Multiple Item ######\n![](/images/ui-ux/menu/multiple-item.png)\nSingle menu yang mempunyai pilihan lebih dari dua\n###### Multiple Selection\n![](/images/ui-ux/menu/multiple-selection.png)\nVariasi dari single menu yang memungkinkan user untuk memilih lebih dari satu pilihan yang di berikan.\n###### Pull Down dan Pop Up\n![](/images/ui-ux/menu/pull-down-dan-pop-up.png)\nPull Down biasanya tersedia pada bagian atas menu bar sedangkan Pop Up keluar dari respon terhadap aksi pengguna\n###### Scrolling\n![](/images/ui-ux/menu/scrolling.png)\nScrolling dan 2 dimensional menu yaitu menu dengan item list yang banyak sehingga beralasan untuk ditampilkan\n###### Alphasliders\n![](/images/ui-ux/menu/alphasliders.png)\nAlphasliders menggunakan multiple level granularity pada pergerakan slider-nya atau scroll box. Alphaslider bisa mendukung untuk penggunakan menu dengan jumlah item yang banyak.\n###### Embedded Links\n![](/images/ui-ux/menu/embedded-links.png)\nMerupakan menu dimana itemnya ditanamkan dalam bentuk teks dan grafik yang bisa ditekan atau dipilih\n###### Iconic Menu\n![](/images/ui-ux/menu/iconic-menu.png)\nToolbars, atau palletes menu merupakan menu yang menawarkan banyak aksi yang bisa dipilih oleh pengguna dengan menekan untuk menampilkan.\n\n### Multiple Combination Menu ###\n###### Tree Structured Menus\n![](/images/ui-ux/menu/tree-structured-menus.png)\nMembagi menu-menu dalam berbagai kelompok sehingga user tidak bingung.\n###### Linear Sequence\n![](/images/ui-ux/menu/linier-sequence.png)\nBerfungsi untuk memudahkan user membuat suatu pilihan yang kompleks dan berguna untuk novice user (pemula).\n###### Simultaneous menus\n![](/images/ui-ux/menu/simultaneus-menu.png)\nMemberikan semua pilihan yang mungkin secara bersamaan dan memperbolehkan user untuk memasukkan pilihan secara sembarang.\n###### Menu Maps\n![](/images/ui-ux/menu/menu-maps.png)\nMemperlihatkan semua menu yang ada. Berfungsi suntuk membantu user agar tidak bingung dengan menu yang ada.\n###### Cyclic Network\n![](/images/ui-ux/menu/cyclic-network-menu.png)\nTipe menu yang dapat bercabang-cabang dan dapat kembali ke menu utama atau menu sebelumnya\n###### Acyclic Network\n![](/images/ui-ux/menu/acyclic-network-menu.png)\nTipe menu yang dapat bercabang-cabang dan setiap menu dapat ditempu dengan beberapa cara namun tidak dapat kembali ke menu utama atau menu sebelumnya.\n\n## Petunjuk Pembuatan Menu ##\nGuidelines untuk menu :\n- Organisasikan menu berdasarkan jenis pekerjaan\n- Lebih cenderung pada broad – shallow daripada narrow – deep\n- Perlihatkan posisi dengan grafik, angka, ataupun judul\n- Gunakan items sebagai judul untuk subtrees\n- Pengelompokkan item harus memiliki arti\n- Pembuatan urut – urutan item harus memiliki arti\n- Gunakan kalimat singkat (keyword)\n- Perhatikan konsistensi grammar, layout, dan terminologi\n- Sediakan shortcut\n- Perbolehkan user untuk langsung kembali ke menu sebelumnya dan main menu\n- Pertimbangkan online help, response time, display rate, dan ukuran layar\n\nHal-hal Yang Harus Diperhatikan Dalam Menu Layout:\n- Judul\n- Layout dan design(ukuran layar, display rate, character set dan teknik highlighting)\n- Konsistensi (judul, penempatan item, intruksi, pesan kesalahan dan laporan status)\n- Teknik (identasi, huruf besar/kecil,simbol,penanda posisi,cascading menu, magic lens)\n\nPengaturan konten dapat dilakukan dengan memperhatikan hal-hal berikut:\n● Mengelompokkan suatu pekerjaan yang sama kedalam satu kategori\n● Membuat menu dengan berurutan, urutan bisa didasarkan pada waktu, nomor urutan dan lain-lain\n","source":"_posts/kuliah/imk/ui-ux_menu.md","raw":"---\ntitle: Menu\ndate: 2017-03-19 06:19:30\ntags:\n  - ui-ux\ncategories:\n  - Teknologi\n  - Interaksi Manusia dan Komputer\n\n---\n![](/images/ui-ux/Ui-Ux.jpg)\n## Pengertian Menu ##\nMenu adalah suatu penyajian petunjuk yang sudah di tentukan untuk memudahkan user.\n\n## Tujuan Menu ##\nMemudahkan user dalam mengoperasikan suatu sistem yang mudah diingat dan dipahami.\n\n## Kelebihan Menu ##\n- Memudahkan bagi pengguna baru/tidak ahli\n- Memungkinkan explorasi (pengguna bisa melihat menu untuk perintah lainnya yang cocok)\n- Menginstruksikan pengambilan keputusan bagi pengguna\n- Adanya penanganan kesalahan yang mudah (tidak perlu di-parsed sepeti halnya command entry)\n- Pengguna tidak perlu mengingat item yang diinginkan\n\n## Kekurangan Menu ##\n- Tidak cocok untuk tampilan grafis kecil\n- Cukup lambat bagi pengguna ahli/usser yang sering memakai sistem\n- Terlalu banyak menu menyebabkan overload informasi\n\n## Tipe Tipe Menu\nAda 2 macam tipe menu berdasarkan banyaknya sub menu pada suatu menu yaitu :\n- Single Menu\n- Multiple Combination Menu\n\n### Single Menu ###\n##### Pengertian\nSingle menu adalah menu yang berdiri secara independen tidak mempengaruhi yang lainnya.\n\n##### Macam-macam #####\n###### Binary Menu ######\n![](/images/ui-ux/menu/binary-menu.png)\nMenu yang terdiri dari dua pilihan.\n###### Multiple Item ######\n![](/images/ui-ux/menu/multiple-item.png)\nSingle menu yang mempunyai pilihan lebih dari dua\n###### Multiple Selection\n![](/images/ui-ux/menu/multiple-selection.png)\nVariasi dari single menu yang memungkinkan user untuk memilih lebih dari satu pilihan yang di berikan.\n###### Pull Down dan Pop Up\n![](/images/ui-ux/menu/pull-down-dan-pop-up.png)\nPull Down biasanya tersedia pada bagian atas menu bar sedangkan Pop Up keluar dari respon terhadap aksi pengguna\n###### Scrolling\n![](/images/ui-ux/menu/scrolling.png)\nScrolling dan 2 dimensional menu yaitu menu dengan item list yang banyak sehingga beralasan untuk ditampilkan\n###### Alphasliders\n![](/images/ui-ux/menu/alphasliders.png)\nAlphasliders menggunakan multiple level granularity pada pergerakan slider-nya atau scroll box. Alphaslider bisa mendukung untuk penggunakan menu dengan jumlah item yang banyak.\n###### Embedded Links\n![](/images/ui-ux/menu/embedded-links.png)\nMerupakan menu dimana itemnya ditanamkan dalam bentuk teks dan grafik yang bisa ditekan atau dipilih\n###### Iconic Menu\n![](/images/ui-ux/menu/iconic-menu.png)\nToolbars, atau palletes menu merupakan menu yang menawarkan banyak aksi yang bisa dipilih oleh pengguna dengan menekan untuk menampilkan.\n\n### Multiple Combination Menu ###\n###### Tree Structured Menus\n![](/images/ui-ux/menu/tree-structured-menus.png)\nMembagi menu-menu dalam berbagai kelompok sehingga user tidak bingung.\n###### Linear Sequence\n![](/images/ui-ux/menu/linier-sequence.png)\nBerfungsi untuk memudahkan user membuat suatu pilihan yang kompleks dan berguna untuk novice user (pemula).\n###### Simultaneous menus\n![](/images/ui-ux/menu/simultaneus-menu.png)\nMemberikan semua pilihan yang mungkin secara bersamaan dan memperbolehkan user untuk memasukkan pilihan secara sembarang.\n###### Menu Maps\n![](/images/ui-ux/menu/menu-maps.png)\nMemperlihatkan semua menu yang ada. Berfungsi suntuk membantu user agar tidak bingung dengan menu yang ada.\n###### Cyclic Network\n![](/images/ui-ux/menu/cyclic-network-menu.png)\nTipe menu yang dapat bercabang-cabang dan dapat kembali ke menu utama atau menu sebelumnya\n###### Acyclic Network\n![](/images/ui-ux/menu/acyclic-network-menu.png)\nTipe menu yang dapat bercabang-cabang dan setiap menu dapat ditempu dengan beberapa cara namun tidak dapat kembali ke menu utama atau menu sebelumnya.\n\n## Petunjuk Pembuatan Menu ##\nGuidelines untuk menu :\n- Organisasikan menu berdasarkan jenis pekerjaan\n- Lebih cenderung pada broad – shallow daripada narrow – deep\n- Perlihatkan posisi dengan grafik, angka, ataupun judul\n- Gunakan items sebagai judul untuk subtrees\n- Pengelompokkan item harus memiliki arti\n- Pembuatan urut – urutan item harus memiliki arti\n- Gunakan kalimat singkat (keyword)\n- Perhatikan konsistensi grammar, layout, dan terminologi\n- Sediakan shortcut\n- Perbolehkan user untuk langsung kembali ke menu sebelumnya dan main menu\n- Pertimbangkan online help, response time, display rate, dan ukuran layar\n\nHal-hal Yang Harus Diperhatikan Dalam Menu Layout:\n- Judul\n- Layout dan design(ukuran layar, display rate, character set dan teknik highlighting)\n- Konsistensi (judul, penempatan item, intruksi, pesan kesalahan dan laporan status)\n- Teknik (identasi, huruf besar/kecil,simbol,penanda posisi,cascading menu, magic lens)\n\nPengaturan konten dapat dilakukan dengan memperhatikan hal-hal berikut:\n● Mengelompokkan suatu pekerjaan yang sama kedalam satu kategori\n● Membuat menu dengan berurutan, urutan bisa didasarkan pada waktu, nomor urutan dan lain-lain\n","slug":"kuliah/imk/ui-ux_menu","published":1,"updated":"2017-04-16T12:57:11.760Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj2ed41l600068jlpfsrkipkr","content":"<p><img src=\"/images/ui-ux/Ui-Ux.jpg\" alt=\"\"></p>\n<h2 id=\"Pengertian-Menu\"><a href=\"#Pengertian-Menu\" class=\"headerlink\" title=\"Pengertian Menu\"></a>Pengertian Menu</h2><p>Menu adalah suatu penyajian petunjuk yang sudah di tentukan untuk memudahkan user.</p>\n<h2 id=\"Tujuan-Menu\"><a href=\"#Tujuan-Menu\" class=\"headerlink\" title=\"Tujuan Menu\"></a>Tujuan Menu</h2><p>Memudahkan user dalam mengoperasikan suatu sistem yang mudah diingat dan dipahami.</p>\n<h2 id=\"Kelebihan-Menu\"><a href=\"#Kelebihan-Menu\" class=\"headerlink\" title=\"Kelebihan Menu\"></a>Kelebihan Menu</h2><ul>\n<li>Memudahkan bagi pengguna baru/tidak ahli</li>\n<li>Memungkinkan explorasi (pengguna bisa melihat menu untuk perintah lainnya yang cocok)</li>\n<li>Menginstruksikan pengambilan keputusan bagi pengguna</li>\n<li>Adanya penanganan kesalahan yang mudah (tidak perlu di-parsed sepeti halnya command entry)</li>\n<li>Pengguna tidak perlu mengingat item yang diinginkan</li>\n</ul>\n<h2 id=\"Kekurangan-Menu\"><a href=\"#Kekurangan-Menu\" class=\"headerlink\" title=\"Kekurangan Menu\"></a>Kekurangan Menu</h2><ul>\n<li>Tidak cocok untuk tampilan grafis kecil</li>\n<li>Cukup lambat bagi pengguna ahli/usser yang sering memakai sistem</li>\n<li>Terlalu banyak menu menyebabkan overload informasi</li>\n</ul>\n<h2 id=\"Tipe-Tipe-Menu\"><a href=\"#Tipe-Tipe-Menu\" class=\"headerlink\" title=\"Tipe Tipe Menu\"></a>Tipe Tipe Menu</h2><p>Ada 2 macam tipe menu berdasarkan banyaknya sub menu pada suatu menu yaitu :</p>\n<ul>\n<li>Single Menu</li>\n<li>Multiple Combination Menu</li>\n</ul>\n<h3 id=\"Single-Menu\"><a href=\"#Single-Menu\" class=\"headerlink\" title=\"Single Menu\"></a>Single Menu</h3><h5 id=\"Pengertian\"><a href=\"#Pengertian\" class=\"headerlink\" title=\"Pengertian\"></a>Pengertian</h5><p>Single menu adalah menu yang berdiri secara independen tidak mempengaruhi yang lainnya.</p>\n<h5 id=\"Macam-macam\"><a href=\"#Macam-macam\" class=\"headerlink\" title=\"Macam-macam\"></a>Macam-macam</h5><h6 id=\"Binary-Menu\"><a href=\"#Binary-Menu\" class=\"headerlink\" title=\"Binary Menu\"></a>Binary Menu</h6><p><img src=\"/images/ui-ux/menu/binary-menu.png\" alt=\"\"><br>Menu yang terdiri dari dua pilihan.</p>\n<h6 id=\"Multiple-Item\"><a href=\"#Multiple-Item\" class=\"headerlink\" title=\"Multiple Item\"></a>Multiple Item</h6><p><img src=\"/images/ui-ux/menu/multiple-item.png\" alt=\"\"><br>Single menu yang mempunyai pilihan lebih dari dua</p>\n<h6 id=\"Multiple-Selection\"><a href=\"#Multiple-Selection\" class=\"headerlink\" title=\"Multiple Selection\"></a>Multiple Selection</h6><p><img src=\"/images/ui-ux/menu/multiple-selection.png\" alt=\"\"><br>Variasi dari single menu yang memungkinkan user untuk memilih lebih dari satu pilihan yang di berikan.</p>\n<h6 id=\"Pull-Down-dan-Pop-Up\"><a href=\"#Pull-Down-dan-Pop-Up\" class=\"headerlink\" title=\"Pull Down dan Pop Up\"></a>Pull Down dan Pop Up</h6><p><img src=\"/images/ui-ux/menu/pull-down-dan-pop-up.png\" alt=\"\"><br>Pull Down biasanya tersedia pada bagian atas menu bar sedangkan Pop Up keluar dari respon terhadap aksi pengguna</p>\n<h6 id=\"Scrolling\"><a href=\"#Scrolling\" class=\"headerlink\" title=\"Scrolling\"></a>Scrolling</h6><p><img src=\"/images/ui-ux/menu/scrolling.png\" alt=\"\"><br>Scrolling dan 2 dimensional menu yaitu menu dengan item list yang banyak sehingga beralasan untuk ditampilkan</p>\n<h6 id=\"Alphasliders\"><a href=\"#Alphasliders\" class=\"headerlink\" title=\"Alphasliders\"></a>Alphasliders</h6><p><img src=\"/images/ui-ux/menu/alphasliders.png\" alt=\"\"><br>Alphasliders menggunakan multiple level granularity pada pergerakan slider-nya atau scroll box. Alphaslider bisa mendukung untuk penggunakan menu dengan jumlah item yang banyak.</p>\n<h6 id=\"Embedded-Links\"><a href=\"#Embedded-Links\" class=\"headerlink\" title=\"Embedded Links\"></a>Embedded Links</h6><p><img src=\"/images/ui-ux/menu/embedded-links.png\" alt=\"\"><br>Merupakan menu dimana itemnya ditanamkan dalam bentuk teks dan grafik yang bisa ditekan atau dipilih</p>\n<h6 id=\"Iconic-Menu\"><a href=\"#Iconic-Menu\" class=\"headerlink\" title=\"Iconic Menu\"></a>Iconic Menu</h6><p><img src=\"/images/ui-ux/menu/iconic-menu.png\" alt=\"\"><br>Toolbars, atau palletes menu merupakan menu yang menawarkan banyak aksi yang bisa dipilih oleh pengguna dengan menekan untuk menampilkan.</p>\n<h3 id=\"Multiple-Combination-Menu\"><a href=\"#Multiple-Combination-Menu\" class=\"headerlink\" title=\"Multiple Combination Menu\"></a>Multiple Combination Menu</h3><h6 id=\"Tree-Structured-Menus\"><a href=\"#Tree-Structured-Menus\" class=\"headerlink\" title=\"Tree Structured Menus\"></a>Tree Structured Menus</h6><p><img src=\"/images/ui-ux/menu/tree-structured-menus.png\" alt=\"\"><br>Membagi menu-menu dalam berbagai kelompok sehingga user tidak bingung.</p>\n<h6 id=\"Linear-Sequence\"><a href=\"#Linear-Sequence\" class=\"headerlink\" title=\"Linear Sequence\"></a>Linear Sequence</h6><p><img src=\"/images/ui-ux/menu/linier-sequence.png\" alt=\"\"><br>Berfungsi untuk memudahkan user membuat suatu pilihan yang kompleks dan berguna untuk novice user (pemula).</p>\n<h6 id=\"Simultaneous-menus\"><a href=\"#Simultaneous-menus\" class=\"headerlink\" title=\"Simultaneous menus\"></a>Simultaneous menus</h6><p><img src=\"/images/ui-ux/menu/simultaneus-menu.png\" alt=\"\"><br>Memberikan semua pilihan yang mungkin secara bersamaan dan memperbolehkan user untuk memasukkan pilihan secara sembarang.</p>\n<h6 id=\"Menu-Maps\"><a href=\"#Menu-Maps\" class=\"headerlink\" title=\"Menu Maps\"></a>Menu Maps</h6><p><img src=\"/images/ui-ux/menu/menu-maps.png\" alt=\"\"><br>Memperlihatkan semua menu yang ada. Berfungsi suntuk membantu user agar tidak bingung dengan menu yang ada.</p>\n<h6 id=\"Cyclic-Network\"><a href=\"#Cyclic-Network\" class=\"headerlink\" title=\"Cyclic Network\"></a>Cyclic Network</h6><p><img src=\"/images/ui-ux/menu/cyclic-network-menu.png\" alt=\"\"><br>Tipe menu yang dapat bercabang-cabang dan dapat kembali ke menu utama atau menu sebelumnya</p>\n<h6 id=\"Acyclic-Network\"><a href=\"#Acyclic-Network\" class=\"headerlink\" title=\"Acyclic Network\"></a>Acyclic Network</h6><p><img src=\"/images/ui-ux/menu/acyclic-network-menu.png\" alt=\"\"><br>Tipe menu yang dapat bercabang-cabang dan setiap menu dapat ditempu dengan beberapa cara namun tidak dapat kembali ke menu utama atau menu sebelumnya.</p>\n<h2 id=\"Petunjuk-Pembuatan-Menu\"><a href=\"#Petunjuk-Pembuatan-Menu\" class=\"headerlink\" title=\"Petunjuk Pembuatan Menu\"></a>Petunjuk Pembuatan Menu</h2><p>Guidelines untuk menu :</p>\n<ul>\n<li>Organisasikan menu berdasarkan jenis pekerjaan</li>\n<li>Lebih cenderung pada broad – shallow daripada narrow – deep</li>\n<li>Perlihatkan posisi dengan grafik, angka, ataupun judul</li>\n<li>Gunakan items sebagai judul untuk subtrees</li>\n<li>Pengelompokkan item harus memiliki arti</li>\n<li>Pembuatan urut – urutan item harus memiliki arti</li>\n<li>Gunakan kalimat singkat (keyword)</li>\n<li>Perhatikan konsistensi grammar, layout, dan terminologi</li>\n<li>Sediakan shortcut</li>\n<li>Perbolehkan user untuk langsung kembali ke menu sebelumnya dan main menu</li>\n<li>Pertimbangkan online help, response time, display rate, dan ukuran layar</li>\n</ul>\n<p>Hal-hal Yang Harus Diperhatikan Dalam Menu Layout:</p>\n<ul>\n<li>Judul</li>\n<li>Layout dan design(ukuran layar, display rate, character set dan teknik highlighting)</li>\n<li>Konsistensi (judul, penempatan item, intruksi, pesan kesalahan dan laporan status)</li>\n<li>Teknik (identasi, huruf besar/kecil,simbol,penanda posisi,cascading menu, magic lens)</li>\n</ul>\n<p>Pengaturan konten dapat dilakukan dengan memperhatikan hal-hal berikut:<br>● Mengelompokkan suatu pekerjaan yang sama kedalam satu kategori<br>● Membuat menu dengan berurutan, urutan bisa didasarkan pada waktu, nomor urutan dan lain-lain</p>\n","excerpt":"","more":"<p><img src=\"/images/ui-ux/Ui-Ux.jpg\" alt=\"\"></p>\n<h2 id=\"Pengertian-Menu\"><a href=\"#Pengertian-Menu\" class=\"headerlink\" title=\"Pengertian Menu\"></a>Pengertian Menu</h2><p>Menu adalah suatu penyajian petunjuk yang sudah di tentukan untuk memudahkan user.</p>\n<h2 id=\"Tujuan-Menu\"><a href=\"#Tujuan-Menu\" class=\"headerlink\" title=\"Tujuan Menu\"></a>Tujuan Menu</h2><p>Memudahkan user dalam mengoperasikan suatu sistem yang mudah diingat dan dipahami.</p>\n<h2 id=\"Kelebihan-Menu\"><a href=\"#Kelebihan-Menu\" class=\"headerlink\" title=\"Kelebihan Menu\"></a>Kelebihan Menu</h2><ul>\n<li>Memudahkan bagi pengguna baru/tidak ahli</li>\n<li>Memungkinkan explorasi (pengguna bisa melihat menu untuk perintah lainnya yang cocok)</li>\n<li>Menginstruksikan pengambilan keputusan bagi pengguna</li>\n<li>Adanya penanganan kesalahan yang mudah (tidak perlu di-parsed sepeti halnya command entry)</li>\n<li>Pengguna tidak perlu mengingat item yang diinginkan</li>\n</ul>\n<h2 id=\"Kekurangan-Menu\"><a href=\"#Kekurangan-Menu\" class=\"headerlink\" title=\"Kekurangan Menu\"></a>Kekurangan Menu</h2><ul>\n<li>Tidak cocok untuk tampilan grafis kecil</li>\n<li>Cukup lambat bagi pengguna ahli/usser yang sering memakai sistem</li>\n<li>Terlalu banyak menu menyebabkan overload informasi</li>\n</ul>\n<h2 id=\"Tipe-Tipe-Menu\"><a href=\"#Tipe-Tipe-Menu\" class=\"headerlink\" title=\"Tipe Tipe Menu\"></a>Tipe Tipe Menu</h2><p>Ada 2 macam tipe menu berdasarkan banyaknya sub menu pada suatu menu yaitu :</p>\n<ul>\n<li>Single Menu</li>\n<li>Multiple Combination Menu</li>\n</ul>\n<h3 id=\"Single-Menu\"><a href=\"#Single-Menu\" class=\"headerlink\" title=\"Single Menu\"></a>Single Menu</h3><h5 id=\"Pengertian\"><a href=\"#Pengertian\" class=\"headerlink\" title=\"Pengertian\"></a>Pengertian</h5><p>Single menu adalah menu yang berdiri secara independen tidak mempengaruhi yang lainnya.</p>\n<h5 id=\"Macam-macam\"><a href=\"#Macam-macam\" class=\"headerlink\" title=\"Macam-macam\"></a>Macam-macam</h5><h6 id=\"Binary-Menu\"><a href=\"#Binary-Menu\" class=\"headerlink\" title=\"Binary Menu\"></a>Binary Menu</h6><p><img src=\"/images/ui-ux/menu/binary-menu.png\" alt=\"\"><br>Menu yang terdiri dari dua pilihan.</p>\n<h6 id=\"Multiple-Item\"><a href=\"#Multiple-Item\" class=\"headerlink\" title=\"Multiple Item\"></a>Multiple Item</h6><p><img src=\"/images/ui-ux/menu/multiple-item.png\" alt=\"\"><br>Single menu yang mempunyai pilihan lebih dari dua</p>\n<h6 id=\"Multiple-Selection\"><a href=\"#Multiple-Selection\" class=\"headerlink\" title=\"Multiple Selection\"></a>Multiple Selection</h6><p><img src=\"/images/ui-ux/menu/multiple-selection.png\" alt=\"\"><br>Variasi dari single menu yang memungkinkan user untuk memilih lebih dari satu pilihan yang di berikan.</p>\n<h6 id=\"Pull-Down-dan-Pop-Up\"><a href=\"#Pull-Down-dan-Pop-Up\" class=\"headerlink\" title=\"Pull Down dan Pop Up\"></a>Pull Down dan Pop Up</h6><p><img src=\"/images/ui-ux/menu/pull-down-dan-pop-up.png\" alt=\"\"><br>Pull Down biasanya tersedia pada bagian atas menu bar sedangkan Pop Up keluar dari respon terhadap aksi pengguna</p>\n<h6 id=\"Scrolling\"><a href=\"#Scrolling\" class=\"headerlink\" title=\"Scrolling\"></a>Scrolling</h6><p><img src=\"/images/ui-ux/menu/scrolling.png\" alt=\"\"><br>Scrolling dan 2 dimensional menu yaitu menu dengan item list yang banyak sehingga beralasan untuk ditampilkan</p>\n<h6 id=\"Alphasliders\"><a href=\"#Alphasliders\" class=\"headerlink\" title=\"Alphasliders\"></a>Alphasliders</h6><p><img src=\"/images/ui-ux/menu/alphasliders.png\" alt=\"\"><br>Alphasliders menggunakan multiple level granularity pada pergerakan slider-nya atau scroll box. Alphaslider bisa mendukung untuk penggunakan menu dengan jumlah item yang banyak.</p>\n<h6 id=\"Embedded-Links\"><a href=\"#Embedded-Links\" class=\"headerlink\" title=\"Embedded Links\"></a>Embedded Links</h6><p><img src=\"/images/ui-ux/menu/embedded-links.png\" alt=\"\"><br>Merupakan menu dimana itemnya ditanamkan dalam bentuk teks dan grafik yang bisa ditekan atau dipilih</p>\n<h6 id=\"Iconic-Menu\"><a href=\"#Iconic-Menu\" class=\"headerlink\" title=\"Iconic Menu\"></a>Iconic Menu</h6><p><img src=\"/images/ui-ux/menu/iconic-menu.png\" alt=\"\"><br>Toolbars, atau palletes menu merupakan menu yang menawarkan banyak aksi yang bisa dipilih oleh pengguna dengan menekan untuk menampilkan.</p>\n<h3 id=\"Multiple-Combination-Menu\"><a href=\"#Multiple-Combination-Menu\" class=\"headerlink\" title=\"Multiple Combination Menu\"></a>Multiple Combination Menu</h3><h6 id=\"Tree-Structured-Menus\"><a href=\"#Tree-Structured-Menus\" class=\"headerlink\" title=\"Tree Structured Menus\"></a>Tree Structured Menus</h6><p><img src=\"/images/ui-ux/menu/tree-structured-menus.png\" alt=\"\"><br>Membagi menu-menu dalam berbagai kelompok sehingga user tidak bingung.</p>\n<h6 id=\"Linear-Sequence\"><a href=\"#Linear-Sequence\" class=\"headerlink\" title=\"Linear Sequence\"></a>Linear Sequence</h6><p><img src=\"/images/ui-ux/menu/linier-sequence.png\" alt=\"\"><br>Berfungsi untuk memudahkan user membuat suatu pilihan yang kompleks dan berguna untuk novice user (pemula).</p>\n<h6 id=\"Simultaneous-menus\"><a href=\"#Simultaneous-menus\" class=\"headerlink\" title=\"Simultaneous menus\"></a>Simultaneous menus</h6><p><img src=\"/images/ui-ux/menu/simultaneus-menu.png\" alt=\"\"><br>Memberikan semua pilihan yang mungkin secara bersamaan dan memperbolehkan user untuk memasukkan pilihan secara sembarang.</p>\n<h6 id=\"Menu-Maps\"><a href=\"#Menu-Maps\" class=\"headerlink\" title=\"Menu Maps\"></a>Menu Maps</h6><p><img src=\"/images/ui-ux/menu/menu-maps.png\" alt=\"\"><br>Memperlihatkan semua menu yang ada. Berfungsi suntuk membantu user agar tidak bingung dengan menu yang ada.</p>\n<h6 id=\"Cyclic-Network\"><a href=\"#Cyclic-Network\" class=\"headerlink\" title=\"Cyclic Network\"></a>Cyclic Network</h6><p><img src=\"/images/ui-ux/menu/cyclic-network-menu.png\" alt=\"\"><br>Tipe menu yang dapat bercabang-cabang dan dapat kembali ke menu utama atau menu sebelumnya</p>\n<h6 id=\"Acyclic-Network\"><a href=\"#Acyclic-Network\" class=\"headerlink\" title=\"Acyclic Network\"></a>Acyclic Network</h6><p><img src=\"/images/ui-ux/menu/acyclic-network-menu.png\" alt=\"\"><br>Tipe menu yang dapat bercabang-cabang dan setiap menu dapat ditempu dengan beberapa cara namun tidak dapat kembali ke menu utama atau menu sebelumnya.</p>\n<h2 id=\"Petunjuk-Pembuatan-Menu\"><a href=\"#Petunjuk-Pembuatan-Menu\" class=\"headerlink\" title=\"Petunjuk Pembuatan Menu\"></a>Petunjuk Pembuatan Menu</h2><p>Guidelines untuk menu :</p>\n<ul>\n<li>Organisasikan menu berdasarkan jenis pekerjaan</li>\n<li>Lebih cenderung pada broad – shallow daripada narrow – deep</li>\n<li>Perlihatkan posisi dengan grafik, angka, ataupun judul</li>\n<li>Gunakan items sebagai judul untuk subtrees</li>\n<li>Pengelompokkan item harus memiliki arti</li>\n<li>Pembuatan urut – urutan item harus memiliki arti</li>\n<li>Gunakan kalimat singkat (keyword)</li>\n<li>Perhatikan konsistensi grammar, layout, dan terminologi</li>\n<li>Sediakan shortcut</li>\n<li>Perbolehkan user untuk langsung kembali ke menu sebelumnya dan main menu</li>\n<li>Pertimbangkan online help, response time, display rate, dan ukuran layar</li>\n</ul>\n<p>Hal-hal Yang Harus Diperhatikan Dalam Menu Layout:</p>\n<ul>\n<li>Judul</li>\n<li>Layout dan design(ukuran layar, display rate, character set dan teknik highlighting)</li>\n<li>Konsistensi (judul, penempatan item, intruksi, pesan kesalahan dan laporan status)</li>\n<li>Teknik (identasi, huruf besar/kecil,simbol,penanda posisi,cascading menu, magic lens)</li>\n</ul>\n<p>Pengaturan konten dapat dilakukan dengan memperhatikan hal-hal berikut:<br>● Mengelompokkan suatu pekerjaan yang sama kedalam satu kategori<br>● Membuat menu dengan berurutan, urutan bisa didasarkan pada waktu, nomor urutan dan lain-lain</p>\n"},{"title":"Bagian Processor","date":"2017-04-17T13:35:37.000Z","_content":"\n# ALU (Arithmetic and Logic Unit)\n  ALU merupakan bagian pengolah biner di processor. ALU bertugas melalukan operasi aritmatika dan logika sesuai instruksi yang diberikan.\n# Control Unit\n  Control Unit bertugas memberikan arahan / kendali / kontrol terhadap operasi yang dilakukan oleh ALU\n# Register\n  Register merupakan perangkat memori sementara yang menyimpan data dari suatu program yang sedang berjalan.\n","source":"_posts/kuliah/orakom/orakom-bagian-processor.md","raw":"---\ntitle: Bagian Processor\ndate: 2017-04-17 20:35:37\ntags:\n  - komputer\ncategories:\n  - Teknologi\n  - Organisasi dan Arsitektur Komputer\n\n---\n\n# ALU (Arithmetic and Logic Unit)\n  ALU merupakan bagian pengolah biner di processor. ALU bertugas melalukan operasi aritmatika dan logika sesuai instruksi yang diberikan.\n# Control Unit\n  Control Unit bertugas memberikan arahan / kendali / kontrol terhadap operasi yang dilakukan oleh ALU\n# Register\n  Register merupakan perangkat memori sementara yang menyimpan data dari suatu program yang sedang berjalan.\n","slug":"kuliah/orakom/orakom-bagian-processor","published":1,"updated":"2017-04-17T13:45:03.945Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj2ed41la00078jlpx3bj9j2z","content":"<h1 id=\"ALU-Arithmetic-and-Logic-Unit\"><a href=\"#ALU-Arithmetic-and-Logic-Unit\" class=\"headerlink\" title=\"ALU (Arithmetic and Logic Unit)\"></a>ALU (Arithmetic and Logic Unit)</h1><p>  ALU merupakan bagian pengolah biner di processor. ALU bertugas melalukan operasi aritmatika dan logika sesuai instruksi yang diberikan.</p>\n<h1 id=\"Control-Unit\"><a href=\"#Control-Unit\" class=\"headerlink\" title=\"Control Unit\"></a>Control Unit</h1><p>  Control Unit bertugas memberikan arahan / kendali / kontrol terhadap operasi yang dilakukan oleh ALU</p>\n<h1 id=\"Register\"><a href=\"#Register\" class=\"headerlink\" title=\"Register\"></a>Register</h1><p>  Register merupakan perangkat memori sementara yang menyimpan data dari suatu program yang sedang berjalan.</p>\n","excerpt":"","more":"<h1 id=\"ALU-Arithmetic-and-Logic-Unit\"><a href=\"#ALU-Arithmetic-and-Logic-Unit\" class=\"headerlink\" title=\"ALU (Arithmetic and Logic Unit)\"></a>ALU (Arithmetic and Logic Unit)</h1><p>  ALU merupakan bagian pengolah biner di processor. ALU bertugas melalukan operasi aritmatika dan logika sesuai instruksi yang diberikan.</p>\n<h1 id=\"Control-Unit\"><a href=\"#Control-Unit\" class=\"headerlink\" title=\"Control Unit\"></a>Control Unit</h1><p>  Control Unit bertugas memberikan arahan / kendali / kontrol terhadap operasi yang dilakukan oleh ALU</p>\n<h1 id=\"Register\"><a href=\"#Register\" class=\"headerlink\" title=\"Register\"></a>Register</h1><p>  Register merupakan perangkat memori sementara yang menyimpan data dari suatu program yang sedang berjalan.</p>\n"},{"title":"Sistem Bilangan","date":"2017-04-17T12:56:24.000Z","_content":"\n# Macam-macam Sistem Bilangan\n- Biner (basis 2)\n  Simbol : 0,1\n- Oktal (basis 8)\n  Simbol : 0,1,2,3,4,5,6,7\n- Desimal (basis 10)\n  Simbol : 0,1,2,3,4,5,6,7,8.9\n- Heksal (basis 16)\n  Simbol : 0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15\n\n# Konversi antar Sistem Bilangan\n- Desimal ke Biner\n\n\n  Contoh : Semisal kita akan mengubah 123(10) ke biner. Hal pertama yang harus kita lakukan adalah membagi angka tersebut dengan 2, kemudian hasil pembagian kita taruh dibagian bawah. Dan apabila angka habis dibagi 2 maka kita tulis 0 dan apabila bersisa kita tulis 1 di bagian samping. Lakukan langkah tersebut secara berulang-ulang sampai hasilnya tidak bisa dibagi 2 lagi. Contohnya adalah sebagai berikut :\n  ```\n  123\n  --- =  1\n  61\n  --- = 1\n  30\n  --- = 0\n  15\n  --- = 1\n  7\n  --- = 1\n  3\n  --- = 1\n  1\n  ```\n  Dari hasil diatas kita dapatkan hasil 1 1 1 1 0 1 1 (dibaca dari bawah). Jadi biner dari 123 adalah 1111011.\n\n- Biner ke Desimal\n\n\n  Contoh : Semisal kita akan mengubah 1111011(2) ke desimal. Hal pertama yang kita lakukan adalah mendefinisikan tiap digit dengan 2 pangkat nomer digit. Digit dihitung dari belakang. Contohnya adalah sebagai berikut :\n  ```\n  2^6   2^5   2^4   2^3   2^2   2^1   2^0\n  64    32    16    8     4     2     1\n\n  1     1     1     1     0     1     1\n  ```\n  Kemudian kita tambahkan tiap hasil dari 2 pangkat nomer digit yang bilangan binernya 1.\n  64+32+16+8+4+2+1 = 123. Dari penjumlahan tersebut kita dapatkan hasil 123, jadi desimal dari 1111011 adalah 123.\n","source":"_posts/kuliah/orakom/orakom-sistem-bilangan.md","raw":"---\ntitle: Sistem Bilangan\ndate: 2017-04-17 19:56:24\ntags:\n  - komputer\ncategories:\n  - Teknologi\n  - Organisasi dan Arsitektur Komputer\n---\n\n# Macam-macam Sistem Bilangan\n- Biner (basis 2)\n  Simbol : 0,1\n- Oktal (basis 8)\n  Simbol : 0,1,2,3,4,5,6,7\n- Desimal (basis 10)\n  Simbol : 0,1,2,3,4,5,6,7,8.9\n- Heksal (basis 16)\n  Simbol : 0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15\n\n# Konversi antar Sistem Bilangan\n- Desimal ke Biner\n\n\n  Contoh : Semisal kita akan mengubah 123(10) ke biner. Hal pertama yang harus kita lakukan adalah membagi angka tersebut dengan 2, kemudian hasil pembagian kita taruh dibagian bawah. Dan apabila angka habis dibagi 2 maka kita tulis 0 dan apabila bersisa kita tulis 1 di bagian samping. Lakukan langkah tersebut secara berulang-ulang sampai hasilnya tidak bisa dibagi 2 lagi. Contohnya adalah sebagai berikut :\n  ```\n  123\n  --- =  1\n  61\n  --- = 1\n  30\n  --- = 0\n  15\n  --- = 1\n  7\n  --- = 1\n  3\n  --- = 1\n  1\n  ```\n  Dari hasil diatas kita dapatkan hasil 1 1 1 1 0 1 1 (dibaca dari bawah). Jadi biner dari 123 adalah 1111011.\n\n- Biner ke Desimal\n\n\n  Contoh : Semisal kita akan mengubah 1111011(2) ke desimal. Hal pertama yang kita lakukan adalah mendefinisikan tiap digit dengan 2 pangkat nomer digit. Digit dihitung dari belakang. Contohnya adalah sebagai berikut :\n  ```\n  2^6   2^5   2^4   2^3   2^2   2^1   2^0\n  64    32    16    8     4     2     1\n\n  1     1     1     1     0     1     1\n  ```\n  Kemudian kita tambahkan tiap hasil dari 2 pangkat nomer digit yang bilangan binernya 1.\n  64+32+16+8+4+2+1 = 123. Dari penjumlahan tersebut kita dapatkan hasil 123, jadi desimal dari 1111011 adalah 123.\n","slug":"kuliah/orakom/orakom-sistem-bilangan","published":1,"updated":"2017-04-17T13:22:01.888Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj2ed41ll00098jlpz8feyiun","content":"<h1 id=\"Macam-macam-Sistem-Bilangan\"><a href=\"#Macam-macam-Sistem-Bilangan\" class=\"headerlink\" title=\"Macam-macam Sistem Bilangan\"></a>Macam-macam Sistem Bilangan</h1><ul>\n<li>Biner (basis 2)<br>Simbol : 0,1</li>\n<li>Oktal (basis 8)<br>Simbol : 0,1,2,3,4,5,6,7</li>\n<li>Desimal (basis 10)<br>Simbol : 0,1,2,3,4,5,6,7,8.9</li>\n<li>Heksal (basis 16)<br>Simbol : 0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15</li>\n</ul>\n<h1 id=\"Konversi-antar-Sistem-Bilangan\"><a href=\"#Konversi-antar-Sistem-Bilangan\" class=\"headerlink\" title=\"Konversi antar Sistem Bilangan\"></a>Konversi antar Sistem Bilangan</h1><ul>\n<li>Desimal ke Biner</li>\n</ul>\n<p>  Contoh : Semisal kita akan mengubah 123(10) ke biner. Hal pertama yang harus kita lakukan adalah membagi angka tersebut dengan 2, kemudian hasil pembagian kita taruh dibagian bawah. Dan apabila angka habis dibagi 2 maka kita tulis 0 dan apabila bersisa kita tulis 1 di bagian samping. Lakukan langkah tersebut secara berulang-ulang sampai hasilnya tidak bisa dibagi 2 lagi. Contohnya adalah sebagai berikut :<br>  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">123</div><div class=\"line\">--- =  1</div><div class=\"line\">61</div><div class=\"line\">--- = 1</div><div class=\"line\">30</div><div class=\"line\">--- = 0</div><div class=\"line\">15</div><div class=\"line\">--- = 1</div><div class=\"line\">7</div><div class=\"line\">--- = 1</div><div class=\"line\">3</div><div class=\"line\">--- = 1</div><div class=\"line\">1</div></pre></td></tr></table></figure></p>\n<p>  Dari hasil diatas kita dapatkan hasil 1 1 1 1 0 1 1 (dibaca dari bawah). Jadi biner dari 123 adalah 1111011.</p>\n<ul>\n<li>Biner ke Desimal</li>\n</ul>\n<p>  Contoh : Semisal kita akan mengubah 1111011(2) ke desimal. Hal pertama yang kita lakukan adalah mendefinisikan tiap digit dengan 2 pangkat nomer digit. Digit dihitung dari belakang. Contohnya adalah sebagai berikut :<br>  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">2^6   2^5   2^4   2^3   2^2   2^1   2^0</div><div class=\"line\">64    32    16    8     4     2     1</div><div class=\"line\"></div><div class=\"line\">1     1     1     1     0     1     1</div></pre></td></tr></table></figure></p>\n<p>  Kemudian kita tambahkan tiap hasil dari 2 pangkat nomer digit yang bilangan binernya 1.<br>  64+32+16+8+4+2+1 = 123. Dari penjumlahan tersebut kita dapatkan hasil 123, jadi desimal dari 1111011 adalah 123.</p>\n","excerpt":"","more":"<h1 id=\"Macam-macam-Sistem-Bilangan\"><a href=\"#Macam-macam-Sistem-Bilangan\" class=\"headerlink\" title=\"Macam-macam Sistem Bilangan\"></a>Macam-macam Sistem Bilangan</h1><ul>\n<li>Biner (basis 2)<br>Simbol : 0,1</li>\n<li>Oktal (basis 8)<br>Simbol : 0,1,2,3,4,5,6,7</li>\n<li>Desimal (basis 10)<br>Simbol : 0,1,2,3,4,5,6,7,8.9</li>\n<li>Heksal (basis 16)<br>Simbol : 0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15</li>\n</ul>\n<h1 id=\"Konversi-antar-Sistem-Bilangan\"><a href=\"#Konversi-antar-Sistem-Bilangan\" class=\"headerlink\" title=\"Konversi antar Sistem Bilangan\"></a>Konversi antar Sistem Bilangan</h1><ul>\n<li>Desimal ke Biner</li>\n</ul>\n<p>  Contoh : Semisal kita akan mengubah 123(10) ke biner. Hal pertama yang harus kita lakukan adalah membagi angka tersebut dengan 2, kemudian hasil pembagian kita taruh dibagian bawah. Dan apabila angka habis dibagi 2 maka kita tulis 0 dan apabila bersisa kita tulis 1 di bagian samping. Lakukan langkah tersebut secara berulang-ulang sampai hasilnya tidak bisa dibagi 2 lagi. Contohnya adalah sebagai berikut :<br>  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">123</div><div class=\"line\">--- =  1</div><div class=\"line\">61</div><div class=\"line\">--- = 1</div><div class=\"line\">30</div><div class=\"line\">--- = 0</div><div class=\"line\">15</div><div class=\"line\">--- = 1</div><div class=\"line\">7</div><div class=\"line\">--- = 1</div><div class=\"line\">3</div><div class=\"line\">--- = 1</div><div class=\"line\">1</div></pre></td></tr></table></figure></p>\n<p>  Dari hasil diatas kita dapatkan hasil 1 1 1 1 0 1 1 (dibaca dari bawah). Jadi biner dari 123 adalah 1111011.</p>\n<ul>\n<li>Biner ke Desimal</li>\n</ul>\n<p>  Contoh : Semisal kita akan mengubah 1111011(2) ke desimal. Hal pertama yang kita lakukan adalah mendefinisikan tiap digit dengan 2 pangkat nomer digit. Digit dihitung dari belakang. Contohnya adalah sebagai berikut :<br>  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">2^6   2^5   2^4   2^3   2^2   2^1   2^0</div><div class=\"line\">64    32    16    8     4     2     1</div><div class=\"line\"></div><div class=\"line\">1     1     1     1     0     1     1</div></pre></td></tr></table></figure></p>\n<p>  Kemudian kita tambahkan tiap hasil dari 2 pangkat nomer digit yang bilangan binernya 1.<br>  64+32+16+8+4+2+1 = 123. Dari penjumlahan tersebut kita dapatkan hasil 123, jadi desimal dari 1111011 adalah 123.</p>\n"},{"title":"Bagaimana Perangkat Elektronik Berjalan ?","date":"2017-04-15T09:56:24.000Z","_content":"\n\nDalam kehidupan sehari-hari kita sering sekali menggunakan perangkat elektronik seperti komputer, laptop dan hp. Perangkat elektronik tersebut sudah didesain sedimikian rupa agar dapat nyaman berinteraksi dengan penggunanya, baik dari desain, perangkat input dll. Tetapi pernahkah anda berpikir bagaimana cara kerjanya alat-alat tersebut? Bagaimana data dari keyboard, mouse atau perangkat input lainya diproses ? Dan tentunya akan banyak sekali pertanyaan mengenai hal tersebut. Pada kesempatan ini saya akan sedikit menceritakan bagaimana proses data di perangkat elektronik tersebut.\n\n## Proses Booting\nHal pertama yang dilakukan perangkat saat proses booting adalah melakukan booting Sistem Operasi. Kemudian perangkat akan melakukan inisialisasi, yaitu melakukan checklist terhadap hardware yang terhubung dengan perangkat kita.\n\n## Transfer Data pada Komputer\nData yang kita inputkan melalui perangkat masukan sebenarnya adalah kumpulan pola arus listrik yang dikonversi menjadi kode biner. Secara teknis untuk tegangan 0 volt akan dikonversi menjadi kode biner 0 dan tegangan 5 volt akan dikonversi menjadi kode biner 1. Proses konversi dari arus listrik menjadi biner ini dilakukan oleh `Flip Flop` yang terdiri dari kumpulan gerbang logika. Data biner tersebut kemudian dibawa menuju `register` yang ada pada processor untuk disimpan. Setiap kode biner akan menghuni satu space register. Pengggambaran bagaimana data tersebut disimpan adalah seperti gambar di bawah ini :\n```\n_________________________________\n|       |       |       |       |\n|   1   |   2   |   3   |   4   | --> Register\n|_______|_______|_______|_______|   \n|       |       |       |       |\n|   0   |   1   |   0   |   0   | --> Biner\n|_______|_______|_______|_______|\n```\n\nLanjut, data yang ada pada register kemudian diproses, apakah akan dioutputkan atau akan disimpan sesuai dengan yang kita inginkan. Apabila ingin dioutputkan data akan ditransfer menuju perangkat keluaran yang dikehendaki, semisal layar monitor. Dan apabila ingin disimpan sebelumnya akan dikonversi menuju kode heksal. Proses konversi dari kode biner dan heksal dan sebaliknya dilakukan oleh Sistem Operasi.\n\nData pada hardisk yang berupa kode heksal apabila ingin diproses maka harus dikonversi kembali menjadi kode desimal. Data tersebut kemudian diteruskan melalui RAM dan berakhir di Processor. Dalam tahap pemrosesan data, data tadi akan disimpan sementara pada cache memory yang ada pada processor.\n","source":"_posts/kuliah/orakom/orakom_bagaimana-perangkat-elektronik-berjalan.md","raw":"---\ntitle: Bagaimana Perangkat Elektronik Berjalan ?\ndate: 2017-04-15 16:56:24\ntags:\n  - komputer\ncategories:\n  - Teknologi\n  - Organisasi dan Arsitektur Komputer\n---\n\n\nDalam kehidupan sehari-hari kita sering sekali menggunakan perangkat elektronik seperti komputer, laptop dan hp. Perangkat elektronik tersebut sudah didesain sedimikian rupa agar dapat nyaman berinteraksi dengan penggunanya, baik dari desain, perangkat input dll. Tetapi pernahkah anda berpikir bagaimana cara kerjanya alat-alat tersebut? Bagaimana data dari keyboard, mouse atau perangkat input lainya diproses ? Dan tentunya akan banyak sekali pertanyaan mengenai hal tersebut. Pada kesempatan ini saya akan sedikit menceritakan bagaimana proses data di perangkat elektronik tersebut.\n\n## Proses Booting\nHal pertama yang dilakukan perangkat saat proses booting adalah melakukan booting Sistem Operasi. Kemudian perangkat akan melakukan inisialisasi, yaitu melakukan checklist terhadap hardware yang terhubung dengan perangkat kita.\n\n## Transfer Data pada Komputer\nData yang kita inputkan melalui perangkat masukan sebenarnya adalah kumpulan pola arus listrik yang dikonversi menjadi kode biner. Secara teknis untuk tegangan 0 volt akan dikonversi menjadi kode biner 0 dan tegangan 5 volt akan dikonversi menjadi kode biner 1. Proses konversi dari arus listrik menjadi biner ini dilakukan oleh `Flip Flop` yang terdiri dari kumpulan gerbang logika. Data biner tersebut kemudian dibawa menuju `register` yang ada pada processor untuk disimpan. Setiap kode biner akan menghuni satu space register. Pengggambaran bagaimana data tersebut disimpan adalah seperti gambar di bawah ini :\n```\n_________________________________\n|       |       |       |       |\n|   1   |   2   |   3   |   4   | --> Register\n|_______|_______|_______|_______|   \n|       |       |       |       |\n|   0   |   1   |   0   |   0   | --> Biner\n|_______|_______|_______|_______|\n```\n\nLanjut, data yang ada pada register kemudian diproses, apakah akan dioutputkan atau akan disimpan sesuai dengan yang kita inginkan. Apabila ingin dioutputkan data akan ditransfer menuju perangkat keluaran yang dikehendaki, semisal layar monitor. Dan apabila ingin disimpan sebelumnya akan dikonversi menuju kode heksal. Proses konversi dari kode biner dan heksal dan sebaliknya dilakukan oleh Sistem Operasi.\n\nData pada hardisk yang berupa kode heksal apabila ingin diproses maka harus dikonversi kembali menjadi kode desimal. Data tersebut kemudian diteruskan melalui RAM dan berakhir di Processor. Dalam tahap pemrosesan data, data tadi akan disimpan sementara pada cache memory yang ada pada processor.\n","slug":"kuliah/orakom/orakom_bagaimana-perangkat-elektronik-berjalan","published":1,"updated":"2017-04-19T12:37:55.264Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj2ed41lx000c8jlpzgqls440","content":"<p>Dalam kehidupan sehari-hari kita sering sekali menggunakan perangkat elektronik seperti komputer, laptop dan hp. Perangkat elektronik tersebut sudah didesain sedimikian rupa agar dapat nyaman berinteraksi dengan penggunanya, baik dari desain, perangkat input dll. Tetapi pernahkah anda berpikir bagaimana cara kerjanya alat-alat tersebut? Bagaimana data dari keyboard, mouse atau perangkat input lainya diproses ? Dan tentunya akan banyak sekali pertanyaan mengenai hal tersebut. Pada kesempatan ini saya akan sedikit menceritakan bagaimana proses data di perangkat elektronik tersebut.</p>\n<h2 id=\"Proses-Booting\"><a href=\"#Proses-Booting\" class=\"headerlink\" title=\"Proses Booting\"></a>Proses Booting</h2><p>Hal pertama yang dilakukan perangkat saat proses booting adalah melakukan booting Sistem Operasi. Kemudian perangkat akan melakukan inisialisasi, yaitu melakukan checklist terhadap hardware yang terhubung dengan perangkat kita.</p>\n<h2 id=\"Transfer-Data-pada-Komputer\"><a href=\"#Transfer-Data-pada-Komputer\" class=\"headerlink\" title=\"Transfer Data pada Komputer\"></a>Transfer Data pada Komputer</h2><p>Data yang kita inputkan melalui perangkat masukan sebenarnya adalah kumpulan pola arus listrik yang dikonversi menjadi kode biner. Secara teknis untuk tegangan 0 volt akan dikonversi menjadi kode biner 0 dan tegangan 5 volt akan dikonversi menjadi kode biner 1. Proses konversi dari arus listrik menjadi biner ini dilakukan oleh <code>Flip Flop</code> yang terdiri dari kumpulan gerbang logika. Data biner tersebut kemudian dibawa menuju <code>register</code> yang ada pada processor untuk disimpan. Setiap kode biner akan menghuni satu space register. Pengggambaran bagaimana data tersebut disimpan adalah seperti gambar di bawah ini :<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">_________________________________</div><div class=\"line\">|       |       |       |       |</div><div class=\"line\">|   1   |   2   |   3   |   4   | --&gt; Register</div><div class=\"line\">|_______|_______|_______|_______|   </div><div class=\"line\">|       |       |       |       |</div><div class=\"line\">|   0   |   1   |   0   |   0   | --&gt; Biner</div><div class=\"line\">|_______|_______|_______|_______|</div></pre></td></tr></table></figure></p>\n<p>Lanjut, data yang ada pada register kemudian diproses, apakah akan dioutputkan atau akan disimpan sesuai dengan yang kita inginkan. Apabila ingin dioutputkan data akan ditransfer menuju perangkat keluaran yang dikehendaki, semisal layar monitor. Dan apabila ingin disimpan sebelumnya akan dikonversi menuju kode heksal. Proses konversi dari kode biner dan heksal dan sebaliknya dilakukan oleh Sistem Operasi.</p>\n<p>Data pada hardisk yang berupa kode heksal apabila ingin diproses maka harus dikonversi kembali menjadi kode desimal. Data tersebut kemudian diteruskan melalui RAM dan berakhir di Processor. Dalam tahap pemrosesan data, data tadi akan disimpan sementara pada cache memory yang ada pada processor.</p>\n","excerpt":"","more":"<p>Dalam kehidupan sehari-hari kita sering sekali menggunakan perangkat elektronik seperti komputer, laptop dan hp. Perangkat elektronik tersebut sudah didesain sedimikian rupa agar dapat nyaman berinteraksi dengan penggunanya, baik dari desain, perangkat input dll. Tetapi pernahkah anda berpikir bagaimana cara kerjanya alat-alat tersebut? Bagaimana data dari keyboard, mouse atau perangkat input lainya diproses ? Dan tentunya akan banyak sekali pertanyaan mengenai hal tersebut. Pada kesempatan ini saya akan sedikit menceritakan bagaimana proses data di perangkat elektronik tersebut.</p>\n<h2 id=\"Proses-Booting\"><a href=\"#Proses-Booting\" class=\"headerlink\" title=\"Proses Booting\"></a>Proses Booting</h2><p>Hal pertama yang dilakukan perangkat saat proses booting adalah melakukan booting Sistem Operasi. Kemudian perangkat akan melakukan inisialisasi, yaitu melakukan checklist terhadap hardware yang terhubung dengan perangkat kita.</p>\n<h2 id=\"Transfer-Data-pada-Komputer\"><a href=\"#Transfer-Data-pada-Komputer\" class=\"headerlink\" title=\"Transfer Data pada Komputer\"></a>Transfer Data pada Komputer</h2><p>Data yang kita inputkan melalui perangkat masukan sebenarnya adalah kumpulan pola arus listrik yang dikonversi menjadi kode biner. Secara teknis untuk tegangan 0 volt akan dikonversi menjadi kode biner 0 dan tegangan 5 volt akan dikonversi menjadi kode biner 1. Proses konversi dari arus listrik menjadi biner ini dilakukan oleh <code>Flip Flop</code> yang terdiri dari kumpulan gerbang logika. Data biner tersebut kemudian dibawa menuju <code>register</code> yang ada pada processor untuk disimpan. Setiap kode biner akan menghuni satu space register. Pengggambaran bagaimana data tersebut disimpan adalah seperti gambar di bawah ini :<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">_________________________________</div><div class=\"line\">|       |       |       |       |</div><div class=\"line\">|   1   |   2   |   3   |   4   | --&gt; Register</div><div class=\"line\">|_______|_______|_______|_______|   </div><div class=\"line\">|       |       |       |       |</div><div class=\"line\">|   0   |   1   |   0   |   0   | --&gt; Biner</div><div class=\"line\">|_______|_______|_______|_______|</div></pre></td></tr></table></figure></p>\n<p>Lanjut, data yang ada pada register kemudian diproses, apakah akan dioutputkan atau akan disimpan sesuai dengan yang kita inginkan. Apabila ingin dioutputkan data akan ditransfer menuju perangkat keluaran yang dikehendaki, semisal layar monitor. Dan apabila ingin disimpan sebelumnya akan dikonversi menuju kode heksal. Proses konversi dari kode biner dan heksal dan sebaliknya dilakukan oleh Sistem Operasi.</p>\n<p>Data pada hardisk yang berupa kode heksal apabila ingin diproses maka harus dikonversi kembali menjadi kode desimal. Data tersebut kemudian diteruskan melalui RAM dan berakhir di Processor. Dalam tahap pemrosesan data, data tadi akan disimpan sementara pada cache memory yang ada pada processor.</p>\n"},{"title":"Introduction to Android","date":"2017-05-07T05:21:33.000Z","sticky":true,"_content":"\n![](/images/android.png)\n# Sekilas tentang Android\n\n[Android](https://developer.android.com/) merupakan Sistem Operasi untuk mobile. Aplikasi android native sendiri dapat dibangun menggunakan XML(untuk design) dan Java(untuk logic). Pada Tutorial kali ini kita akan coba membuat aplikasi Android native.\n\n# Roadmap Belajar Android Native\n","source":"_posts/pemrograman/android/0-Introduction-to-Android.md","raw":"---\ntitle: Introduction to Android\ndate: 2017-05-07 12:21:33\ncategories:\n  - Pemrograman\n  - Android\nsticky: true\n---\n\n![](/images/android.png)\n# Sekilas tentang Android\n\n[Android](https://developer.android.com/) merupakan Sistem Operasi untuk mobile. Aplikasi android native sendiri dapat dibangun menggunakan XML(untuk design) dan Java(untuk logic). Pada Tutorial kali ini kita akan coba membuat aplikasi Android native.\n\n# Roadmap Belajar Android Native\n","slug":"pemrograman/android/0-Introduction-to-Android","published":1,"updated":"2017-05-07T09:22:18.887Z","_id":"cj2ed41m7000e8jlps6xqglzk","comments":1,"layout":"post","photos":[],"link":"","content":"<p><img src=\"/images/android.png\" alt=\"\"></p>\n<h1 id=\"Sekilas-tentang-Android\"><a href=\"#Sekilas-tentang-Android\" class=\"headerlink\" title=\"Sekilas tentang Android\"></a>Sekilas tentang Android</h1><p><a href=\"https://developer.android.com/\" target=\"_blank\" rel=\"external\">Android</a> merupakan Sistem Operasi untuk mobile. Aplikasi android native sendiri dapat dibangun menggunakan XML(untuk design) dan Java(untuk logic). Pada Tutorial kali ini kita akan coba membuat aplikasi Android native.</p>\n<h1 id=\"Roadmap-Belajar-Android-Native\"><a href=\"#Roadmap-Belajar-Android-Native\" class=\"headerlink\" title=\"Roadmap Belajar Android Native\"></a>Roadmap Belajar Android Native</h1>","excerpt":"","more":"<p><img src=\"/images/android.png\" alt=\"\"></p>\n<h1 id=\"Sekilas-tentang-Android\"><a href=\"#Sekilas-tentang-Android\" class=\"headerlink\" title=\"Sekilas tentang Android\"></a>Sekilas tentang Android</h1><p><a href=\"https://developer.android.com/\">Android</a> merupakan Sistem Operasi untuk mobile. Aplikasi android native sendiri dapat dibangun menggunakan XML(untuk design) dan Java(untuk logic). Pada Tutorial kali ini kita akan coba membuat aplikasi Android native.</p>\n<h1 id=\"Roadmap-Belajar-Android-Native\"><a href=\"#Roadmap-Belajar-Android-Native\" class=\"headerlink\" title=\"Roadmap Belajar Android Native\"></a>Roadmap Belajar Android Native</h1>"},{"title":"Android","date":"2017-04-23T07:17:29.000Z","_content":"![](/images/android.png)\n# Android for Beginner\n## Layouting\n### View\n#### Pengertian View\nView pada dasarnya adalah sebuah kotak yang berisi berbagai macam konten. Konten tersebut dapat berupa kalimat gambar, tulisan tombol dan sebagainya.\n\n####\tMacam - macam view berdasar kontenya\n- Text View\n- Image View\n- Button\n\nDalam menuliskan pemrograman, kita diharuskan untuk menulis kode program sebagai instruksi yang spesifik dan detail.\n\nIDE (Integrated Development Environment) merupakan suatu ruang kerja berupa perangkat lunak yang digunakan untuk menulis kode program. IDE yang biasa digunakan untuk menulis kode program android adalah Android Studio.\n\nBahasa yang digunakan untuk membuat view pada Android berupa XML.\n\nUntuk menulis kode xml anda dapat menggunakan https://udacity.github.io/android-layout.\n\nKode XML digambarkan sebagai berikut :\n\t<!--gambar video ke 10-->\n\t```xml\n\t<TextView\n\t\tandroid:text=\"Ini Text\"\n\t\tandroid:textColor=\"@android:color/white\"\n\t\tandroid:background=\"@android:color/black\"\n\t\tandroid:layout_width=\"200dp\"\n\t\tandroid:layout_height=\"300dp\"\n\t/>\n\t```\nKode tersebut memiliki ketentuan yaitu :\n- Kode program ditulis di dalam tag. Tag didefinisikan dengan `<>` (kurung siku).\n- Terdapat 2 tag yaitu tag pembuka dan tag penutup. Perbedaan antara tag pembuka dan tag penutup terdapat tanda `/`(garis miring).\n```xml\n<TextView\n  .....\n/>\n```\nTag juga bisa didefinisikan seperti berikut :\n```xml\n<TextView>\n  ....\n</TextView>\n```\n- Terdapat nama tag yang mewakili view yang ingin dipakai. Dalam contoh diatas nama tag adalah TextView.\n- Terdapat atribut(-atribut) yang digunakan untuk mengcustom view tersebut. Semisal untuk konten, warna tinggi dll.\n- Setiap atribut memiliki nilai. Nilai mewakili apa yang akan dicustom pada setiap atribut. Nilai tersebut dipisahkan dari atributnya oleh tanda  `=` (samadengan) dan ditulis di dalam `\"\"` (tanda petik dua).\n\n#### Text View\nMacam macam atribut untuk text view :\n- Menulis text\n\n```xml\n<TextView\n  android:text=\"tulis text anda di sini\"\n/>\n```\n\n- Mengatur tinggi dan lebar layout\n\n```xml\n<TextView\n  android:height_layout=\"300dp\"\n  android:width_layout=\"300dp\"\n/>\n```\nSatuan panjang (untuk panjang, tinggi dll) biasanya didefinisikan dengan satuan `dp`.\nAtau untuk membuatnya menyesuaikan lebar dan tinggi text, anda dapat menggunakan mengisi nilainya dengan `wrap_content`.\n```xml\n<TextView\n  android:height_layout=\"wrap_content\"\n  android:width_layout=\"wrap_content\"\n/>\n```\n\n- Mengganti warna text\n\n```xml\n<TextView\n  android:textColor=\"@android:color/white\"\n  atau\n  android:textColor=\"#Kode_hexa_desimal\"\n/>\n```\n\n- Mengganti ukuran font\n\n```xml\n<TextView\n  android:textSize=\"30sp\"\n/>\n```\nSatuan ukuran font didefinisikan dengan `sp`. Ukuran font dapat juga didefinisikan sebagai berikut :\n\n```xml\n<TextView\n  android:textAppearance=\"?android:textAppearanceLarge\"\n  android:textAppearance=\"?android:textAppearanceMedium\"\n  android:textAppearance=\"?android:textAppearanceSmall\"\n/>\n```\n\n- Referensi untuk design dapat dilihat di [Material Design Spec](https://www.google.com/design/spec/material-design/introduction.html) atau [google+ #AndroidDev #Protip](https://plus.google.com/+AndroidDevelopers)\n\n\n#### Image view\nMacam-macam atribut untuk Image View :\n- Memilih gambar dari resource/assets:\n\n```xml\n<ImageView\n  android:src=\"@drawable/ocean\"\n/>\n```\n\n- Mengatur tinggi dan lebar layout\n\n```xml\n<TextView\n  android:height_layout=\"300dp\"\n  android:width_layout=\"300dp\"\n/>\n```\n\n- Mengatur posisi dan skala gambar\n\n```xml\n<ImageView\n  android:scaleType=\"centerCrop\"\n  atau\n  android:scaleType=\"center\"\n/>\n```\n\n### Memposisikan View\n#### View Group\nView group ini digunakan untuk mengelompokkan berbagai macam view. Jadi dia seperti `div` pada html. View group ini juga dapat didefinisikan sebagai parent sedangkan view didefinisikan sebagai child.\nKode XML dari view grup digambarkan sebagai berikut :\n```xml\n<LinearLayout\n  android:orientation=\"vertical\"\n  android:layout_width=\"wrap_content\"\n  android:layout_height=\"wrap_content\">\n  <TextView\n    android:text=\"Guest List\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    />\n  <TextView\n    android:text=\"Kunai\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    />\n</LinearLayout>\n```\n\nNote :\nPerlu diketahui setiap XML yang kita buat harus kita tambahkan `xmlns:android=\"http://schemas.android.com/apk/res/android\"`. Kode tersebut biasa disebut `XML namespace declaration`. Ini digunkan untuk mendefinisikan bahwa XML kita digunakan untuk android.  \n\nMacam-macam view grup :\n1.  Linear Layout\n    View disusun secara berderet baik horizontal ataupun vertikal pada view grup. Untuk menggunakan Linear Layout cukup menggunakan tag `LinearLayout`.\n    - Vertical row, yaitu view yang disusun secara vertical atas-bawah. Untuk menggunakan vertical row cukup tambahkan atribut `android:orientation=\"vertical\"`.\n    - Horizontal column, yaitu view yang disusun secara horizontal kanan-kiri. Untuk menggunakan horizontal column cukup tambahkan atribut `android:orientation=\"horizontal\"`.\n\nUntuk mengatur panjang dan tinggi view dengan menyesuaikan parentnya dapat menggunakan sintaks sebagai berikut :\n```xml\n<LinearLayout\n  xmlns:android=\"http://schemas.android.com/apk/res/android\"\n  android:orientation=\"vertical\"\n  android:layout_width=\"match_parent\"\n  android:layout_height=\"match_parent\"\n  >\n  <TextView\n    android:text=\"Guest List\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"\n    />\n  <TextView\n    android:text=\"Kunai\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"\n    />\n</LinearLayout>\n```\nPada kode diatas LinearLayout menggunakan match parent yang mengakibatkanya memiliki tinggi dan lebar sebesar resolusi layar. Begitu juga dengan text view yang menyesuaikan LinearLayout memiliki lebar sebesar layar.\n\nUntuk mengatur proporsi pajang dan lebar antar view kita dapat menggunakan `android:layout_weight=\"1\"` dan setiap panjang dan lebar diatur ke 0dp. Berikut contohnya :\n```xml\n<LinearLayout\n  xmlns:android=\"http://schemas.android.com/apk/res/android\"\n  android:orientation=\"vertical\"\n  android:layout_width=\"match_parent\"\n  android:layout_height=\"match_parent\"\n  >\n  <TextView\n    android:text=\"Guest List\"\n    android:layout_width=\"0dp\"\n    android:layout_height=\"0dp\"\n    android:layout_weight=\"1\"\n    />\n  <TextView\n    android:text=\"Kunai\"\n    android:layout_width=\"0dp\"\n    android:layout_height=\"0dp\"\n    android:layout_weight=\"1\"\n    />\n</LinearLayout>\n```\n\n2.  Relative Layout\n    View disusun secara sembarang. Posisi view dapat dibagi menjadi yaitu bagian atas, kanan, kiri dan bawah.\n    - Relative to parent, yaitu view yang disusun relatif berdasarkan pada parent.\n\n    Untuk mengatur konten posisi konten berdasar parentnya dapat menggunakan atribut\n    ```xml\n    <RelativeView>\n      ....\n      <TextView\n        android:layout_alignParentTop=\"true/false\"\n        android:layout_alignParentButton=\"true/false\"\n        android:layout_alignParentLeft=\"true/false\"\n        android:layout_alignParentRight=\"true/false\">\n    <RelativeView>\n    ```\n\n    Untuk mengatur perataan konten dapat menggunakan\n    ```xml\n    <RelativeView>\n      ....\n      <TextView\n        android:layout_centerHorizontal=\"true/false\"\n        android:layout_centerVertical=\"true/false\">\n    </RelativeView>\n    ```\n\n    Posisi tersebut dapat dicustom sesuka hati dan dapat di mix and match. Semisal untuk pojok kiri atas maka yang top dan left diberi nilai true dan seterusnya.\n\n    - Relative to other child, yaitu view yang disusun relatif berdasarkan pada child lainya.\n\n    Untuk mengatur konten posisi konten berdasar parentnya dapat menggunakan atribut\n    ```xml\n    <RelativeView>\n      ....\n      <TextView\n        android:layout_alignParentTop=\"true/false\"\n        android:layout_alignParentButton=\"true/false\"\n        android:layout_alignParentLeft=\"true/false\"\n        android:layout_alignParentRight=\"true/false\">\n    <RelativeView>\n    ```\n\nhttps://icons8.com/android-icons/\n","source":"_posts/pemrograman/android/1-view.md","raw":"---\ntitle: Android\ndate: 2017-04-23 14:17:29\ncategories:\n  - Pemrograman\n  - Android\n---\n![](/images/android.png)\n# Android for Beginner\n## Layouting\n### View\n#### Pengertian View\nView pada dasarnya adalah sebuah kotak yang berisi berbagai macam konten. Konten tersebut dapat berupa kalimat gambar, tulisan tombol dan sebagainya.\n\n####\tMacam - macam view berdasar kontenya\n- Text View\n- Image View\n- Button\n\nDalam menuliskan pemrograman, kita diharuskan untuk menulis kode program sebagai instruksi yang spesifik dan detail.\n\nIDE (Integrated Development Environment) merupakan suatu ruang kerja berupa perangkat lunak yang digunakan untuk menulis kode program. IDE yang biasa digunakan untuk menulis kode program android adalah Android Studio.\n\nBahasa yang digunakan untuk membuat view pada Android berupa XML.\n\nUntuk menulis kode xml anda dapat menggunakan https://udacity.github.io/android-layout.\n\nKode XML digambarkan sebagai berikut :\n\t<!--gambar video ke 10-->\n\t```xml\n\t<TextView\n\t\tandroid:text=\"Ini Text\"\n\t\tandroid:textColor=\"@android:color/white\"\n\t\tandroid:background=\"@android:color/black\"\n\t\tandroid:layout_width=\"200dp\"\n\t\tandroid:layout_height=\"300dp\"\n\t/>\n\t```\nKode tersebut memiliki ketentuan yaitu :\n- Kode program ditulis di dalam tag. Tag didefinisikan dengan `<>` (kurung siku).\n- Terdapat 2 tag yaitu tag pembuka dan tag penutup. Perbedaan antara tag pembuka dan tag penutup terdapat tanda `/`(garis miring).\n```xml\n<TextView\n  .....\n/>\n```\nTag juga bisa didefinisikan seperti berikut :\n```xml\n<TextView>\n  ....\n</TextView>\n```\n- Terdapat nama tag yang mewakili view yang ingin dipakai. Dalam contoh diatas nama tag adalah TextView.\n- Terdapat atribut(-atribut) yang digunakan untuk mengcustom view tersebut. Semisal untuk konten, warna tinggi dll.\n- Setiap atribut memiliki nilai. Nilai mewakili apa yang akan dicustom pada setiap atribut. Nilai tersebut dipisahkan dari atributnya oleh tanda  `=` (samadengan) dan ditulis di dalam `\"\"` (tanda petik dua).\n\n#### Text View\nMacam macam atribut untuk text view :\n- Menulis text\n\n```xml\n<TextView\n  android:text=\"tulis text anda di sini\"\n/>\n```\n\n- Mengatur tinggi dan lebar layout\n\n```xml\n<TextView\n  android:height_layout=\"300dp\"\n  android:width_layout=\"300dp\"\n/>\n```\nSatuan panjang (untuk panjang, tinggi dll) biasanya didefinisikan dengan satuan `dp`.\nAtau untuk membuatnya menyesuaikan lebar dan tinggi text, anda dapat menggunakan mengisi nilainya dengan `wrap_content`.\n```xml\n<TextView\n  android:height_layout=\"wrap_content\"\n  android:width_layout=\"wrap_content\"\n/>\n```\n\n- Mengganti warna text\n\n```xml\n<TextView\n  android:textColor=\"@android:color/white\"\n  atau\n  android:textColor=\"#Kode_hexa_desimal\"\n/>\n```\n\n- Mengganti ukuran font\n\n```xml\n<TextView\n  android:textSize=\"30sp\"\n/>\n```\nSatuan ukuran font didefinisikan dengan `sp`. Ukuran font dapat juga didefinisikan sebagai berikut :\n\n```xml\n<TextView\n  android:textAppearance=\"?android:textAppearanceLarge\"\n  android:textAppearance=\"?android:textAppearanceMedium\"\n  android:textAppearance=\"?android:textAppearanceSmall\"\n/>\n```\n\n- Referensi untuk design dapat dilihat di [Material Design Spec](https://www.google.com/design/spec/material-design/introduction.html) atau [google+ #AndroidDev #Protip](https://plus.google.com/+AndroidDevelopers)\n\n\n#### Image view\nMacam-macam atribut untuk Image View :\n- Memilih gambar dari resource/assets:\n\n```xml\n<ImageView\n  android:src=\"@drawable/ocean\"\n/>\n```\n\n- Mengatur tinggi dan lebar layout\n\n```xml\n<TextView\n  android:height_layout=\"300dp\"\n  android:width_layout=\"300dp\"\n/>\n```\n\n- Mengatur posisi dan skala gambar\n\n```xml\n<ImageView\n  android:scaleType=\"centerCrop\"\n  atau\n  android:scaleType=\"center\"\n/>\n```\n\n### Memposisikan View\n#### View Group\nView group ini digunakan untuk mengelompokkan berbagai macam view. Jadi dia seperti `div` pada html. View group ini juga dapat didefinisikan sebagai parent sedangkan view didefinisikan sebagai child.\nKode XML dari view grup digambarkan sebagai berikut :\n```xml\n<LinearLayout\n  android:orientation=\"vertical\"\n  android:layout_width=\"wrap_content\"\n  android:layout_height=\"wrap_content\">\n  <TextView\n    android:text=\"Guest List\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    />\n  <TextView\n    android:text=\"Kunai\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    />\n</LinearLayout>\n```\n\nNote :\nPerlu diketahui setiap XML yang kita buat harus kita tambahkan `xmlns:android=\"http://schemas.android.com/apk/res/android\"`. Kode tersebut biasa disebut `XML namespace declaration`. Ini digunkan untuk mendefinisikan bahwa XML kita digunakan untuk android.  \n\nMacam-macam view grup :\n1.  Linear Layout\n    View disusun secara berderet baik horizontal ataupun vertikal pada view grup. Untuk menggunakan Linear Layout cukup menggunakan tag `LinearLayout`.\n    - Vertical row, yaitu view yang disusun secara vertical atas-bawah. Untuk menggunakan vertical row cukup tambahkan atribut `android:orientation=\"vertical\"`.\n    - Horizontal column, yaitu view yang disusun secara horizontal kanan-kiri. Untuk menggunakan horizontal column cukup tambahkan atribut `android:orientation=\"horizontal\"`.\n\nUntuk mengatur panjang dan tinggi view dengan menyesuaikan parentnya dapat menggunakan sintaks sebagai berikut :\n```xml\n<LinearLayout\n  xmlns:android=\"http://schemas.android.com/apk/res/android\"\n  android:orientation=\"vertical\"\n  android:layout_width=\"match_parent\"\n  android:layout_height=\"match_parent\"\n  >\n  <TextView\n    android:text=\"Guest List\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"\n    />\n  <TextView\n    android:text=\"Kunai\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"\n    />\n</LinearLayout>\n```\nPada kode diatas LinearLayout menggunakan match parent yang mengakibatkanya memiliki tinggi dan lebar sebesar resolusi layar. Begitu juga dengan text view yang menyesuaikan LinearLayout memiliki lebar sebesar layar.\n\nUntuk mengatur proporsi pajang dan lebar antar view kita dapat menggunakan `android:layout_weight=\"1\"` dan setiap panjang dan lebar diatur ke 0dp. Berikut contohnya :\n```xml\n<LinearLayout\n  xmlns:android=\"http://schemas.android.com/apk/res/android\"\n  android:orientation=\"vertical\"\n  android:layout_width=\"match_parent\"\n  android:layout_height=\"match_parent\"\n  >\n  <TextView\n    android:text=\"Guest List\"\n    android:layout_width=\"0dp\"\n    android:layout_height=\"0dp\"\n    android:layout_weight=\"1\"\n    />\n  <TextView\n    android:text=\"Kunai\"\n    android:layout_width=\"0dp\"\n    android:layout_height=\"0dp\"\n    android:layout_weight=\"1\"\n    />\n</LinearLayout>\n```\n\n2.  Relative Layout\n    View disusun secara sembarang. Posisi view dapat dibagi menjadi yaitu bagian atas, kanan, kiri dan bawah.\n    - Relative to parent, yaitu view yang disusun relatif berdasarkan pada parent.\n\n    Untuk mengatur konten posisi konten berdasar parentnya dapat menggunakan atribut\n    ```xml\n    <RelativeView>\n      ....\n      <TextView\n        android:layout_alignParentTop=\"true/false\"\n        android:layout_alignParentButton=\"true/false\"\n        android:layout_alignParentLeft=\"true/false\"\n        android:layout_alignParentRight=\"true/false\">\n    <RelativeView>\n    ```\n\n    Untuk mengatur perataan konten dapat menggunakan\n    ```xml\n    <RelativeView>\n      ....\n      <TextView\n        android:layout_centerHorizontal=\"true/false\"\n        android:layout_centerVertical=\"true/false\">\n    </RelativeView>\n    ```\n\n    Posisi tersebut dapat dicustom sesuka hati dan dapat di mix and match. Semisal untuk pojok kiri atas maka yang top dan left diberi nilai true dan seterusnya.\n\n    - Relative to other child, yaitu view yang disusun relatif berdasarkan pada child lainya.\n\n    Untuk mengatur konten posisi konten berdasar parentnya dapat menggunakan atribut\n    ```xml\n    <RelativeView>\n      ....\n      <TextView\n        android:layout_alignParentTop=\"true/false\"\n        android:layout_alignParentButton=\"true/false\"\n        android:layout_alignParentLeft=\"true/false\"\n        android:layout_alignParentRight=\"true/false\">\n    <RelativeView>\n    ```\n\nhttps://icons8.com/android-icons/\n","slug":"pemrograman/android/1-view","published":1,"updated":"2017-05-07T09:22:23.007Z","_id":"cj2ed41md000h8jlp99pmswkz","comments":1,"layout":"post","photos":[],"link":"","content":"<p><img src=\"/images/android.png\" alt=\"\"></p>\n<h1 id=\"Android-for-Beginner\"><a href=\"#Android-for-Beginner\" class=\"headerlink\" title=\"Android for Beginner\"></a>Android for Beginner</h1><h2 id=\"Layouting\"><a href=\"#Layouting\" class=\"headerlink\" title=\"Layouting\"></a>Layouting</h2><h3 id=\"View\"><a href=\"#View\" class=\"headerlink\" title=\"View\"></a>View</h3><h4 id=\"Pengertian-View\"><a href=\"#Pengertian-View\" class=\"headerlink\" title=\"Pengertian View\"></a>Pengertian View</h4><p>View pada dasarnya adalah sebuah kotak yang berisi berbagai macam konten. Konten tersebut dapat berupa kalimat gambar, tulisan tombol dan sebagainya.</p>\n<h4 id=\"Macam-macam-view-berdasar-kontenya\"><a href=\"#Macam-macam-view-berdasar-kontenya\" class=\"headerlink\" title=\"Macam - macam view berdasar kontenya\"></a>Macam - macam view berdasar kontenya</h4><ul>\n<li>Text View</li>\n<li>Image View</li>\n<li>Button</li>\n</ul>\n<p>Dalam menuliskan pemrograman, kita diharuskan untuk menulis kode program sebagai instruksi yang spesifik dan detail.</p>\n<p>IDE (Integrated Development Environment) merupakan suatu ruang kerja berupa perangkat lunak yang digunakan untuk menulis kode program. IDE yang biasa digunakan untuk menulis kode program android adalah Android Studio.</p>\n<p>Bahasa yang digunakan untuk membuat view pada Android berupa XML.</p>\n<p>Untuk menulis kode xml anda dapat menggunakan <a href=\"https://udacity.github.io/android-layout\" target=\"_blank\" rel=\"external\">https://udacity.github.io/android-layout</a>.</p>\n<p>Kode XML digambarkan sebagai berikut :<br>    <!--gambar video ke 10--><br>    <figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">TextView</span></span></div><div class=\"line\">\t<span class=\"attr\">android:text</span>=<span class=\"string\">\"Ini Text\"</span></div><div class=\"line\">\t<span class=\"attr\">android:textColor</span>=<span class=\"string\">\"@android:color/white\"</span></div><div class=\"line\">\t<span class=\"attr\">android:background</span>=<span class=\"string\">\"@android:color/black\"</span></div><div class=\"line\">\t<span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"200dp\"</span></div><div class=\"line\">\t<span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"300dp\"</span></div><div class=\"line\">/&gt;</div></pre></td></tr></table></figure></p>\n<p>Kode tersebut memiliki ketentuan yaitu :</p>\n<ul>\n<li>Kode program ditulis di dalam tag. Tag didefinisikan dengan <code>&lt;&gt;</code> (kurung siku).</li>\n<li>Terdapat 2 tag yaitu tag pembuka dan tag penutup. Perbedaan antara tag pembuka dan tag penutup terdapat tanda <code>/</code>(garis miring).<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">TextView</span></span></div><div class=\"line\">  <span class=\"attr\">.....</span></div><div class=\"line\">/&gt;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>Tag juga bisa didefinisikan seperti berikut :<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">TextView</span>&gt;</span></div><div class=\"line\">  ....</div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">TextView</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<ul>\n<li>Terdapat nama tag yang mewakili view yang ingin dipakai. Dalam contoh diatas nama tag adalah TextView.</li>\n<li>Terdapat atribut(-atribut) yang digunakan untuk mengcustom view tersebut. Semisal untuk konten, warna tinggi dll.</li>\n<li>Setiap atribut memiliki nilai. Nilai mewakili apa yang akan dicustom pada setiap atribut. Nilai tersebut dipisahkan dari atributnya oleh tanda  <code>=</code> (samadengan) dan ditulis di dalam <code>&quot;&quot;</code> (tanda petik dua).</li>\n</ul>\n<h4 id=\"Text-View\"><a href=\"#Text-View\" class=\"headerlink\" title=\"Text View\"></a>Text View</h4><p>Macam macam atribut untuk text view :</p>\n<ul>\n<li>Menulis text</li>\n</ul>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">TextView</span></span></div><div class=\"line\">  <span class=\"attr\">android:text</span>=<span class=\"string\">\"tulis text anda di sini\"</span></div><div class=\"line\">/&gt;</div></pre></td></tr></table></figure>\n<ul>\n<li>Mengatur tinggi dan lebar layout</li>\n</ul>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">TextView</span></span></div><div class=\"line\">  <span class=\"attr\">android:height_layout</span>=<span class=\"string\">\"300dp\"</span></div><div class=\"line\">  <span class=\"attr\">android:width_layout</span>=<span class=\"string\">\"300dp\"</span></div><div class=\"line\">/&gt;</div></pre></td></tr></table></figure>\n<p>Satuan panjang (untuk panjang, tinggi dll) biasanya didefinisikan dengan satuan <code>dp</code>.<br>Atau untuk membuatnya menyesuaikan lebar dan tinggi text, anda dapat menggunakan mengisi nilainya dengan <code>wrap_content</code>.<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">TextView</span></span></div><div class=\"line\">  <span class=\"attr\">android:height_layout</span>=<span class=\"string\">\"wrap_content\"</span></div><div class=\"line\">  <span class=\"attr\">android:width_layout</span>=<span class=\"string\">\"wrap_content\"</span></div><div class=\"line\">/&gt;</div></pre></td></tr></table></figure></p>\n<ul>\n<li>Mengganti warna text</li>\n</ul>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">TextView</span></span></div><div class=\"line\">  <span class=\"attr\">android:textColor</span>=<span class=\"string\">\"@android:color/white\"</span></div><div class=\"line\">  <span class=\"attr\">atau</span></div><div class=\"line\">  <span class=\"attr\">android:textColor</span>=<span class=\"string\">\"#Kode_hexa_desimal\"</span></div><div class=\"line\">/&gt;</div></pre></td></tr></table></figure>\n<ul>\n<li>Mengganti ukuran font</li>\n</ul>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">TextView</span></span></div><div class=\"line\">  <span class=\"attr\">android:textSize</span>=<span class=\"string\">\"30sp\"</span></div><div class=\"line\">/&gt;</div></pre></td></tr></table></figure>\n<p>Satuan ukuran font didefinisikan dengan <code>sp</code>. Ukuran font dapat juga didefinisikan sebagai berikut :</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">TextView</span></span></div><div class=\"line\">  <span class=\"attr\">android:textAppearance</span>=<span class=\"string\">\"?android:textAppearanceLarge\"</span></div><div class=\"line\">  <span class=\"attr\">android:textAppearance</span>=<span class=\"string\">\"?android:textAppearanceMedium\"</span></div><div class=\"line\">  <span class=\"attr\">android:textAppearance</span>=<span class=\"string\">\"?android:textAppearanceSmall\"</span></div><div class=\"line\">/&gt;</div></pre></td></tr></table></figure>\n<ul>\n<li>Referensi untuk design dapat dilihat di <a href=\"https://www.google.com/design/spec/material-design/introduction.html\" target=\"_blank\" rel=\"external\">Material Design Spec</a> atau <a href=\"https://plus.google.com/+AndroidDevelopers\" target=\"_blank\" rel=\"external\">google+ #AndroidDev #Protip</a></li>\n</ul>\n<h4 id=\"Image-view\"><a href=\"#Image-view\" class=\"headerlink\" title=\"Image view\"></a>Image view</h4><p>Macam-macam atribut untuk Image View :</p>\n<ul>\n<li>Memilih gambar dari resource/assets:</li>\n</ul>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ImageView</span></span></div><div class=\"line\">  <span class=\"attr\">android:src</span>=<span class=\"string\">\"@drawable/ocean\"</span></div><div class=\"line\">/&gt;</div></pre></td></tr></table></figure>\n<ul>\n<li>Mengatur tinggi dan lebar layout</li>\n</ul>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">TextView</span></span></div><div class=\"line\">  <span class=\"attr\">android:height_layout</span>=<span class=\"string\">\"300dp\"</span></div><div class=\"line\">  <span class=\"attr\">android:width_layout</span>=<span class=\"string\">\"300dp\"</span></div><div class=\"line\">/&gt;</div></pre></td></tr></table></figure>\n<ul>\n<li>Mengatur posisi dan skala gambar</li>\n</ul>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ImageView</span></span></div><div class=\"line\">  <span class=\"attr\">android:scaleType</span>=<span class=\"string\">\"centerCrop\"</span></div><div class=\"line\">  <span class=\"attr\">atau</span></div><div class=\"line\">  <span class=\"attr\">android:scaleType</span>=<span class=\"string\">\"center\"</span></div><div class=\"line\">/&gt;</div></pre></td></tr></table></figure>\n<h3 id=\"Memposisikan-View\"><a href=\"#Memposisikan-View\" class=\"headerlink\" title=\"Memposisikan View\"></a>Memposisikan View</h3><h4 id=\"View-Group\"><a href=\"#View-Group\" class=\"headerlink\" title=\"View Group\"></a>View Group</h4><p>View group ini digunakan untuk mengelompokkan berbagai macam view. Jadi dia seperti <code>div</code> pada html. View group ini juga dapat didefinisikan sebagai parent sedangkan view didefinisikan sebagai child.<br>Kode XML dari view grup digambarkan sebagai berikut :<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">LinearLayout</span></span></div><div class=\"line\">  <span class=\"attr\">android:orientation</span>=<span class=\"string\">\"vertical\"</span></div><div class=\"line\">  <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"wrap_content\"</span></div><div class=\"line\">  <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span>&gt;</div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">TextView</span></span></div><div class=\"line\">    <span class=\"attr\">android:text</span>=<span class=\"string\">\"Guest List\"</span></div><div class=\"line\">    <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"wrap_content\"</span></div><div class=\"line\">    <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span></div><div class=\"line\">    /&gt;</div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">TextView</span></span></div><div class=\"line\">    <span class=\"attr\">android:text</span>=<span class=\"string\">\"Kunai\"</span></div><div class=\"line\">    <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"wrap_content\"</span></div><div class=\"line\">    <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span></div><div class=\"line\">    /&gt;</div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">LinearLayout</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p>Note :<br>Perlu diketahui setiap XML yang kita buat harus kita tambahkan <code>xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</code>. Kode tersebut biasa disebut <code>XML namespace declaration</code>. Ini digunkan untuk mendefinisikan bahwa XML kita digunakan untuk android.  </p>\n<p>Macam-macam view grup :</p>\n<ol>\n<li>Linear Layout<br>View disusun secara berderet baik horizontal ataupun vertikal pada view grup. Untuk menggunakan Linear Layout cukup menggunakan tag <code>LinearLayout</code>.<ul>\n<li>Vertical row, yaitu view yang disusun secara vertical atas-bawah. Untuk menggunakan vertical row cukup tambahkan atribut <code>android:orientation=&quot;vertical&quot;</code>.</li>\n<li>Horizontal column, yaitu view yang disusun secara horizontal kanan-kiri. Untuk menggunakan horizontal column cukup tambahkan atribut <code>android:orientation=&quot;horizontal&quot;</code>.</li>\n</ul>\n</li>\n</ol>\n<p>Untuk mengatur panjang dan tinggi view dengan menyesuaikan parentnya dapat menggunakan sintaks sebagai berikut :<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">LinearLayout</span></span></div><div class=\"line\">  <span class=\"attr\">xmlns:android</span>=<span class=\"string\">\"http://schemas.android.com/apk/res/android\"</span></div><div class=\"line\">  <span class=\"attr\">android:orientation</span>=<span class=\"string\">\"vertical\"</span></div><div class=\"line\">  <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"match_parent\"</span></div><div class=\"line\">  <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"match_parent\"</span></div><div class=\"line\">  &gt;</div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">TextView</span></span></div><div class=\"line\">    <span class=\"attr\">android:text</span>=<span class=\"string\">\"Guest List\"</span></div><div class=\"line\">    <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"match_parent\"</span></div><div class=\"line\">    <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span></div><div class=\"line\">    /&gt;</div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">TextView</span></span></div><div class=\"line\">    <span class=\"attr\">android:text</span>=<span class=\"string\">\"Kunai\"</span></div><div class=\"line\">    <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"match_parent\"</span></div><div class=\"line\">    <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span></div><div class=\"line\">    /&gt;</div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">LinearLayout</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p>Pada kode diatas LinearLayout menggunakan match parent yang mengakibatkanya memiliki tinggi dan lebar sebesar resolusi layar. Begitu juga dengan text view yang menyesuaikan LinearLayout memiliki lebar sebesar layar.</p>\n<p>Untuk mengatur proporsi pajang dan lebar antar view kita dapat menggunakan <code>android:layout_weight=&quot;1&quot;</code> dan setiap panjang dan lebar diatur ke 0dp. Berikut contohnya :<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">LinearLayout</span></span></div><div class=\"line\">  <span class=\"attr\">xmlns:android</span>=<span class=\"string\">\"http://schemas.android.com/apk/res/android\"</span></div><div class=\"line\">  <span class=\"attr\">android:orientation</span>=<span class=\"string\">\"vertical\"</span></div><div class=\"line\">  <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"match_parent\"</span></div><div class=\"line\">  <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"match_parent\"</span></div><div class=\"line\">  &gt;</div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">TextView</span></span></div><div class=\"line\">    <span class=\"attr\">android:text</span>=<span class=\"string\">\"Guest List\"</span></div><div class=\"line\">    <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"0dp\"</span></div><div class=\"line\">    <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"0dp\"</span></div><div class=\"line\">    <span class=\"attr\">android:layout_weight</span>=<span class=\"string\">\"1\"</span></div><div class=\"line\">    /&gt;</div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">TextView</span></span></div><div class=\"line\">    <span class=\"attr\">android:text</span>=<span class=\"string\">\"Kunai\"</span></div><div class=\"line\">    <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"0dp\"</span></div><div class=\"line\">    <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"0dp\"</span></div><div class=\"line\">    <span class=\"attr\">android:layout_weight</span>=<span class=\"string\">\"1\"</span></div><div class=\"line\">    /&gt;</div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">LinearLayout</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<ol>\n<li><p>Relative Layout<br>View disusun secara sembarang. Posisi view dapat dibagi menjadi yaitu bagian atas, kanan, kiri dan bawah.</p>\n<ul>\n<li>Relative to parent, yaitu view yang disusun relatif berdasarkan pada parent.</li>\n</ul>\n<p>Untuk mengatur konten posisi konten berdasar parentnya dapat menggunakan atribut</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">RelativeView</span>&gt;</span></div><div class=\"line\">  ....</div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">TextView</span></span></div><div class=\"line\">    <span class=\"attr\">android:layout_alignParentTop</span>=<span class=\"string\">\"true/false\"</span></div><div class=\"line\">    <span class=\"attr\">android:layout_alignParentButton</span>=<span class=\"string\">\"true/false\"</span></div><div class=\"line\">    <span class=\"attr\">android:layout_alignParentLeft</span>=<span class=\"string\">\"true/false\"</span></div><div class=\"line\">    <span class=\"attr\">android:layout_alignParentRight</span>=<span class=\"string\">\"true/false\"</span>&gt;</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">RelativeView</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>Untuk mengatur perataan konten dapat menggunakan</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">RelativeView</span>&gt;</span></div><div class=\"line\">  ....</div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">TextView</span></span></div><div class=\"line\">    <span class=\"attr\">android:layout_centerHorizontal</span>=<span class=\"string\">\"true/false\"</span></div><div class=\"line\">    <span class=\"attr\">android:layout_centerVertical</span>=<span class=\"string\">\"true/false\"</span>&gt;</div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">RelativeView</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>Posisi tersebut dapat dicustom sesuka hati dan dapat di mix and match. Semisal untuk pojok kiri atas maka yang top dan left diberi nilai true dan seterusnya.</p>\n<ul>\n<li>Relative to other child, yaitu view yang disusun relatif berdasarkan pada child lainya.</li>\n</ul>\n<p>Untuk mengatur konten posisi konten berdasar parentnya dapat menggunakan atribut</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">RelativeView</span>&gt;</span></div><div class=\"line\">  ....</div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">TextView</span></span></div><div class=\"line\">    <span class=\"attr\">android:layout_alignParentTop</span>=<span class=\"string\">\"true/false\"</span></div><div class=\"line\">    <span class=\"attr\">android:layout_alignParentButton</span>=<span class=\"string\">\"true/false\"</span></div><div class=\"line\">    <span class=\"attr\">android:layout_alignParentLeft</span>=<span class=\"string\">\"true/false\"</span></div><div class=\"line\">    <span class=\"attr\">android:layout_alignParentRight</span>=<span class=\"string\">\"true/false\"</span>&gt;</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">RelativeView</span>&gt;</span></div></pre></td></tr></table></figure>\n</li>\n</ol>\n<p><a href=\"https://icons8.com/android-icons/\" target=\"_blank\" rel=\"external\">https://icons8.com/android-icons/</a></p>\n","excerpt":"","more":"<p><img src=\"/images/android.png\" alt=\"\"></p>\n<h1 id=\"Android-for-Beginner\"><a href=\"#Android-for-Beginner\" class=\"headerlink\" title=\"Android for Beginner\"></a>Android for Beginner</h1><h2 id=\"Layouting\"><a href=\"#Layouting\" class=\"headerlink\" title=\"Layouting\"></a>Layouting</h2><h3 id=\"View\"><a href=\"#View\" class=\"headerlink\" title=\"View\"></a>View</h3><h4 id=\"Pengertian-View\"><a href=\"#Pengertian-View\" class=\"headerlink\" title=\"Pengertian View\"></a>Pengertian View</h4><p>View pada dasarnya adalah sebuah kotak yang berisi berbagai macam konten. Konten tersebut dapat berupa kalimat gambar, tulisan tombol dan sebagainya.</p>\n<h4 id=\"Macam-macam-view-berdasar-kontenya\"><a href=\"#Macam-macam-view-berdasar-kontenya\" class=\"headerlink\" title=\"Macam - macam view berdasar kontenya\"></a>Macam - macam view berdasar kontenya</h4><ul>\n<li>Text View</li>\n<li>Image View</li>\n<li>Button</li>\n</ul>\n<p>Dalam menuliskan pemrograman, kita diharuskan untuk menulis kode program sebagai instruksi yang spesifik dan detail.</p>\n<p>IDE (Integrated Development Environment) merupakan suatu ruang kerja berupa perangkat lunak yang digunakan untuk menulis kode program. IDE yang biasa digunakan untuk menulis kode program android adalah Android Studio.</p>\n<p>Bahasa yang digunakan untuk membuat view pada Android berupa XML.</p>\n<p>Untuk menulis kode xml anda dapat menggunakan <a href=\"https://udacity.github.io/android-layout\">https://udacity.github.io/android-layout</a>.</p>\n<p>Kode XML digambarkan sebagai berikut :<br>    <!--gambar video ke 10--><br>    <figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">TextView</span></div><div class=\"line\">\t<span class=\"attr\">android:text</span>=<span class=\"string\">\"Ini Text\"</span></div><div class=\"line\">\t<span class=\"attr\">android:textColor</span>=<span class=\"string\">\"@android:color/white\"</span></div><div class=\"line\">\t<span class=\"attr\">android:background</span>=<span class=\"string\">\"@android:color/black\"</span></div><div class=\"line\">\t<span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"200dp\"</span></div><div class=\"line\">\t<span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"300dp\"</span></div><div class=\"line\">/&gt;</span></div></pre></td></tr></table></figure></p>\n<p>Kode tersebut memiliki ketentuan yaitu :</p>\n<ul>\n<li>Kode program ditulis di dalam tag. Tag didefinisikan dengan <code>&lt;&gt;</code> (kurung siku).</li>\n<li>Terdapat 2 tag yaitu tag pembuka dan tag penutup. Perbedaan antara tag pembuka dan tag penutup terdapat tanda <code>/</code>(garis miring).<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">TextView</span></div><div class=\"line\">  <span class=\"attr\">.....</span></div><div class=\"line\">/&gt;</span></div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>Tag juga bisa didefinisikan seperti berikut :<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">TextView</span>&gt;</span></div><div class=\"line\">  ....</div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">TextView</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<ul>\n<li>Terdapat nama tag yang mewakili view yang ingin dipakai. Dalam contoh diatas nama tag adalah TextView.</li>\n<li>Terdapat atribut(-atribut) yang digunakan untuk mengcustom view tersebut. Semisal untuk konten, warna tinggi dll.</li>\n<li>Setiap atribut memiliki nilai. Nilai mewakili apa yang akan dicustom pada setiap atribut. Nilai tersebut dipisahkan dari atributnya oleh tanda  <code>=</code> (samadengan) dan ditulis di dalam <code>&quot;&quot;</code> (tanda petik dua).</li>\n</ul>\n<h4 id=\"Text-View\"><a href=\"#Text-View\" class=\"headerlink\" title=\"Text View\"></a>Text View</h4><p>Macam macam atribut untuk text view :</p>\n<ul>\n<li>Menulis text</li>\n</ul>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">TextView</span></div><div class=\"line\">  <span class=\"attr\">android:text</span>=<span class=\"string\">\"tulis text anda di sini\"</span></div><div class=\"line\">/&gt;</span></div></pre></td></tr></table></figure>\n<ul>\n<li>Mengatur tinggi dan lebar layout</li>\n</ul>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">TextView</span></div><div class=\"line\">  <span class=\"attr\">android:height_layout</span>=<span class=\"string\">\"300dp\"</span></div><div class=\"line\">  <span class=\"attr\">android:width_layout</span>=<span class=\"string\">\"300dp\"</span></div><div class=\"line\">/&gt;</span></div></pre></td></tr></table></figure>\n<p>Satuan panjang (untuk panjang, tinggi dll) biasanya didefinisikan dengan satuan <code>dp</code>.<br>Atau untuk membuatnya menyesuaikan lebar dan tinggi text, anda dapat menggunakan mengisi nilainya dengan <code>wrap_content</code>.<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">TextView</span></div><div class=\"line\">  <span class=\"attr\">android:height_layout</span>=<span class=\"string\">\"wrap_content\"</span></div><div class=\"line\">  <span class=\"attr\">android:width_layout</span>=<span class=\"string\">\"wrap_content\"</span></div><div class=\"line\">/&gt;</span></div></pre></td></tr></table></figure></p>\n<ul>\n<li>Mengganti warna text</li>\n</ul>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">TextView</span></div><div class=\"line\">  <span class=\"attr\">android:textColor</span>=<span class=\"string\">\"@android:color/white\"</span></div><div class=\"line\">  <span class=\"attr\">atau</span></div><div class=\"line\">  <span class=\"attr\">android:textColor</span>=<span class=\"string\">\"#Kode_hexa_desimal\"</span></div><div class=\"line\">/&gt;</span></div></pre></td></tr></table></figure>\n<ul>\n<li>Mengganti ukuran font</li>\n</ul>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">TextView</span></div><div class=\"line\">  <span class=\"attr\">android:textSize</span>=<span class=\"string\">\"30sp\"</span></div><div class=\"line\">/&gt;</span></div></pre></td></tr></table></figure>\n<p>Satuan ukuran font didefinisikan dengan <code>sp</code>. Ukuran font dapat juga didefinisikan sebagai berikut :</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">TextView</span></div><div class=\"line\">  <span class=\"attr\">android:textAppearance</span>=<span class=\"string\">\"?android:textAppearanceLarge\"</span></div><div class=\"line\">  <span class=\"attr\">android:textAppearance</span>=<span class=\"string\">\"?android:textAppearanceMedium\"</span></div><div class=\"line\">  <span class=\"attr\">android:textAppearance</span>=<span class=\"string\">\"?android:textAppearanceSmall\"</span></div><div class=\"line\">/&gt;</span></div></pre></td></tr></table></figure>\n<ul>\n<li>Referensi untuk design dapat dilihat di <a href=\"https://www.google.com/design/spec/material-design/introduction.html\">Material Design Spec</a> atau <a href=\"https://plus.google.com/+AndroidDevelopers\">google+ #AndroidDev #Protip</a></li>\n</ul>\n<h4 id=\"Image-view\"><a href=\"#Image-view\" class=\"headerlink\" title=\"Image view\"></a>Image view</h4><p>Macam-macam atribut untuk Image View :</p>\n<ul>\n<li>Memilih gambar dari resource/assets:</li>\n</ul>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ImageView</span></div><div class=\"line\">  <span class=\"attr\">android:src</span>=<span class=\"string\">\"@drawable/ocean\"</span></div><div class=\"line\">/&gt;</span></div></pre></td></tr></table></figure>\n<ul>\n<li>Mengatur tinggi dan lebar layout</li>\n</ul>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">TextView</span></div><div class=\"line\">  <span class=\"attr\">android:height_layout</span>=<span class=\"string\">\"300dp\"</span></div><div class=\"line\">  <span class=\"attr\">android:width_layout</span>=<span class=\"string\">\"300dp\"</span></div><div class=\"line\">/&gt;</span></div></pre></td></tr></table></figure>\n<ul>\n<li>Mengatur posisi dan skala gambar</li>\n</ul>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ImageView</span></div><div class=\"line\">  <span class=\"attr\">android:scaleType</span>=<span class=\"string\">\"centerCrop\"</span></div><div class=\"line\">  <span class=\"attr\">atau</span></div><div class=\"line\">  <span class=\"attr\">android:scaleType</span>=<span class=\"string\">\"center\"</span></div><div class=\"line\">/&gt;</span></div></pre></td></tr></table></figure>\n<h3 id=\"Memposisikan-View\"><a href=\"#Memposisikan-View\" class=\"headerlink\" title=\"Memposisikan View\"></a>Memposisikan View</h3><h4 id=\"View-Group\"><a href=\"#View-Group\" class=\"headerlink\" title=\"View Group\"></a>View Group</h4><p>View group ini digunakan untuk mengelompokkan berbagai macam view. Jadi dia seperti <code>div</code> pada html. View group ini juga dapat didefinisikan sebagai parent sedangkan view didefinisikan sebagai child.<br>Kode XML dari view grup digambarkan sebagai berikut :<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">LinearLayout</span></div><div class=\"line\">  <span class=\"attr\">android:orientation</span>=<span class=\"string\">\"vertical\"</span></div><div class=\"line\">  <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"wrap_content\"</span></div><div class=\"line\">  <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">TextView</span></div><div class=\"line\">    <span class=\"attr\">android:text</span>=<span class=\"string\">\"Guest List\"</span></div><div class=\"line\">    <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"wrap_content\"</span></div><div class=\"line\">    <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span></div><div class=\"line\">    /&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">TextView</span></div><div class=\"line\">    <span class=\"attr\">android:text</span>=<span class=\"string\">\"Kunai\"</span></div><div class=\"line\">    <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"wrap_content\"</span></div><div class=\"line\">    <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span></div><div class=\"line\">    /&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">LinearLayout</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p>Note :<br>Perlu diketahui setiap XML yang kita buat harus kita tambahkan <code>xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</code>. Kode tersebut biasa disebut <code>XML namespace declaration</code>. Ini digunkan untuk mendefinisikan bahwa XML kita digunakan untuk android.  </p>\n<p>Macam-macam view grup :</p>\n<ol>\n<li>Linear Layout<br>View disusun secara berderet baik horizontal ataupun vertikal pada view grup. Untuk menggunakan Linear Layout cukup menggunakan tag <code>LinearLayout</code>.<ul>\n<li>Vertical row, yaitu view yang disusun secara vertical atas-bawah. Untuk menggunakan vertical row cukup tambahkan atribut <code>android:orientation=&quot;vertical&quot;</code>.</li>\n<li>Horizontal column, yaitu view yang disusun secara horizontal kanan-kiri. Untuk menggunakan horizontal column cukup tambahkan atribut <code>android:orientation=&quot;horizontal&quot;</code>.</li>\n</ul>\n</li>\n</ol>\n<p>Untuk mengatur panjang dan tinggi view dengan menyesuaikan parentnya dapat menggunakan sintaks sebagai berikut :<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">LinearLayout</span></div><div class=\"line\">  <span class=\"attr\">xmlns:android</span>=<span class=\"string\">\"http://schemas.android.com/apk/res/android\"</span></div><div class=\"line\">  <span class=\"attr\">android:orientation</span>=<span class=\"string\">\"vertical\"</span></div><div class=\"line\">  <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"match_parent\"</span></div><div class=\"line\">  <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"match_parent\"</span></div><div class=\"line\">  &gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">TextView</span></div><div class=\"line\">    <span class=\"attr\">android:text</span>=<span class=\"string\">\"Guest List\"</span></div><div class=\"line\">    <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"match_parent\"</span></div><div class=\"line\">    <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span></div><div class=\"line\">    /&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">TextView</span></div><div class=\"line\">    <span class=\"attr\">android:text</span>=<span class=\"string\">\"Kunai\"</span></div><div class=\"line\">    <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"match_parent\"</span></div><div class=\"line\">    <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span></div><div class=\"line\">    /&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">LinearLayout</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p>Pada kode diatas LinearLayout menggunakan match parent yang mengakibatkanya memiliki tinggi dan lebar sebesar resolusi layar. Begitu juga dengan text view yang menyesuaikan LinearLayout memiliki lebar sebesar layar.</p>\n<p>Untuk mengatur proporsi pajang dan lebar antar view kita dapat menggunakan <code>android:layout_weight=&quot;1&quot;</code> dan setiap panjang dan lebar diatur ke 0dp. Berikut contohnya :<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">LinearLayout</span></div><div class=\"line\">  <span class=\"attr\">xmlns:android</span>=<span class=\"string\">\"http://schemas.android.com/apk/res/android\"</span></div><div class=\"line\">  <span class=\"attr\">android:orientation</span>=<span class=\"string\">\"vertical\"</span></div><div class=\"line\">  <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"match_parent\"</span></div><div class=\"line\">  <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"match_parent\"</span></div><div class=\"line\">  &gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">TextView</span></div><div class=\"line\">    <span class=\"attr\">android:text</span>=<span class=\"string\">\"Guest List\"</span></div><div class=\"line\">    <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"0dp\"</span></div><div class=\"line\">    <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"0dp\"</span></div><div class=\"line\">    <span class=\"attr\">android:layout_weight</span>=<span class=\"string\">\"1\"</span></div><div class=\"line\">    /&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">TextView</span></div><div class=\"line\">    <span class=\"attr\">android:text</span>=<span class=\"string\">\"Kunai\"</span></div><div class=\"line\">    <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"0dp\"</span></div><div class=\"line\">    <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"0dp\"</span></div><div class=\"line\">    <span class=\"attr\">android:layout_weight</span>=<span class=\"string\">\"1\"</span></div><div class=\"line\">    /&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">LinearLayout</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<ol>\n<li><p>Relative Layout<br>View disusun secara sembarang. Posisi view dapat dibagi menjadi yaitu bagian atas, kanan, kiri dan bawah.</p>\n<ul>\n<li>Relative to parent, yaitu view yang disusun relatif berdasarkan pada parent.</li>\n</ul>\n<p>Untuk mengatur konten posisi konten berdasar parentnya dapat menggunakan atribut</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">RelativeView</span>&gt;</span></div><div class=\"line\">  ....</div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">TextView</span></div><div class=\"line\">    <span class=\"attr\">android:layout_alignParentTop</span>=<span class=\"string\">\"true/false\"</span></div><div class=\"line\">    <span class=\"attr\">android:layout_alignParentButton</span>=<span class=\"string\">\"true/false\"</span></div><div class=\"line\">    <span class=\"attr\">android:layout_alignParentLeft</span>=<span class=\"string\">\"true/false\"</span></div><div class=\"line\">    <span class=\"attr\">android:layout_alignParentRight</span>=<span class=\"string\">\"true/false\"</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">RelativeView</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>Untuk mengatur perataan konten dapat menggunakan</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">RelativeView</span>&gt;</span></div><div class=\"line\">  ....</div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">TextView</span></div><div class=\"line\">    <span class=\"attr\">android:layout_centerHorizontal</span>=<span class=\"string\">\"true/false\"</span></div><div class=\"line\">    <span class=\"attr\">android:layout_centerVertical</span>=<span class=\"string\">\"true/false\"</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">RelativeView</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>Posisi tersebut dapat dicustom sesuka hati dan dapat di mix and match. Semisal untuk pojok kiri atas maka yang top dan left diberi nilai true dan seterusnya.</p>\n<ul>\n<li>Relative to other child, yaitu view yang disusun relatif berdasarkan pada child lainya.</li>\n</ul>\n<p>Untuk mengatur konten posisi konten berdasar parentnya dapat menggunakan atribut</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">RelativeView</span>&gt;</span></div><div class=\"line\">  ....</div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">TextView</span></div><div class=\"line\">    <span class=\"attr\">android:layout_alignParentTop</span>=<span class=\"string\">\"true/false\"</span></div><div class=\"line\">    <span class=\"attr\">android:layout_alignParentButton</span>=<span class=\"string\">\"true/false\"</span></div><div class=\"line\">    <span class=\"attr\">android:layout_alignParentLeft</span>=<span class=\"string\">\"true/false\"</span></div><div class=\"line\">    <span class=\"attr\">android:layout_alignParentRight</span>=<span class=\"string\">\"true/false\"</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">RelativeView</span>&gt;</span></div></pre></td></tr></table></figure>\n</li>\n</ol>\n<p><a href=\"https://icons8.com/android-icons/\">https://icons8.com/android-icons/</a></p>\n"},{"title":"Introduction to Angular2","date":"2017-04-28T03:01:35.000Z","sticky":true,"_content":"![](/images/angular.png)\n\n# Sekilas tentang Angular\n\n[Angular](https://angular.io) merupakan framework untuk membangun aplikasi frontend web, desktop dan mobile. Angular sendiri berbasis bahasa pemrograman Typescript(https://www.typescriptlang.org/) dan [Javascript](https://www.javascript.com). Pada Tutorial kali ini kita akan coba membuat aplikasi angular berbasis frontend web.\n\n# Roadmap Belajar Angular\n","source":"_posts/pemrograman/angular2/0-Introduction-to-Angular2.md","raw":"---\ntitle: Introduction to Angular2\ndate: 2017-04-28 10:01:35\ncategories:\n  - Pemrograman\n  - Angular\nsticky: true\n---\n![](/images/angular.png)\n\n# Sekilas tentang Angular\n\n[Angular](https://angular.io) merupakan framework untuk membangun aplikasi frontend web, desktop dan mobile. Angular sendiri berbasis bahasa pemrograman Typescript(https://www.typescriptlang.org/) dan [Javascript](https://www.javascript.com). Pada Tutorial kali ini kita akan coba membuat aplikasi angular berbasis frontend web.\n\n# Roadmap Belajar Angular\n","slug":"pemrograman/angular2/0-Introduction-to-Angular2","published":1,"updated":"2017-05-07T09:21:59.742Z","_id":"cj2ed41mi000j8jlp0e5vtyoh","comments":1,"layout":"post","photos":[],"link":"","content":"<p><img src=\"/images/angular.png\" alt=\"\"></p>\n<h1 id=\"Sekilas-tentang-Angular\"><a href=\"#Sekilas-tentang-Angular\" class=\"headerlink\" title=\"Sekilas tentang Angular\"></a>Sekilas tentang Angular</h1><p><a href=\"https://angular.io\" target=\"_blank\" rel=\"external\">Angular</a> merupakan framework untuk membangun aplikasi frontend web, desktop dan mobile. Angular sendiri berbasis bahasa pemrograman Typescript(<a href=\"https://www.typescriptlang.org/\" target=\"_blank\" rel=\"external\">https://www.typescriptlang.org/</a>) dan <a href=\"https://www.javascript.com\" target=\"_blank\" rel=\"external\">Javascript</a>. Pada Tutorial kali ini kita akan coba membuat aplikasi angular berbasis frontend web.</p>\n<h1 id=\"Roadmap-Belajar-Angular\"><a href=\"#Roadmap-Belajar-Angular\" class=\"headerlink\" title=\"Roadmap Belajar Angular\"></a>Roadmap Belajar Angular</h1>","excerpt":"","more":"<p><img src=\"/images/angular.png\" alt=\"\"></p>\n<h1 id=\"Sekilas-tentang-Angular\"><a href=\"#Sekilas-tentang-Angular\" class=\"headerlink\" title=\"Sekilas tentang Angular\"></a>Sekilas tentang Angular</h1><p><a href=\"https://angular.io\">Angular</a> merupakan framework untuk membangun aplikasi frontend web, desktop dan mobile. Angular sendiri berbasis bahasa pemrograman Typescript(<a href=\"https://www.typescriptlang.org/\">https://www.typescriptlang.org/</a>) dan <a href=\"https://www.javascript.com\">Javascript</a>. Pada Tutorial kali ini kita akan coba membuat aplikasi angular berbasis frontend web.</p>\n<h1 id=\"Roadmap-Belajar-Angular\"><a href=\"#Roadmap-Belajar-Angular\" class=\"headerlink\" title=\"Roadmap Belajar Angular\"></a>Roadmap Belajar Angular</h1>"},{"title":"Setup Project Angular2","date":"2017-04-28T03:01:36.000Z","_content":"![](/images/angular.png)\n## Menginstall Node dan NPM\nUntuk menginstall node saya menyarankan menggunakan tutorial dari [Digital Ocean](https://www.digitalocean.com/community/tutorials/how-to-install-node-js-on-ubuntu-16-04) dengan menggunakan nvm.\n\n\n## Menginstall Angular CLI\nAngular ini adalah salah satu tools untuk membuat aplikasi angular2. Untuk menggunakanya cukup ketikkan kode berikut apda terminal.\n```\n  npm install -g @angular/cli\n```\n\n## Membuat Project Angular2\n```\n  ng new NAMA_PROJECT\n```\nSetelah itu akan dibuat struktur folder sebagai berikut :\n```\nangular2-spring-boot-pegadaian/\n├── .git\n│   ├── branches\n│   ├── COMMIT_EDITMSG\n│   ├── config\n│   ├── description\n│   ├── HEAD\n│   ├── hooks\n│   │   ├── applypatch-msg.sample\n│   │   ├── commit-msg.sample\n│   │   ├── post-update.sample\n│   │   ├── pre-applypatch.sample\n│   │   ├── pre-commit.sample\n│   │   ├── prepare-commit-msg.sample\n│   │   ├── pre-push.sample\n│   │   ├── pre-rebase.sample\n│   │   └── update.sample\n│   ├── index\n│   ├── info\n│   │   └── exclude\n│   ├── logs\n│   │   ├── HEAD\n│   │   └── refs\n│   │       └── heads\n│   │           └── master\n│   ├── objects\n│   │   ├── 82\n│   │   │   └── e3a754b6a0fcb238b03c0e47d05219fbf9cf89\n│   │   ├── e6\n│   │   │   └── 9de29bb2d1d6434b8b29ae775ad8c2e48c5391\n│   │   ├── f1\n│   │   │   └── 65300d6c67d5599ceb9b0ed355c2a8cbe336bf\n│   │   ├── info\n│   │   └── pack\n│   └── refs\n│       ├── heads\n│       │   └── master\n│       └── tags\n├── .gitignore\n└── NAMA_PROJECT\n    ├── .angular-cli.json\n    ├── e2e\n    │   ├── app.e2e-spec.ts\n    │   ├── app.po.ts\n    │   └── tsconfig.e2e.json\n    ├── .editorconfig\n    ├── .gitignore\n    ├── karma.conf.js\n    ├── package.json\n    ├── protractor.conf.js\n    ├── README.md\n    ├── src\n    │   ├── app\n    │   │   ├── app.component.css\n    │   │   ├── app.component.html\n    │   │   ├── app.component.spec.ts\n    │   │   ├── app.component.ts\n    │   │   └── app.module.ts\n    │   ├── assets\n    │   │   └── .gitkeep\n    │   ├── environments\n    │   │   ├── environment.prod.ts\n    │   │   └── environment.ts\n    │   ├── favicon.ico\n    │   ├── index.html\n    │   ├── main.ts\n    │   ├── polyfills.ts\n    │   ├── styles.css\n    │   ├── test.ts\n    │   ├── tsconfig.app.json\n    │   ├── tsconfig.spec.json\n    │   └── typings.d.ts\n    ├── tsconfig.json\n    └── tslint.json\n```\nPada Project tersebut terdapat beberapa file yaitu :\n- angular-cli.json. File ini berisi konfigurasi dari tools angular cli.\n- package.json. File ini digenerate untuk setiap project yang menggunakan npm. Berisi konfigurasi dependency/library.\n- tsconfig.json. File ini berisi konfigurasi untuk typscript compiler. Terdapat `emitDecoratorMetadata` yang digunakan memproses decorator dimana fungsinya sama dengan anotation pada spring framework. Decorator berfungsi untuk mengkonversi Typescript ke Javascript. Terdapat juga `module` yang berisi module systemnya. Terdapat juga `target` untuk outputnya nanti menjadi apa. Terdapat juga `moduleResolution` untuk system modulnya. Terdapat juga `outDir` untuk compilenya kemana. Terdapat juga `sourceMap` untuk mapping hasil compile ke sourcecode aslinya.\n- node_module. Folder ini merupakan repository local yang berisi dependency yang telah didownload.\n- index.html. File ini merupaka html indexnya. Angular2 ini menggenerate Single Page Aplication. Jadi file html cuma 1 dan yang lainya JS.\n- main.ts. File ini merupaka main class nya.\n- style.css. File css untuk global.\n- app. Folder yang berisi sourcecode. Di folder ini terdapat beberapa file yaitu `.css` untuk cssnya, `.html` untuk templatenya, `.spec.ts` untuk testing, `.ts` untuk konfigurasi template dan ts, `module.ts` untuk modulenya (kalo di java seperti package).\n\n## Running Project\nUntuk running project dapat gunakan code berikut pada terminal\n```\ncd NAMA_PROJECT\nng serve\n```\nHasilnya dapat anda lihat di browser pada `localhost:4200`.\n\n\n## Build Project\nUntuk running project dapat gunakan code berikut pada terminal\n```\ncd NAMA_PROJECT\nng serve\n```\nHasilnya dapat anda lihat pada folder dist\n\n\n## Flow Angular2\n1. main.ts akan dijalankan pertama kali. Di main.ts sendiri dia mengimport app.module.ts melalui koding `import { AppModule } from './app/app.module';`. Selain itu main.ts juga membootrap app.module.ts melalui koding `platformBrowserDynamic().bootstrapModule(AppModule);`\n2. Selanjutnya app.module.ts. Di app.module.ts dia terdapat `declaration` yang berisi kelas-kelas apa saja yang ada di modul ini. Selanjutnya ada `import` yang berisi kelas-kelas apa saja yang diimport. Selanjutnya ada `bootstrap` yang digunakan untuk menjalankan file (yaitu AppComponent).\n3. Selanjutnya app.component.ts. Di app.component.ts terdapat `selector` yang digunakan untuk tag pada html. Jadi dia akan mencari tag di html (yaitu app-root), apabila ada maka dia akan menginjectkan templatenya ke dalam tag tersebut. Templatenya sendiri berasa dari `templateUrl`.\n4. Selanjutnya app.component.html. Di app.component.html apabila ada variabel maka dia akan mengambilnya dari app.component.ts bagian export.\n\n\n## Install Bootstrap\nStep ini optional karena untuk css bisa pake framework yang lain atau menginputkan sendiri cssnya. Step ini hanya untuk mempermudah saja.\nUntuk menginstallnya dapat menggunakan kode\n```\nnpm install ng2-bootstrap bootstrap --save\n```\nSetelah itu includekan bootstrapnya ke file angular-cli.json.\n```json\n\"styles\": [\n  \"styles.css\",\n  \"../node_modules/bootstrap/dist/css/bootstrap.min.css\"\n],\n```\n\n## Arsitektur Aplikasi Angular2\nArsitekturnya kurang lebih seperti berikut\n```\n  Aplikasi\n  ├── Top Level Component\n  │   ├── Module\n  │   │   ├── Component\n  |   |   |   |── Typescript\n  |   |   |   |── HTML\n```\nPenjelasanya adalah setiap aplikasi terdiri dari satu atau lebih Component. Components ini menyusun Kelompok dari Module tertentu. Begitu juga dengan Module yang tersusun dari satu atau lebih Component. Component sendiri dibuat berdasarkan file Typescript dan HTML. Berikut contoh sederhananya:\n```\n  Aplikasi Tabungan Emas\n  ├── Sidebar Component\n  │   ├── Informasi Rekening\n  │   ├── Transaksi Emas\n  │   │   ├── Form\n  │   │   ├── Rekap\n  ├── Navbar Component\n  │   ├── Settings\n  │   ├── Profile\n  │   ├── Help\n```\n","source":"_posts/pemrograman/angular2/1-Setup-Project-Angular2.md","raw":"---\ntitle: Setup Project Angular2\ndate: 2017-04-28 10:01:36\ncategories:\n  - Pemrograman\n  - Angular\n---\n![](/images/angular.png)\n## Menginstall Node dan NPM\nUntuk menginstall node saya menyarankan menggunakan tutorial dari [Digital Ocean](https://www.digitalocean.com/community/tutorials/how-to-install-node-js-on-ubuntu-16-04) dengan menggunakan nvm.\n\n\n## Menginstall Angular CLI\nAngular ini adalah salah satu tools untuk membuat aplikasi angular2. Untuk menggunakanya cukup ketikkan kode berikut apda terminal.\n```\n  npm install -g @angular/cli\n```\n\n## Membuat Project Angular2\n```\n  ng new NAMA_PROJECT\n```\nSetelah itu akan dibuat struktur folder sebagai berikut :\n```\nangular2-spring-boot-pegadaian/\n├── .git\n│   ├── branches\n│   ├── COMMIT_EDITMSG\n│   ├── config\n│   ├── description\n│   ├── HEAD\n│   ├── hooks\n│   │   ├── applypatch-msg.sample\n│   │   ├── commit-msg.sample\n│   │   ├── post-update.sample\n│   │   ├── pre-applypatch.sample\n│   │   ├── pre-commit.sample\n│   │   ├── prepare-commit-msg.sample\n│   │   ├── pre-push.sample\n│   │   ├── pre-rebase.sample\n│   │   └── update.sample\n│   ├── index\n│   ├── info\n│   │   └── exclude\n│   ├── logs\n│   │   ├── HEAD\n│   │   └── refs\n│   │       └── heads\n│   │           └── master\n│   ├── objects\n│   │   ├── 82\n│   │   │   └── e3a754b6a0fcb238b03c0e47d05219fbf9cf89\n│   │   ├── e6\n│   │   │   └── 9de29bb2d1d6434b8b29ae775ad8c2e48c5391\n│   │   ├── f1\n│   │   │   └── 65300d6c67d5599ceb9b0ed355c2a8cbe336bf\n│   │   ├── info\n│   │   └── pack\n│   └── refs\n│       ├── heads\n│       │   └── master\n│       └── tags\n├── .gitignore\n└── NAMA_PROJECT\n    ├── .angular-cli.json\n    ├── e2e\n    │   ├── app.e2e-spec.ts\n    │   ├── app.po.ts\n    │   └── tsconfig.e2e.json\n    ├── .editorconfig\n    ├── .gitignore\n    ├── karma.conf.js\n    ├── package.json\n    ├── protractor.conf.js\n    ├── README.md\n    ├── src\n    │   ├── app\n    │   │   ├── app.component.css\n    │   │   ├── app.component.html\n    │   │   ├── app.component.spec.ts\n    │   │   ├── app.component.ts\n    │   │   └── app.module.ts\n    │   ├── assets\n    │   │   └── .gitkeep\n    │   ├── environments\n    │   │   ├── environment.prod.ts\n    │   │   └── environment.ts\n    │   ├── favicon.ico\n    │   ├── index.html\n    │   ├── main.ts\n    │   ├── polyfills.ts\n    │   ├── styles.css\n    │   ├── test.ts\n    │   ├── tsconfig.app.json\n    │   ├── tsconfig.spec.json\n    │   └── typings.d.ts\n    ├── tsconfig.json\n    └── tslint.json\n```\nPada Project tersebut terdapat beberapa file yaitu :\n- angular-cli.json. File ini berisi konfigurasi dari tools angular cli.\n- package.json. File ini digenerate untuk setiap project yang menggunakan npm. Berisi konfigurasi dependency/library.\n- tsconfig.json. File ini berisi konfigurasi untuk typscript compiler. Terdapat `emitDecoratorMetadata` yang digunakan memproses decorator dimana fungsinya sama dengan anotation pada spring framework. Decorator berfungsi untuk mengkonversi Typescript ke Javascript. Terdapat juga `module` yang berisi module systemnya. Terdapat juga `target` untuk outputnya nanti menjadi apa. Terdapat juga `moduleResolution` untuk system modulnya. Terdapat juga `outDir` untuk compilenya kemana. Terdapat juga `sourceMap` untuk mapping hasil compile ke sourcecode aslinya.\n- node_module. Folder ini merupakan repository local yang berisi dependency yang telah didownload.\n- index.html. File ini merupaka html indexnya. Angular2 ini menggenerate Single Page Aplication. Jadi file html cuma 1 dan yang lainya JS.\n- main.ts. File ini merupaka main class nya.\n- style.css. File css untuk global.\n- app. Folder yang berisi sourcecode. Di folder ini terdapat beberapa file yaitu `.css` untuk cssnya, `.html` untuk templatenya, `.spec.ts` untuk testing, `.ts` untuk konfigurasi template dan ts, `module.ts` untuk modulenya (kalo di java seperti package).\n\n## Running Project\nUntuk running project dapat gunakan code berikut pada terminal\n```\ncd NAMA_PROJECT\nng serve\n```\nHasilnya dapat anda lihat di browser pada `localhost:4200`.\n\n\n## Build Project\nUntuk running project dapat gunakan code berikut pada terminal\n```\ncd NAMA_PROJECT\nng serve\n```\nHasilnya dapat anda lihat pada folder dist\n\n\n## Flow Angular2\n1. main.ts akan dijalankan pertama kali. Di main.ts sendiri dia mengimport app.module.ts melalui koding `import { AppModule } from './app/app.module';`. Selain itu main.ts juga membootrap app.module.ts melalui koding `platformBrowserDynamic().bootstrapModule(AppModule);`\n2. Selanjutnya app.module.ts. Di app.module.ts dia terdapat `declaration` yang berisi kelas-kelas apa saja yang ada di modul ini. Selanjutnya ada `import` yang berisi kelas-kelas apa saja yang diimport. Selanjutnya ada `bootstrap` yang digunakan untuk menjalankan file (yaitu AppComponent).\n3. Selanjutnya app.component.ts. Di app.component.ts terdapat `selector` yang digunakan untuk tag pada html. Jadi dia akan mencari tag di html (yaitu app-root), apabila ada maka dia akan menginjectkan templatenya ke dalam tag tersebut. Templatenya sendiri berasa dari `templateUrl`.\n4. Selanjutnya app.component.html. Di app.component.html apabila ada variabel maka dia akan mengambilnya dari app.component.ts bagian export.\n\n\n## Install Bootstrap\nStep ini optional karena untuk css bisa pake framework yang lain atau menginputkan sendiri cssnya. Step ini hanya untuk mempermudah saja.\nUntuk menginstallnya dapat menggunakan kode\n```\nnpm install ng2-bootstrap bootstrap --save\n```\nSetelah itu includekan bootstrapnya ke file angular-cli.json.\n```json\n\"styles\": [\n  \"styles.css\",\n  \"../node_modules/bootstrap/dist/css/bootstrap.min.css\"\n],\n```\n\n## Arsitektur Aplikasi Angular2\nArsitekturnya kurang lebih seperti berikut\n```\n  Aplikasi\n  ├── Top Level Component\n  │   ├── Module\n  │   │   ├── Component\n  |   |   |   |── Typescript\n  |   |   |   |── HTML\n```\nPenjelasanya adalah setiap aplikasi terdiri dari satu atau lebih Component. Components ini menyusun Kelompok dari Module tertentu. Begitu juga dengan Module yang tersusun dari satu atau lebih Component. Component sendiri dibuat berdasarkan file Typescript dan HTML. Berikut contoh sederhananya:\n```\n  Aplikasi Tabungan Emas\n  ├── Sidebar Component\n  │   ├── Informasi Rekening\n  │   ├── Transaksi Emas\n  │   │   ├── Form\n  │   │   ├── Rekap\n  ├── Navbar Component\n  │   ├── Settings\n  │   ├── Profile\n  │   ├── Help\n```\n","slug":"pemrograman/angular2/1-Setup-Project-Angular2","published":1,"updated":"2017-05-07T09:22:03.382Z","_id":"cj2ed41mm000m8jlpxik5gvjd","comments":1,"layout":"post","photos":[],"link":"","content":"<p><img src=\"/images/angular.png\" alt=\"\"></p>\n<h2 id=\"Menginstall-Node-dan-NPM\"><a href=\"#Menginstall-Node-dan-NPM\" class=\"headerlink\" title=\"Menginstall Node dan NPM\"></a>Menginstall Node dan NPM</h2><p>Untuk menginstall node saya menyarankan menggunakan tutorial dari <a href=\"https://www.digitalocean.com/community/tutorials/how-to-install-node-js-on-ubuntu-16-04\" target=\"_blank\" rel=\"external\">Digital Ocean</a> dengan menggunakan nvm.</p>\n<h2 id=\"Menginstall-Angular-CLI\"><a href=\"#Menginstall-Angular-CLI\" class=\"headerlink\" title=\"Menginstall Angular CLI\"></a>Menginstall Angular CLI</h2><p>Angular ini adalah salah satu tools untuk membuat aplikasi angular2. Untuk menggunakanya cukup ketikkan kode berikut apda terminal.<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install -g @angular/cli</div></pre></td></tr></table></figure></p>\n<h2 id=\"Membuat-Project-Angular2\"><a href=\"#Membuat-Project-Angular2\" class=\"headerlink\" title=\"Membuat Project Angular2\"></a>Membuat Project Angular2</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">ng new NAMA_PROJECT</div></pre></td></tr></table></figure>\n<p>Setelah itu akan dibuat struktur folder sebagai berikut :<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div></pre></td><td class=\"code\"><pre><div class=\"line\">angular2-spring-boot-pegadaian/</div><div class=\"line\">├── .git</div><div class=\"line\">│   ├── branches</div><div class=\"line\">│   ├── COMMIT_EDITMSG</div><div class=\"line\">│   ├── config</div><div class=\"line\">│   ├── description</div><div class=\"line\">│   ├── HEAD</div><div class=\"line\">│   ├── hooks</div><div class=\"line\">│   │   ├── applypatch-msg.sample</div><div class=\"line\">│   │   ├── commit-msg.sample</div><div class=\"line\">│   │   ├── post-update.sample</div><div class=\"line\">│   │   ├── pre-applypatch.sample</div><div class=\"line\">│   │   ├── pre-commit.sample</div><div class=\"line\">│   │   ├── prepare-commit-msg.sample</div><div class=\"line\">│   │   ├── pre-push.sample</div><div class=\"line\">│   │   ├── pre-rebase.sample</div><div class=\"line\">│   │   └── update.sample</div><div class=\"line\">│   ├── index</div><div class=\"line\">│   ├── info</div><div class=\"line\">│   │   └── exclude</div><div class=\"line\">│   ├── logs</div><div class=\"line\">│   │   ├── HEAD</div><div class=\"line\">│   │   └── refs</div><div class=\"line\">│   │       └── heads</div><div class=\"line\">│   │           └── master</div><div class=\"line\">│   ├── objects</div><div class=\"line\">│   │   ├── 82</div><div class=\"line\">│   │   │   └── e3a754b6a0fcb238b03c0e47d05219fbf9cf89</div><div class=\"line\">│   │   ├── e6</div><div class=\"line\">│   │   │   └── 9de29bb2d1d6434b8b29ae775ad8c2e48c5391</div><div class=\"line\">│   │   ├── f1</div><div class=\"line\">│   │   │   └── 65300d6c67d5599ceb9b0ed355c2a8cbe336bf</div><div class=\"line\">│   │   ├── info</div><div class=\"line\">│   │   └── pack</div><div class=\"line\">│   └── refs</div><div class=\"line\">│       ├── heads</div><div class=\"line\">│       │   └── master</div><div class=\"line\">│       └── tags</div><div class=\"line\">├── .gitignore</div><div class=\"line\">└── NAMA_PROJECT</div><div class=\"line\">    ├── .angular-cli.json</div><div class=\"line\">    ├── e2e</div><div class=\"line\">    │   ├── app.e2e-spec.ts</div><div class=\"line\">    │   ├── app.po.ts</div><div class=\"line\">    │   └── tsconfig.e2e.json</div><div class=\"line\">    ├── .editorconfig</div><div class=\"line\">    ├── .gitignore</div><div class=\"line\">    ├── karma.conf.js</div><div class=\"line\">    ├── package.json</div><div class=\"line\">    ├── protractor.conf.js</div><div class=\"line\">    ├── README.md</div><div class=\"line\">    ├── src</div><div class=\"line\">    │   ├── app</div><div class=\"line\">    │   │   ├── app.component.css</div><div class=\"line\">    │   │   ├── app.component.html</div><div class=\"line\">    │   │   ├── app.component.spec.ts</div><div class=\"line\">    │   │   ├── app.component.ts</div><div class=\"line\">    │   │   └── app.module.ts</div><div class=\"line\">    │   ├── assets</div><div class=\"line\">    │   │   └── .gitkeep</div><div class=\"line\">    │   ├── environments</div><div class=\"line\">    │   │   ├── environment.prod.ts</div><div class=\"line\">    │   │   └── environment.ts</div><div class=\"line\">    │   ├── favicon.ico</div><div class=\"line\">    │   ├── index.html</div><div class=\"line\">    │   ├── main.ts</div><div class=\"line\">    │   ├── polyfills.ts</div><div class=\"line\">    │   ├── styles.css</div><div class=\"line\">    │   ├── test.ts</div><div class=\"line\">    │   ├── tsconfig.app.json</div><div class=\"line\">    │   ├── tsconfig.spec.json</div><div class=\"line\">    │   └── typings.d.ts</div><div class=\"line\">    ├── tsconfig.json</div><div class=\"line\">    └── tslint.json</div></pre></td></tr></table></figure></p>\n<p>Pada Project tersebut terdapat beberapa file yaitu :</p>\n<ul>\n<li>angular-cli.json. File ini berisi konfigurasi dari tools angular cli.</li>\n<li>package.json. File ini digenerate untuk setiap project yang menggunakan npm. Berisi konfigurasi dependency/library.</li>\n<li>tsconfig.json. File ini berisi konfigurasi untuk typscript compiler. Terdapat <code>emitDecoratorMetadata</code> yang digunakan memproses decorator dimana fungsinya sama dengan anotation pada spring framework. Decorator berfungsi untuk mengkonversi Typescript ke Javascript. Terdapat juga <code>module</code> yang berisi module systemnya. Terdapat juga <code>target</code> untuk outputnya nanti menjadi apa. Terdapat juga <code>moduleResolution</code> untuk system modulnya. Terdapat juga <code>outDir</code> untuk compilenya kemana. Terdapat juga <code>sourceMap</code> untuk mapping hasil compile ke sourcecode aslinya.</li>\n<li>node_module. Folder ini merupakan repository local yang berisi dependency yang telah didownload.</li>\n<li>index.html. File ini merupaka html indexnya. Angular2 ini menggenerate Single Page Aplication. Jadi file html cuma 1 dan yang lainya JS.</li>\n<li>main.ts. File ini merupaka main class nya.</li>\n<li>style.css. File css untuk global.</li>\n<li>app. Folder yang berisi sourcecode. Di folder ini terdapat beberapa file yaitu <code>.css</code> untuk cssnya, <code>.html</code> untuk templatenya, <code>.spec.ts</code> untuk testing, <code>.ts</code> untuk konfigurasi template dan ts, <code>module.ts</code> untuk modulenya (kalo di java seperti package).</li>\n</ul>\n<h2 id=\"Running-Project\"><a href=\"#Running-Project\" class=\"headerlink\" title=\"Running Project\"></a>Running Project</h2><p>Untuk running project dapat gunakan code berikut pada terminal<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">cd NAMA_PROJECT</div><div class=\"line\">ng serve</div></pre></td></tr></table></figure></p>\n<p>Hasilnya dapat anda lihat di browser pada <code>localhost:4200</code>.</p>\n<h2 id=\"Build-Project\"><a href=\"#Build-Project\" class=\"headerlink\" title=\"Build Project\"></a>Build Project</h2><p>Untuk running project dapat gunakan code berikut pada terminal<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">cd NAMA_PROJECT</div><div class=\"line\">ng serve</div></pre></td></tr></table></figure></p>\n<p>Hasilnya dapat anda lihat pada folder dist</p>\n<h2 id=\"Flow-Angular2\"><a href=\"#Flow-Angular2\" class=\"headerlink\" title=\"Flow Angular2\"></a>Flow Angular2</h2><ol>\n<li>main.ts akan dijalankan pertama kali. Di main.ts sendiri dia mengimport app.module.ts melalui koding <code>import { AppModule } from &#39;./app/app.module&#39;;</code>. Selain itu main.ts juga membootrap app.module.ts melalui koding <code>platformBrowserDynamic().bootstrapModule(AppModule);</code></li>\n<li>Selanjutnya app.module.ts. Di app.module.ts dia terdapat <code>declaration</code> yang berisi kelas-kelas apa saja yang ada di modul ini. Selanjutnya ada <code>import</code> yang berisi kelas-kelas apa saja yang diimport. Selanjutnya ada <code>bootstrap</code> yang digunakan untuk menjalankan file (yaitu AppComponent).</li>\n<li>Selanjutnya app.component.ts. Di app.component.ts terdapat <code>selector</code> yang digunakan untuk tag pada html. Jadi dia akan mencari tag di html (yaitu app-root), apabila ada maka dia akan menginjectkan templatenya ke dalam tag tersebut. Templatenya sendiri berasa dari <code>templateUrl</code>.</li>\n<li>Selanjutnya app.component.html. Di app.component.html apabila ada variabel maka dia akan mengambilnya dari app.component.ts bagian export.</li>\n</ol>\n<h2 id=\"Install-Bootstrap\"><a href=\"#Install-Bootstrap\" class=\"headerlink\" title=\"Install Bootstrap\"></a>Install Bootstrap</h2><p>Step ini optional karena untuk css bisa pake framework yang lain atau menginputkan sendiri cssnya. Step ini hanya untuk mempermudah saja.<br>Untuk menginstallnya dapat menggunakan kode<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install ng2-bootstrap bootstrap --save</div></pre></td></tr></table></figure></p>\n<p>Setelah itu includekan bootstrapnya ke file angular-cli.json.<br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">\"styles\": [</div><div class=\"line\">  \"styles.css\",</div><div class=\"line\">  \"../node_modules/bootstrap/dist/css/bootstrap.min.css\"</div><div class=\"line\">],</div></pre></td></tr></table></figure></p>\n<h2 id=\"Arsitektur-Aplikasi-Angular2\"><a href=\"#Arsitektur-Aplikasi-Angular2\" class=\"headerlink\" title=\"Arsitektur Aplikasi Angular2\"></a>Arsitektur Aplikasi Angular2</h2><p>Arsitekturnya kurang lebih seperti berikut<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">Aplikasi</div><div class=\"line\">├── Top Level Component</div><div class=\"line\">│   ├── Module</div><div class=\"line\">│   │   ├── Component</div><div class=\"line\">|   |   |   |── Typescript</div><div class=\"line\">|   |   |   |── HTML</div></pre></td></tr></table></figure></p>\n<p>Penjelasanya adalah setiap aplikasi terdiri dari satu atau lebih Component. Components ini menyusun Kelompok dari Module tertentu. Begitu juga dengan Module yang tersusun dari satu atau lebih Component. Component sendiri dibuat berdasarkan file Typescript dan HTML. Berikut contoh sederhananya:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">Aplikasi Tabungan Emas</div><div class=\"line\">├── Sidebar Component</div><div class=\"line\">│   ├── Informasi Rekening</div><div class=\"line\">│   ├── Transaksi Emas</div><div class=\"line\">│   │   ├── Form</div><div class=\"line\">│   │   ├── Rekap</div><div class=\"line\">├── Navbar Component</div><div class=\"line\">│   ├── Settings</div><div class=\"line\">│   ├── Profile</div><div class=\"line\">│   ├── Help</div></pre></td></tr></table></figure></p>\n","excerpt":"","more":"<p><img src=\"/images/angular.png\" alt=\"\"></p>\n<h2 id=\"Menginstall-Node-dan-NPM\"><a href=\"#Menginstall-Node-dan-NPM\" class=\"headerlink\" title=\"Menginstall Node dan NPM\"></a>Menginstall Node dan NPM</h2><p>Untuk menginstall node saya menyarankan menggunakan tutorial dari <a href=\"https://www.digitalocean.com/community/tutorials/how-to-install-node-js-on-ubuntu-16-04\">Digital Ocean</a> dengan menggunakan nvm.</p>\n<h2 id=\"Menginstall-Angular-CLI\"><a href=\"#Menginstall-Angular-CLI\" class=\"headerlink\" title=\"Menginstall Angular CLI\"></a>Menginstall Angular CLI</h2><p>Angular ini adalah salah satu tools untuk membuat aplikasi angular2. Untuk menggunakanya cukup ketikkan kode berikut apda terminal.<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install -g @angular/cli</div></pre></td></tr></table></figure></p>\n<h2 id=\"Membuat-Project-Angular2\"><a href=\"#Membuat-Project-Angular2\" class=\"headerlink\" title=\"Membuat Project Angular2\"></a>Membuat Project Angular2</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">ng new NAMA_PROJECT</div></pre></td></tr></table></figure>\n<p>Setelah itu akan dibuat struktur folder sebagai berikut :<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div></pre></td><td class=\"code\"><pre><div class=\"line\">angular2-spring-boot-pegadaian/</div><div class=\"line\">├── .git</div><div class=\"line\">│   ├── branches</div><div class=\"line\">│   ├── COMMIT_EDITMSG</div><div class=\"line\">│   ├── config</div><div class=\"line\">│   ├── description</div><div class=\"line\">│   ├── HEAD</div><div class=\"line\">│   ├── hooks</div><div class=\"line\">│   │   ├── applypatch-msg.sample</div><div class=\"line\">│   │   ├── commit-msg.sample</div><div class=\"line\">│   │   ├── post-update.sample</div><div class=\"line\">│   │   ├── pre-applypatch.sample</div><div class=\"line\">│   │   ├── pre-commit.sample</div><div class=\"line\">│   │   ├── prepare-commit-msg.sample</div><div class=\"line\">│   │   ├── pre-push.sample</div><div class=\"line\">│   │   ├── pre-rebase.sample</div><div class=\"line\">│   │   └── update.sample</div><div class=\"line\">│   ├── index</div><div class=\"line\">│   ├── info</div><div class=\"line\">│   │   └── exclude</div><div class=\"line\">│   ├── logs</div><div class=\"line\">│   │   ├── HEAD</div><div class=\"line\">│   │   └── refs</div><div class=\"line\">│   │       └── heads</div><div class=\"line\">│   │           └── master</div><div class=\"line\">│   ├── objects</div><div class=\"line\">│   │   ├── 82</div><div class=\"line\">│   │   │   └── e3a754b6a0fcb238b03c0e47d05219fbf9cf89</div><div class=\"line\">│   │   ├── e6</div><div class=\"line\">│   │   │   └── 9de29bb2d1d6434b8b29ae775ad8c2e48c5391</div><div class=\"line\">│   │   ├── f1</div><div class=\"line\">│   │   │   └── 65300d6c67d5599ceb9b0ed355c2a8cbe336bf</div><div class=\"line\">│   │   ├── info</div><div class=\"line\">│   │   └── pack</div><div class=\"line\">│   └── refs</div><div class=\"line\">│       ├── heads</div><div class=\"line\">│       │   └── master</div><div class=\"line\">│       └── tags</div><div class=\"line\">├── .gitignore</div><div class=\"line\">└── NAMA_PROJECT</div><div class=\"line\">    ├── .angular-cli.json</div><div class=\"line\">    ├── e2e</div><div class=\"line\">    │   ├── app.e2e-spec.ts</div><div class=\"line\">    │   ├── app.po.ts</div><div class=\"line\">    │   └── tsconfig.e2e.json</div><div class=\"line\">    ├── .editorconfig</div><div class=\"line\">    ├── .gitignore</div><div class=\"line\">    ├── karma.conf.js</div><div class=\"line\">    ├── package.json</div><div class=\"line\">    ├── protractor.conf.js</div><div class=\"line\">    ├── README.md</div><div class=\"line\">    ├── src</div><div class=\"line\">    │   ├── app</div><div class=\"line\">    │   │   ├── app.component.css</div><div class=\"line\">    │   │   ├── app.component.html</div><div class=\"line\">    │   │   ├── app.component.spec.ts</div><div class=\"line\">    │   │   ├── app.component.ts</div><div class=\"line\">    │   │   └── app.module.ts</div><div class=\"line\">    │   ├── assets</div><div class=\"line\">    │   │   └── .gitkeep</div><div class=\"line\">    │   ├── environments</div><div class=\"line\">    │   │   ├── environment.prod.ts</div><div class=\"line\">    │   │   └── environment.ts</div><div class=\"line\">    │   ├── favicon.ico</div><div class=\"line\">    │   ├── index.html</div><div class=\"line\">    │   ├── main.ts</div><div class=\"line\">    │   ├── polyfills.ts</div><div class=\"line\">    │   ├── styles.css</div><div class=\"line\">    │   ├── test.ts</div><div class=\"line\">    │   ├── tsconfig.app.json</div><div class=\"line\">    │   ├── tsconfig.spec.json</div><div class=\"line\">    │   └── typings.d.ts</div><div class=\"line\">    ├── tsconfig.json</div><div class=\"line\">    └── tslint.json</div></pre></td></tr></table></figure></p>\n<p>Pada Project tersebut terdapat beberapa file yaitu :</p>\n<ul>\n<li>angular-cli.json. File ini berisi konfigurasi dari tools angular cli.</li>\n<li>package.json. File ini digenerate untuk setiap project yang menggunakan npm. Berisi konfigurasi dependency/library.</li>\n<li>tsconfig.json. File ini berisi konfigurasi untuk typscript compiler. Terdapat <code>emitDecoratorMetadata</code> yang digunakan memproses decorator dimana fungsinya sama dengan anotation pada spring framework. Decorator berfungsi untuk mengkonversi Typescript ke Javascript. Terdapat juga <code>module</code> yang berisi module systemnya. Terdapat juga <code>target</code> untuk outputnya nanti menjadi apa. Terdapat juga <code>moduleResolution</code> untuk system modulnya. Terdapat juga <code>outDir</code> untuk compilenya kemana. Terdapat juga <code>sourceMap</code> untuk mapping hasil compile ke sourcecode aslinya.</li>\n<li>node_module. Folder ini merupakan repository local yang berisi dependency yang telah didownload.</li>\n<li>index.html. File ini merupaka html indexnya. Angular2 ini menggenerate Single Page Aplication. Jadi file html cuma 1 dan yang lainya JS.</li>\n<li>main.ts. File ini merupaka main class nya.</li>\n<li>style.css. File css untuk global.</li>\n<li>app. Folder yang berisi sourcecode. Di folder ini terdapat beberapa file yaitu <code>.css</code> untuk cssnya, <code>.html</code> untuk templatenya, <code>.spec.ts</code> untuk testing, <code>.ts</code> untuk konfigurasi template dan ts, <code>module.ts</code> untuk modulenya (kalo di java seperti package).</li>\n</ul>\n<h2 id=\"Running-Project\"><a href=\"#Running-Project\" class=\"headerlink\" title=\"Running Project\"></a>Running Project</h2><p>Untuk running project dapat gunakan code berikut pada terminal<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">cd NAMA_PROJECT</div><div class=\"line\">ng serve</div></pre></td></tr></table></figure></p>\n<p>Hasilnya dapat anda lihat di browser pada <code>localhost:4200</code>.</p>\n<h2 id=\"Build-Project\"><a href=\"#Build-Project\" class=\"headerlink\" title=\"Build Project\"></a>Build Project</h2><p>Untuk running project dapat gunakan code berikut pada terminal<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">cd NAMA_PROJECT</div><div class=\"line\">ng serve</div></pre></td></tr></table></figure></p>\n<p>Hasilnya dapat anda lihat pada folder dist</p>\n<h2 id=\"Flow-Angular2\"><a href=\"#Flow-Angular2\" class=\"headerlink\" title=\"Flow Angular2\"></a>Flow Angular2</h2><ol>\n<li>main.ts akan dijalankan pertama kali. Di main.ts sendiri dia mengimport app.module.ts melalui koding <code>import { AppModule } from &#39;./app/app.module&#39;;</code>. Selain itu main.ts juga membootrap app.module.ts melalui koding <code>platformBrowserDynamic().bootstrapModule(AppModule);</code></li>\n<li>Selanjutnya app.module.ts. Di app.module.ts dia terdapat <code>declaration</code> yang berisi kelas-kelas apa saja yang ada di modul ini. Selanjutnya ada <code>import</code> yang berisi kelas-kelas apa saja yang diimport. Selanjutnya ada <code>bootstrap</code> yang digunakan untuk menjalankan file (yaitu AppComponent).</li>\n<li>Selanjutnya app.component.ts. Di app.component.ts terdapat <code>selector</code> yang digunakan untuk tag pada html. Jadi dia akan mencari tag di html (yaitu app-root), apabila ada maka dia akan menginjectkan templatenya ke dalam tag tersebut. Templatenya sendiri berasa dari <code>templateUrl</code>.</li>\n<li>Selanjutnya app.component.html. Di app.component.html apabila ada variabel maka dia akan mengambilnya dari app.component.ts bagian export.</li>\n</ol>\n<h2 id=\"Install-Bootstrap\"><a href=\"#Install-Bootstrap\" class=\"headerlink\" title=\"Install Bootstrap\"></a>Install Bootstrap</h2><p>Step ini optional karena untuk css bisa pake framework yang lain atau menginputkan sendiri cssnya. Step ini hanya untuk mempermudah saja.<br>Untuk menginstallnya dapat menggunakan kode<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install ng2-bootstrap bootstrap --save</div></pre></td></tr></table></figure></p>\n<p>Setelah itu includekan bootstrapnya ke file angular-cli.json.<br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">\"styles\": [</div><div class=\"line\">  \"styles.css\",</div><div class=\"line\">  \"../node_modules/bootstrap/dist/css/bootstrap.min.css\"</div><div class=\"line\">],</div></pre></td></tr></table></figure></p>\n<h2 id=\"Arsitektur-Aplikasi-Angular2\"><a href=\"#Arsitektur-Aplikasi-Angular2\" class=\"headerlink\" title=\"Arsitektur Aplikasi Angular2\"></a>Arsitektur Aplikasi Angular2</h2><p>Arsitekturnya kurang lebih seperti berikut<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">Aplikasi</div><div class=\"line\">├── Top Level Component</div><div class=\"line\">│   ├── Module</div><div class=\"line\">│   │   ├── Component</div><div class=\"line\">|   |   |   |── Typescript</div><div class=\"line\">|   |   |   |── HTML</div></pre></td></tr></table></figure></p>\n<p>Penjelasanya adalah setiap aplikasi terdiri dari satu atau lebih Component. Components ini menyusun Kelompok dari Module tertentu. Begitu juga dengan Module yang tersusun dari satu atau lebih Component. Component sendiri dibuat berdasarkan file Typescript dan HTML. Berikut contoh sederhananya:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">Aplikasi Tabungan Emas</div><div class=\"line\">├── Sidebar Component</div><div class=\"line\">│   ├── Informasi Rekening</div><div class=\"line\">│   ├── Transaksi Emas</div><div class=\"line\">│   │   ├── Form</div><div class=\"line\">│   │   ├── Rekap</div><div class=\"line\">├── Navbar Component</div><div class=\"line\">│   ├── Settings</div><div class=\"line\">│   ├── Profile</div><div class=\"line\">│   ├── Help</div></pre></td></tr></table></figure></p>\n"},{"title":"Component dan Module","date":"2017-04-28T03:01:37.000Z","_content":"![](/images/angular.png)\n## Membuat Komponen\nUntuk membuat componen dapat menggunakan perintah sebagai berikut\n```\nng g component NAMA_COMPONENT\n```\nSehingga Struktur foldernya akan menjadi seperti :\n```\napp/\n├── app.component.css\n├── app.component.html\n├── app.component.spec.ts\n├── app.component.ts\n├── app.module.ts\n├── navbar\n│   ├── navbar.component.css\n│   ├── navbar.component.html\n│   ├── navbar.component.spec.ts\n│   └── navbar.component.ts\n└── sidebar\n    ├── sidebar.component.css\n    ├── sidebar.component.html\n    ├── sidebar.component.spec.ts\n    └── sidebar.component.ts\n```\nNavbar dan Sidebar merupakan contoh dari Top Level Component\n\n## Membuat Module\nUntuk membuat module dapat menggunakan\n```\nng g module NAMA_MODULE\n```\nSetelah itu struktur foldernya akan seperti berikut\n```\napp/\n├── app.component.css\n├── app.component.html\n├── app.component.spec.ts\n├── app.component.ts\n├── app.module.ts\n├── navbar\n│   ├── navbar.component.css\n│   ├── navbar.component.html\n│   ├── navbar.component.spec.ts\n│   └── navbar.component.ts\n├── sidebar\n│   ├── sidebar.component.css\n│   ├── sidebar.component.html\n│   ├── sidebar.component.spec.ts\n│   └── sidebar.component.ts\n└── transaksi\n    └── transaksi.module.ts\n```\nTransaksi merupakan contoh module. Kemudian kita buat beberapa component di dalamnya sehingga sebagai berikut\n```\napp/\n├── app.component.css\n├── app.component.html\n├── app.component.spec.ts\n├── app.component.ts\n├── app.module.ts\n├── navbar\n│   ├── navbar.component.css\n│   ├── navbar.component.html\n│   ├── navbar.component.spec.ts\n│   └── navbar.component.ts\n├── sidebar\n│   ├── sidebar.component.css\n│   ├── sidebar.component.html\n│   ├── sidebar.component.spec.ts\n│   └── sidebar.component.ts\n└── transaksi\n    ├── beli\n    │   ├── beli.component.css\n    │   ├── beli.component.html\n    │   ├── beli.component.spec.ts\n    │   └── beli.component.ts\n    ├── jual\n    │   ├── jual.component.css\n    │   ├── jual.component.html\n    │   ├── jual.component.spec.ts\n    │   └── jual.component.ts\n    ├── rekap\n    │   ├── rekap.component.css\n    │   ├── rekap.component.html\n    │   ├── rekap.component.spec.ts\n    │   └── rekap.component.ts\n    └── transaksi.module.ts\n```\nBeli, jual dan rekap merupakan contoh component dari module transaksi\n","source":"_posts/pemrograman/angular2/2-Component-dan-Module.md","raw":"---\ntitle: Component dan Module\ndate: 2017-04-28 10:01:37\ncategories:\n  - Pemrograman\n  - Angular\n---\n![](/images/angular.png)\n## Membuat Komponen\nUntuk membuat componen dapat menggunakan perintah sebagai berikut\n```\nng g component NAMA_COMPONENT\n```\nSehingga Struktur foldernya akan menjadi seperti :\n```\napp/\n├── app.component.css\n├── app.component.html\n├── app.component.spec.ts\n├── app.component.ts\n├── app.module.ts\n├── navbar\n│   ├── navbar.component.css\n│   ├── navbar.component.html\n│   ├── navbar.component.spec.ts\n│   └── navbar.component.ts\n└── sidebar\n    ├── sidebar.component.css\n    ├── sidebar.component.html\n    ├── sidebar.component.spec.ts\n    └── sidebar.component.ts\n```\nNavbar dan Sidebar merupakan contoh dari Top Level Component\n\n## Membuat Module\nUntuk membuat module dapat menggunakan\n```\nng g module NAMA_MODULE\n```\nSetelah itu struktur foldernya akan seperti berikut\n```\napp/\n├── app.component.css\n├── app.component.html\n├── app.component.spec.ts\n├── app.component.ts\n├── app.module.ts\n├── navbar\n│   ├── navbar.component.css\n│   ├── navbar.component.html\n│   ├── navbar.component.spec.ts\n│   └── navbar.component.ts\n├── sidebar\n│   ├── sidebar.component.css\n│   ├── sidebar.component.html\n│   ├── sidebar.component.spec.ts\n│   └── sidebar.component.ts\n└── transaksi\n    └── transaksi.module.ts\n```\nTransaksi merupakan contoh module. Kemudian kita buat beberapa component di dalamnya sehingga sebagai berikut\n```\napp/\n├── app.component.css\n├── app.component.html\n├── app.component.spec.ts\n├── app.component.ts\n├── app.module.ts\n├── navbar\n│   ├── navbar.component.css\n│   ├── navbar.component.html\n│   ├── navbar.component.spec.ts\n│   └── navbar.component.ts\n├── sidebar\n│   ├── sidebar.component.css\n│   ├── sidebar.component.html\n│   ├── sidebar.component.spec.ts\n│   └── sidebar.component.ts\n└── transaksi\n    ├── beli\n    │   ├── beli.component.css\n    │   ├── beli.component.html\n    │   ├── beli.component.spec.ts\n    │   └── beli.component.ts\n    ├── jual\n    │   ├── jual.component.css\n    │   ├── jual.component.html\n    │   ├── jual.component.spec.ts\n    │   └── jual.component.ts\n    ├── rekap\n    │   ├── rekap.component.css\n    │   ├── rekap.component.html\n    │   ├── rekap.component.spec.ts\n    │   └── rekap.component.ts\n    └── transaksi.module.ts\n```\nBeli, jual dan rekap merupakan contoh component dari module transaksi\n","slug":"pemrograman/angular2/2-Component-dan-Module","published":1,"updated":"2017-05-07T09:22:07.294Z","_id":"cj2ed41mw000o8jlpqmivxbzr","comments":1,"layout":"post","photos":[],"link":"","content":"<p><img src=\"/images/angular.png\" alt=\"\"></p>\n<h2 id=\"Membuat-Komponen\"><a href=\"#Membuat-Komponen\" class=\"headerlink\" title=\"Membuat Komponen\"></a>Membuat Komponen</h2><p>Untuk membuat componen dapat menggunakan perintah sebagai berikut<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">ng g component NAMA_COMPONENT</div></pre></td></tr></table></figure></p>\n<p>Sehingga Struktur foldernya akan menjadi seperti :<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\">app/</div><div class=\"line\">├── app.component.css</div><div class=\"line\">├── app.component.html</div><div class=\"line\">├── app.component.spec.ts</div><div class=\"line\">├── app.component.ts</div><div class=\"line\">├── app.module.ts</div><div class=\"line\">├── navbar</div><div class=\"line\">│   ├── navbar.component.css</div><div class=\"line\">│   ├── navbar.component.html</div><div class=\"line\">│   ├── navbar.component.spec.ts</div><div class=\"line\">│   └── navbar.component.ts</div><div class=\"line\">└── sidebar</div><div class=\"line\">    ├── sidebar.component.css</div><div class=\"line\">    ├── sidebar.component.html</div><div class=\"line\">    ├── sidebar.component.spec.ts</div><div class=\"line\">    └── sidebar.component.ts</div></pre></td></tr></table></figure></p>\n<p>Navbar dan Sidebar merupakan contoh dari Top Level Component</p>\n<h2 id=\"Membuat-Module\"><a href=\"#Membuat-Module\" class=\"headerlink\" title=\"Membuat Module\"></a>Membuat Module</h2><p>Untuk membuat module dapat menggunakan<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">ng g module NAMA_MODULE</div></pre></td></tr></table></figure></p>\n<p>Setelah itu struktur foldernya akan seperti berikut<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\">app/</div><div class=\"line\">├── app.component.css</div><div class=\"line\">├── app.component.html</div><div class=\"line\">├── app.component.spec.ts</div><div class=\"line\">├── app.component.ts</div><div class=\"line\">├── app.module.ts</div><div class=\"line\">├── navbar</div><div class=\"line\">│   ├── navbar.component.css</div><div class=\"line\">│   ├── navbar.component.html</div><div class=\"line\">│   ├── navbar.component.spec.ts</div><div class=\"line\">│   └── navbar.component.ts</div><div class=\"line\">├── sidebar</div><div class=\"line\">│   ├── sidebar.component.css</div><div class=\"line\">│   ├── sidebar.component.html</div><div class=\"line\">│   ├── sidebar.component.spec.ts</div><div class=\"line\">│   └── sidebar.component.ts</div><div class=\"line\">└── transaksi</div><div class=\"line\">    └── transaksi.module.ts</div></pre></td></tr></table></figure></p>\n<p>Transaksi merupakan contoh module. Kemudian kita buat beberapa component di dalamnya sehingga sebagai berikut<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div></pre></td><td class=\"code\"><pre><div class=\"line\">app/</div><div class=\"line\">├── app.component.css</div><div class=\"line\">├── app.component.html</div><div class=\"line\">├── app.component.spec.ts</div><div class=\"line\">├── app.component.ts</div><div class=\"line\">├── app.module.ts</div><div class=\"line\">├── navbar</div><div class=\"line\">│   ├── navbar.component.css</div><div class=\"line\">│   ├── navbar.component.html</div><div class=\"line\">│   ├── navbar.component.spec.ts</div><div class=\"line\">│   └── navbar.component.ts</div><div class=\"line\">├── sidebar</div><div class=\"line\">│   ├── sidebar.component.css</div><div class=\"line\">│   ├── sidebar.component.html</div><div class=\"line\">│   ├── sidebar.component.spec.ts</div><div class=\"line\">│   └── sidebar.component.ts</div><div class=\"line\">└── transaksi</div><div class=\"line\">    ├── beli</div><div class=\"line\">    │   ├── beli.component.css</div><div class=\"line\">    │   ├── beli.component.html</div><div class=\"line\">    │   ├── beli.component.spec.ts</div><div class=\"line\">    │   └── beli.component.ts</div><div class=\"line\">    ├── jual</div><div class=\"line\">    │   ├── jual.component.css</div><div class=\"line\">    │   ├── jual.component.html</div><div class=\"line\">    │   ├── jual.component.spec.ts</div><div class=\"line\">    │   └── jual.component.ts</div><div class=\"line\">    ├── rekap</div><div class=\"line\">    │   ├── rekap.component.css</div><div class=\"line\">    │   ├── rekap.component.html</div><div class=\"line\">    │   ├── rekap.component.spec.ts</div><div class=\"line\">    │   └── rekap.component.ts</div><div class=\"line\">    └── transaksi.module.ts</div></pre></td></tr></table></figure></p>\n<p>Beli, jual dan rekap merupakan contoh component dari module transaksi</p>\n","excerpt":"","more":"<p><img src=\"/images/angular.png\" alt=\"\"></p>\n<h2 id=\"Membuat-Komponen\"><a href=\"#Membuat-Komponen\" class=\"headerlink\" title=\"Membuat Komponen\"></a>Membuat Komponen</h2><p>Untuk membuat componen dapat menggunakan perintah sebagai berikut<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">ng g component NAMA_COMPONENT</div></pre></td></tr></table></figure></p>\n<p>Sehingga Struktur foldernya akan menjadi seperti :<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\">app/</div><div class=\"line\">├── app.component.css</div><div class=\"line\">├── app.component.html</div><div class=\"line\">├── app.component.spec.ts</div><div class=\"line\">├── app.component.ts</div><div class=\"line\">├── app.module.ts</div><div class=\"line\">├── navbar</div><div class=\"line\">│   ├── navbar.component.css</div><div class=\"line\">│   ├── navbar.component.html</div><div class=\"line\">│   ├── navbar.component.spec.ts</div><div class=\"line\">│   └── navbar.component.ts</div><div class=\"line\">└── sidebar</div><div class=\"line\">    ├── sidebar.component.css</div><div class=\"line\">    ├── sidebar.component.html</div><div class=\"line\">    ├── sidebar.component.spec.ts</div><div class=\"line\">    └── sidebar.component.ts</div></pre></td></tr></table></figure></p>\n<p>Navbar dan Sidebar merupakan contoh dari Top Level Component</p>\n<h2 id=\"Membuat-Module\"><a href=\"#Membuat-Module\" class=\"headerlink\" title=\"Membuat Module\"></a>Membuat Module</h2><p>Untuk membuat module dapat menggunakan<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">ng g module NAMA_MODULE</div></pre></td></tr></table></figure></p>\n<p>Setelah itu struktur foldernya akan seperti berikut<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\">app/</div><div class=\"line\">├── app.component.css</div><div class=\"line\">├── app.component.html</div><div class=\"line\">├── app.component.spec.ts</div><div class=\"line\">├── app.component.ts</div><div class=\"line\">├── app.module.ts</div><div class=\"line\">├── navbar</div><div class=\"line\">│   ├── navbar.component.css</div><div class=\"line\">│   ├── navbar.component.html</div><div class=\"line\">│   ├── navbar.component.spec.ts</div><div class=\"line\">│   └── navbar.component.ts</div><div class=\"line\">├── sidebar</div><div class=\"line\">│   ├── sidebar.component.css</div><div class=\"line\">│   ├── sidebar.component.html</div><div class=\"line\">│   ├── sidebar.component.spec.ts</div><div class=\"line\">│   └── sidebar.component.ts</div><div class=\"line\">└── transaksi</div><div class=\"line\">    └── transaksi.module.ts</div></pre></td></tr></table></figure></p>\n<p>Transaksi merupakan contoh module. Kemudian kita buat beberapa component di dalamnya sehingga sebagai berikut<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div></pre></td><td class=\"code\"><pre><div class=\"line\">app/</div><div class=\"line\">├── app.component.css</div><div class=\"line\">├── app.component.html</div><div class=\"line\">├── app.component.spec.ts</div><div class=\"line\">├── app.component.ts</div><div class=\"line\">├── app.module.ts</div><div class=\"line\">├── navbar</div><div class=\"line\">│   ├── navbar.component.css</div><div class=\"line\">│   ├── navbar.component.html</div><div class=\"line\">│   ├── navbar.component.spec.ts</div><div class=\"line\">│   └── navbar.component.ts</div><div class=\"line\">├── sidebar</div><div class=\"line\">│   ├── sidebar.component.css</div><div class=\"line\">│   ├── sidebar.component.html</div><div class=\"line\">│   ├── sidebar.component.spec.ts</div><div class=\"line\">│   └── sidebar.component.ts</div><div class=\"line\">└── transaksi</div><div class=\"line\">    ├── beli</div><div class=\"line\">    │   ├── beli.component.css</div><div class=\"line\">    │   ├── beli.component.html</div><div class=\"line\">    │   ├── beli.component.spec.ts</div><div class=\"line\">    │   └── beli.component.ts</div><div class=\"line\">    ├── jual</div><div class=\"line\">    │   ├── jual.component.css</div><div class=\"line\">    │   ├── jual.component.html</div><div class=\"line\">    │   ├── jual.component.spec.ts</div><div class=\"line\">    │   └── jual.component.ts</div><div class=\"line\">    ├── rekap</div><div class=\"line\">    │   ├── rekap.component.css</div><div class=\"line\">    │   ├── rekap.component.html</div><div class=\"line\">    │   ├── rekap.component.spec.ts</div><div class=\"line\">    │   └── rekap.component.ts</div><div class=\"line\">    └── transaksi.module.ts</div></pre></td></tr></table></figure></p>\n<p>Beli, jual dan rekap merupakan contoh component dari module transaksi</p>\n"},{"title":"Routing Component","date":"2017-04-28T03:01:38.000Z","_content":"![](/images/angular.png)\n## Routing Top Level Component\n1. Sebelum melakukan routing kita akan buat terlebih dahulu top level componentnya yaitu about dan welcome. Struktur foldernya akan menjadi seperti ini\n```\nsrc/app/\n├── about\n│   ├── about.component.css\n│   ├── about.component.html\n│   ├── about.component.spec.ts\n│   └── about.component.ts\n├── app.component.css\n├── app.component.html\n├── app.component.spec.ts\n├── app.component.ts\n├── app.module.ts\n├── navbar\n│   ├── navbar.component.css\n│   ├── navbar.component.html\n│   ├── navbar.component.spec.ts\n│   └── navbar.component.ts\n├── sidebar\n│   ├── sidebar.component.css\n│   ├── sidebar.component.html\n│   ├── sidebar.component.spec.ts\n│   └── sidebar.component.ts\n├── transaksi\n│   ├── beli\n│   │   ├── beli.component.css\n│   │   ├── beli.component.html\n│   │   ├── beli.component.spec.ts\n│   │   └── beli.component.ts\n│   ├── jual\n│   │   ├── jual.component.css\n│   │   ├── jual.component.html\n│   │   ├── jual.component.spec.ts\n│   │   └── jual.component.ts\n│   ├── rekap\n│   │   ├── rekap.component.css\n│   │   ├── rekap.component.html\n│   │   ├── rekap.component.spec.ts\n│   │   └── rekap.component.ts\n│   └── transaksi.module.ts\n└── welcome\n    ├── welcome.component.css\n    ├── welcome.component.html\n    ├── welcome.component.spec.ts\n    └── welcome.component.ts\n```\n\n2. Selanjunya import router module (app.module.ts)\n```ts\nimport { RouterModule, Routes } from '@angular/router';\n```\n\n3. Selanjutnya routing tiap module (app.module.ts)\n```\nconst routingAplikasi: Routes = [\n  { path: \"about\", component: AboutComponent },\n  { path: \"**\", component: WelcomeComponent }\n]\n```\n4. Inisialisasi router (app.module.ts)\n```\n@NgModule({\n  ....\n  imports: [\n    ....\n    RouterModule.forRoot(routingAplikasi)\n  ],\n  ...\n})\n```\n5. mapping router ke html\n(navbar.component.html)\n```html\n<li><a routerLink=\"about\">Informasi</a></li>\n```\n(sidebar.component.html)\n```html\n<li class=\"active\"><a routerLink=\"welcome\">Dashboard <span class=\"sr-only\">(current)</span></a></li>\n```\n6. Menambahkan router outlet yaitu tempat keluarnya konten sehabis di routing.\n(app.component.html)\n```html\n<app-navbar></app-navbar>\n<div class=\"container-fluid\">\n  <div class=\"row\">\n    <app-sidebar></app-sidebar>\n    <div class=\"col-sm-9 col-sm-offset-3 col-md-10 col-md-offset-2 main\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n```\n\n\n## Routing module\n\n- import routing (transaksi.module.ts)\n```ts\nimport { RouterModule, Routes } from '@angular/router';\n```\n- buat Routes beserta path\n```ts\nconst routingTransaksi : Routes[\n  { path: \"/transaksi/beli\", componen:  }\n]\n```\n- import Routes\n\napp module ts\n- tambah path untuk routing module\n","source":"_posts/pemrograman/angular2/3-Routing-Component.md","raw":"---\ntitle: Routing Component\ndate: 2017-04-28 10:01:38\ncategories:\n  - Pemrograman\n  - Angular\n---\n![](/images/angular.png)\n## Routing Top Level Component\n1. Sebelum melakukan routing kita akan buat terlebih dahulu top level componentnya yaitu about dan welcome. Struktur foldernya akan menjadi seperti ini\n```\nsrc/app/\n├── about\n│   ├── about.component.css\n│   ├── about.component.html\n│   ├── about.component.spec.ts\n│   └── about.component.ts\n├── app.component.css\n├── app.component.html\n├── app.component.spec.ts\n├── app.component.ts\n├── app.module.ts\n├── navbar\n│   ├── navbar.component.css\n│   ├── navbar.component.html\n│   ├── navbar.component.spec.ts\n│   └── navbar.component.ts\n├── sidebar\n│   ├── sidebar.component.css\n│   ├── sidebar.component.html\n│   ├── sidebar.component.spec.ts\n│   └── sidebar.component.ts\n├── transaksi\n│   ├── beli\n│   │   ├── beli.component.css\n│   │   ├── beli.component.html\n│   │   ├── beli.component.spec.ts\n│   │   └── beli.component.ts\n│   ├── jual\n│   │   ├── jual.component.css\n│   │   ├── jual.component.html\n│   │   ├── jual.component.spec.ts\n│   │   └── jual.component.ts\n│   ├── rekap\n│   │   ├── rekap.component.css\n│   │   ├── rekap.component.html\n│   │   ├── rekap.component.spec.ts\n│   │   └── rekap.component.ts\n│   └── transaksi.module.ts\n└── welcome\n    ├── welcome.component.css\n    ├── welcome.component.html\n    ├── welcome.component.spec.ts\n    └── welcome.component.ts\n```\n\n2. Selanjunya import router module (app.module.ts)\n```ts\nimport { RouterModule, Routes } from '@angular/router';\n```\n\n3. Selanjutnya routing tiap module (app.module.ts)\n```\nconst routingAplikasi: Routes = [\n  { path: \"about\", component: AboutComponent },\n  { path: \"**\", component: WelcomeComponent }\n]\n```\n4. Inisialisasi router (app.module.ts)\n```\n@NgModule({\n  ....\n  imports: [\n    ....\n    RouterModule.forRoot(routingAplikasi)\n  ],\n  ...\n})\n```\n5. mapping router ke html\n(navbar.component.html)\n```html\n<li><a routerLink=\"about\">Informasi</a></li>\n```\n(sidebar.component.html)\n```html\n<li class=\"active\"><a routerLink=\"welcome\">Dashboard <span class=\"sr-only\">(current)</span></a></li>\n```\n6. Menambahkan router outlet yaitu tempat keluarnya konten sehabis di routing.\n(app.component.html)\n```html\n<app-navbar></app-navbar>\n<div class=\"container-fluid\">\n  <div class=\"row\">\n    <app-sidebar></app-sidebar>\n    <div class=\"col-sm-9 col-sm-offset-3 col-md-10 col-md-offset-2 main\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n```\n\n\n## Routing module\n\n- import routing (transaksi.module.ts)\n```ts\nimport { RouterModule, Routes } from '@angular/router';\n```\n- buat Routes beserta path\n```ts\nconst routingTransaksi : Routes[\n  { path: \"/transaksi/beli\", componen:  }\n]\n```\n- import Routes\n\napp module ts\n- tambah path untuk routing module\n","slug":"pemrograman/angular2/3-Routing-Component","published":1,"updated":"2017-05-07T09:22:10.598Z","_id":"cj2ed41n1000q8jlp2tm4f24r","comments":1,"layout":"post","photos":[],"link":"","content":"<p><img src=\"/images/angular.png\" alt=\"\"></p>\n<h2 id=\"Routing-Top-Level-Component\"><a href=\"#Routing-Top-Level-Component\" class=\"headerlink\" title=\"Routing Top Level Component\"></a>Routing Top Level Component</h2><ol>\n<li><p>Sebelum melakukan routing kita akan buat terlebih dahulu top level componentnya yaitu about dan welcome. Struktur foldernya akan menjadi seperti ini</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div></pre></td><td class=\"code\"><pre><div class=\"line\">src/app/</div><div class=\"line\">├── about</div><div class=\"line\">│   ├── about.component.css</div><div class=\"line\">│   ├── about.component.html</div><div class=\"line\">│   ├── about.component.spec.ts</div><div class=\"line\">│   └── about.component.ts</div><div class=\"line\">├── app.component.css</div><div class=\"line\">├── app.component.html</div><div class=\"line\">├── app.component.spec.ts</div><div class=\"line\">├── app.component.ts</div><div class=\"line\">├── app.module.ts</div><div class=\"line\">├── navbar</div><div class=\"line\">│   ├── navbar.component.css</div><div class=\"line\">│   ├── navbar.component.html</div><div class=\"line\">│   ├── navbar.component.spec.ts</div><div class=\"line\">│   └── navbar.component.ts</div><div class=\"line\">├── sidebar</div><div class=\"line\">│   ├── sidebar.component.css</div><div class=\"line\">│   ├── sidebar.component.html</div><div class=\"line\">│   ├── sidebar.component.spec.ts</div><div class=\"line\">│   └── sidebar.component.ts</div><div class=\"line\">├── transaksi</div><div class=\"line\">│   ├── beli</div><div class=\"line\">│   │   ├── beli.component.css</div><div class=\"line\">│   │   ├── beli.component.html</div><div class=\"line\">│   │   ├── beli.component.spec.ts</div><div class=\"line\">│   │   └── beli.component.ts</div><div class=\"line\">│   ├── jual</div><div class=\"line\">│   │   ├── jual.component.css</div><div class=\"line\">│   │   ├── jual.component.html</div><div class=\"line\">│   │   ├── jual.component.spec.ts</div><div class=\"line\">│   │   └── jual.component.ts</div><div class=\"line\">│   ├── rekap</div><div class=\"line\">│   │   ├── rekap.component.css</div><div class=\"line\">│   │   ├── rekap.component.html</div><div class=\"line\">│   │   ├── rekap.component.spec.ts</div><div class=\"line\">│   │   └── rekap.component.ts</div><div class=\"line\">│   └── transaksi.module.ts</div><div class=\"line\">└── welcome</div><div class=\"line\">    ├── welcome.component.css</div><div class=\"line\">    ├── welcome.component.html</div><div class=\"line\">    ├── welcome.component.spec.ts</div><div class=\"line\">    └── welcome.component.ts</div></pre></td></tr></table></figure>\n</li>\n<li><p>Selanjunya import router module (app.module.ts)</p>\n<figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> &#123; RouterModule, Routes &#125; <span class=\"keyword\">from</span> <span class=\"string\">'@angular/router'</span>;</div></pre></td></tr></table></figure>\n</li>\n<li><p>Selanjutnya routing tiap module (app.module.ts)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">const routingAplikasi: Routes = [</div><div class=\"line\">  &#123; path: &quot;about&quot;, component: AboutComponent &#125;,</div><div class=\"line\">  &#123; path: &quot;**&quot;, component: WelcomeComponent &#125;</div><div class=\"line\">]</div></pre></td></tr></table></figure>\n</li>\n<li><p>Inisialisasi router (app.module.ts)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">@NgModule(&#123;</div><div class=\"line\">  ....</div><div class=\"line\">  imports: [</div><div class=\"line\">    ....</div><div class=\"line\">    RouterModule.forRoot(routingAplikasi)</div><div class=\"line\">  ],</div><div class=\"line\">  ...</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n</li>\n<li><p>mapping router ke html<br>(navbar.component.html)</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">routerLink</span>=<span class=\"string\">\"about\"</span>&gt;</span>Informasi<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></div></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>(sidebar.component.html)<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">\"active\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">routerLink</span>=<span class=\"string\">\"welcome\"</span>&gt;</span>Dashboard <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"sr-only\"</span>&gt;</span>(current)<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<ol>\n<li>Menambahkan router outlet yaitu tempat keluarnya konten sehabis di routing.<br>(app.component.html)<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">app-navbar</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">app-navbar</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"container-fluid\"</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"row\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">app-sidebar</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">app-sidebar</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"col-sm-9 col-sm-offset-3 col-md-10 col-md-offset-2 main\"</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">router-outlet</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">router-outlet</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div></pre></td></tr></table></figure>\n</li>\n</ol>\n<h2 id=\"Routing-module\"><a href=\"#Routing-module\" class=\"headerlink\" title=\"Routing module\"></a>Routing module</h2><ul>\n<li><p>import routing (transaksi.module.ts)</p>\n<figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> &#123; RouterModule, Routes &#125; <span class=\"keyword\">from</span> <span class=\"string\">'@angular/router'</span>;</div></pre></td></tr></table></figure>\n</li>\n<li><p>buat Routes beserta path</p>\n<figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">const</span> routingTransaksi : Routes[</div><div class=\"line\">  &#123; path: <span class=\"string\">\"/transaksi/beli\"</span>, componen:  &#125;</div><div class=\"line\">]</div></pre></td></tr></table></figure>\n</li>\n<li><p>import Routes</p>\n</li>\n</ul>\n<p>app module ts</p>\n<ul>\n<li>tambah path untuk routing module</li>\n</ul>\n","excerpt":"","more":"<p><img src=\"/images/angular.png\" alt=\"\"></p>\n<h2 id=\"Routing-Top-Level-Component\"><a href=\"#Routing-Top-Level-Component\" class=\"headerlink\" title=\"Routing Top Level Component\"></a>Routing Top Level Component</h2><ol>\n<li><p>Sebelum melakukan routing kita akan buat terlebih dahulu top level componentnya yaitu about dan welcome. Struktur foldernya akan menjadi seperti ini</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div></pre></td><td class=\"code\"><pre><div class=\"line\">src/app/</div><div class=\"line\">├── about</div><div class=\"line\">│   ├── about.component.css</div><div class=\"line\">│   ├── about.component.html</div><div class=\"line\">│   ├── about.component.spec.ts</div><div class=\"line\">│   └── about.component.ts</div><div class=\"line\">├── app.component.css</div><div class=\"line\">├── app.component.html</div><div class=\"line\">├── app.component.spec.ts</div><div class=\"line\">├── app.component.ts</div><div class=\"line\">├── app.module.ts</div><div class=\"line\">├── navbar</div><div class=\"line\">│   ├── navbar.component.css</div><div class=\"line\">│   ├── navbar.component.html</div><div class=\"line\">│   ├── navbar.component.spec.ts</div><div class=\"line\">│   └── navbar.component.ts</div><div class=\"line\">├── sidebar</div><div class=\"line\">│   ├── sidebar.component.css</div><div class=\"line\">│   ├── sidebar.component.html</div><div class=\"line\">│   ├── sidebar.component.spec.ts</div><div class=\"line\">│   └── sidebar.component.ts</div><div class=\"line\">├── transaksi</div><div class=\"line\">│   ├── beli</div><div class=\"line\">│   │   ├── beli.component.css</div><div class=\"line\">│   │   ├── beli.component.html</div><div class=\"line\">│   │   ├── beli.component.spec.ts</div><div class=\"line\">│   │   └── beli.component.ts</div><div class=\"line\">│   ├── jual</div><div class=\"line\">│   │   ├── jual.component.css</div><div class=\"line\">│   │   ├── jual.component.html</div><div class=\"line\">│   │   ├── jual.component.spec.ts</div><div class=\"line\">│   │   └── jual.component.ts</div><div class=\"line\">│   ├── rekap</div><div class=\"line\">│   │   ├── rekap.component.css</div><div class=\"line\">│   │   ├── rekap.component.html</div><div class=\"line\">│   │   ├── rekap.component.spec.ts</div><div class=\"line\">│   │   └── rekap.component.ts</div><div class=\"line\">│   └── transaksi.module.ts</div><div class=\"line\">└── welcome</div><div class=\"line\">    ├── welcome.component.css</div><div class=\"line\">    ├── welcome.component.html</div><div class=\"line\">    ├── welcome.component.spec.ts</div><div class=\"line\">    └── welcome.component.ts</div></pre></td></tr></table></figure>\n</li>\n<li><p>Selanjunya import router module (app.module.ts)</p>\n<figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> &#123; RouterModule, Routes &#125; <span class=\"keyword\">from</span> <span class=\"string\">'@angular/router'</span>;</div></pre></td></tr></table></figure>\n</li>\n<li><p>Selanjutnya routing tiap module (app.module.ts)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">const routingAplikasi: Routes = [</div><div class=\"line\">  &#123; path: &quot;about&quot;, component: AboutComponent &#125;,</div><div class=\"line\">  &#123; path: &quot;**&quot;, component: WelcomeComponent &#125;</div><div class=\"line\">]</div></pre></td></tr></table></figure>\n</li>\n<li><p>Inisialisasi router (app.module.ts)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">@NgModule(&#123;</div><div class=\"line\">  ....</div><div class=\"line\">  imports: [</div><div class=\"line\">    ....</div><div class=\"line\">    RouterModule.forRoot(routingAplikasi)</div><div class=\"line\">  ],</div><div class=\"line\">  ...</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n</li>\n<li><p>mapping router ke html<br>(navbar.component.html)</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">routerLink</span>=<span class=\"string\">\"about\"</span>&gt;</span>Informasi<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></div></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>(sidebar.component.html)<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">\"active\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">routerLink</span>=<span class=\"string\">\"welcome\"</span>&gt;</span>Dashboard <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"sr-only\"</span>&gt;</span>(current)<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<ol>\n<li>Menambahkan router outlet yaitu tempat keluarnya konten sehabis di routing.<br>(app.component.html)<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">app-navbar</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">app-navbar</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"container-fluid\"</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"row\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">app-sidebar</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">app-sidebar</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"col-sm-9 col-sm-offset-3 col-md-10 col-md-offset-2 main\"</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">router-outlet</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">router-outlet</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div></pre></td></tr></table></figure>\n</li>\n</ol>\n<h2 id=\"Routing-module\"><a href=\"#Routing-module\" class=\"headerlink\" title=\"Routing module\"></a>Routing module</h2><ul>\n<li><p>import routing (transaksi.module.ts)</p>\n<figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> &#123; RouterModule, Routes &#125; <span class=\"keyword\">from</span> <span class=\"string\">'@angular/router'</span>;</div></pre></td></tr></table></figure>\n</li>\n<li><p>buat Routes beserta path</p>\n<figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">const</span> routingTransaksi : Routes[</div><div class=\"line\">  &#123; path: <span class=\"string\">\"/transaksi/beli\"</span>, componen:  &#125;</div><div class=\"line\">]</div></pre></td></tr></table></figure>\n</li>\n<li><p>import Routes</p>\n</li>\n</ul>\n<p>app module ts</p>\n<ul>\n<li>tambah path untuk routing module</li>\n</ul>\n"},{"title":"Introduction to Hexo","date":"2017-05-07T05:44:17.000Z","sticky":true,"_content":"![](/images/hexo.png)\n# Sekilas tentang Hexo\n\n[Hexo](http://hexo.io/) merupakan suatu framework untuk mempermudah dalam Blog. Untuk mengulis konten pada Hexo, dapat menggunakan [markdown](https://en.wikipedia.org/wiki/Markdown) yang kemudian akan dicompile menjadi html. Untuk Layout dan Design dapat menggunkaan [EJS](http://ejs.co/).\n\n# Roadmap Belajar Hexo\n","source":"_posts/pemrograman/hexo/0-Introduction-to-Hexo.md","raw":"---\ntitle: Introduction to Hexo\ndate: 2017-05-07 12:44:17\ncategories:\n  - Pemrograman\n  - Hexo\nsticky: true\n---\n![](/images/hexo.png)\n# Sekilas tentang Hexo\n\n[Hexo](http://hexo.io/) merupakan suatu framework untuk mempermudah dalam Blog. Untuk mengulis konten pada Hexo, dapat menggunakan [markdown](https://en.wikipedia.org/wiki/Markdown) yang kemudian akan dicompile menjadi html. Untuk Layout dan Design dapat menggunkaan [EJS](http://ejs.co/).\n\n# Roadmap Belajar Hexo\n","slug":"pemrograman/hexo/0-Introduction-to-Hexo","published":1,"updated":"2017-05-07T05:53:04.238Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj2ed41n7000u8jlpfm7p6z46","content":"<p><img src=\"/images/hexo.png\" alt=\"\"></p>\n<h1 id=\"Sekilas-tentang-Hexo\"><a href=\"#Sekilas-tentang-Hexo\" class=\"headerlink\" title=\"Sekilas tentang Hexo\"></a>Sekilas tentang Hexo</h1><p><a href=\"http://hexo.io/\" target=\"_blank\" rel=\"external\">Hexo</a> merupakan suatu framework untuk mempermudah dalam Blog. Untuk mengulis konten pada Hexo, dapat menggunakan <a href=\"https://en.wikipedia.org/wiki/Markdown\" target=\"_blank\" rel=\"external\">markdown</a> yang kemudian akan dicompile menjadi html. Untuk Layout dan Design dapat menggunkaan <a href=\"http://ejs.co/\" target=\"_blank\" rel=\"external\">EJS</a>.</p>\n<h1 id=\"Roadmap-Belajar-Hexo\"><a href=\"#Roadmap-Belajar-Hexo\" class=\"headerlink\" title=\"Roadmap Belajar Hexo\"></a>Roadmap Belajar Hexo</h1>","excerpt":"","more":"<p><img src=\"/images/hexo.png\" alt=\"\"></p>\n<h1 id=\"Sekilas-tentang-Hexo\"><a href=\"#Sekilas-tentang-Hexo\" class=\"headerlink\" title=\"Sekilas tentang Hexo\"></a>Sekilas tentang Hexo</h1><p><a href=\"http://hexo.io/\">Hexo</a> merupakan suatu framework untuk mempermudah dalam Blog. Untuk mengulis konten pada Hexo, dapat menggunakan <a href=\"https://en.wikipedia.org/wiki/Markdown\">markdown</a> yang kemudian akan dicompile menjadi html. Untuk Layout dan Design dapat menggunkaan <a href=\"http://ejs.co/\">EJS</a>.</p>\n<h1 id=\"Roadmap-Belajar-Hexo\"><a href=\"#Roadmap-Belajar-Hexo\" class=\"headerlink\" title=\"Roadmap Belajar Hexo\"></a>Roadmap Belajar Hexo</h1>"},{"title":"Introduction to Spring","date":"2017-04-23T07:17:28.000Z","sticky":true,"_content":"\n![](/images/spring.png)\n# Sekilas tentang Spring Boot\n\n[Spring Boot](http://projects.spring.io/spring-boot/) merupakan suatu framework untuk mempermudah dalam membangun aplikasi spring tanpa harus mengkonfigurasi setiap komponenya. Spring sendiri adalah framework untuk membuat aplikasi berbasis enterprise menggunakan [bahasa-bahasa JVM](https://en.wikipedia.org/wiki/List_of_JVM_languages). Pada Tutorial kali ini kita akan coba membuat aplikasi spring berbasis backend web.\n\n# Roadmap Belajar Spring\n- [Setup Project Spring Boot](https://ciazhar.github.io/2017/04/23/pemrograman/spring/1-setup-project/)\n- [Membuat Web Menggunakan Spring Boot dan Thyeleaf](https://ciazhar.github.io/2017/04/23/pemrograman/spring/2-membuat-web-sederhana-dengan-spring-boot-starter-web-dan-thymeleaf/)\n- [Setup Project Untuk CRUD dengan Spring Data JPA dan MySQL](https://ciazhar.github.io/2017/04/23/pemrograman/spring/3.1-crud-dengan-spring-data-jpa/)\n- [CRUD dengan Content digenerate di Server Side Menggunakan Spring Data JPA dan Thymeleaf](https://ciazhar.github.io/2017/04/23/pemrograman/spring/3.2-generate-content-dari-server-side-dengan-thymeleaf/)\n- [CRUD dengan Content digenerate di Client Side AngularJS](https://ciazhar.github.io/2017/04/23/pemrograman/spring/3.3-generate-content-dari-client-side-dengan-AngularJS/)\n- [Kardinalitas pada Spring Data JPA]()\n- [Konfigurasi yang sering digunakan untuk CRUD pada Spring Data JPA]()\n- [Otoriasai login dengan Spring Security](https://ciazhar.github.io/2017/04/23/pemrograman/spring/4-otorisasi-login-dengan-spring-security/)\n- [Layouting dengan Thymeleaf](https://ciazhar.github.io/2017/04/23/pemrograman/spring/5-layout-dengan-thymeleaf/)\n- [Membuat Report dengan Jasper Report](https://ciazhar.github.io/2017/04/23/pemrograman/spring/6-jasper-report/)\n- [Single Signed On dengan Spring Oauth]()\n- [Full Stack Application]()\n","source":"_posts/pemrograman/spring/0-introduction-to-spring-boot.md","raw":"---\ntitle: Introduction to Spring\ndate: 2017-04-23 14:17:28\ncategories:\n  - Pemrograman\n  - Spring\nsticky: true\n---\n\n![](/images/spring.png)\n# Sekilas tentang Spring Boot\n\n[Spring Boot](http://projects.spring.io/spring-boot/) merupakan suatu framework untuk mempermudah dalam membangun aplikasi spring tanpa harus mengkonfigurasi setiap komponenya. Spring sendiri adalah framework untuk membuat aplikasi berbasis enterprise menggunakan [bahasa-bahasa JVM](https://en.wikipedia.org/wiki/List_of_JVM_languages). Pada Tutorial kali ini kita akan coba membuat aplikasi spring berbasis backend web.\n\n# Roadmap Belajar Spring\n- [Setup Project Spring Boot](https://ciazhar.github.io/2017/04/23/pemrograman/spring/1-setup-project/)\n- [Membuat Web Menggunakan Spring Boot dan Thyeleaf](https://ciazhar.github.io/2017/04/23/pemrograman/spring/2-membuat-web-sederhana-dengan-spring-boot-starter-web-dan-thymeleaf/)\n- [Setup Project Untuk CRUD dengan Spring Data JPA dan MySQL](https://ciazhar.github.io/2017/04/23/pemrograman/spring/3.1-crud-dengan-spring-data-jpa/)\n- [CRUD dengan Content digenerate di Server Side Menggunakan Spring Data JPA dan Thymeleaf](https://ciazhar.github.io/2017/04/23/pemrograman/spring/3.2-generate-content-dari-server-side-dengan-thymeleaf/)\n- [CRUD dengan Content digenerate di Client Side AngularJS](https://ciazhar.github.io/2017/04/23/pemrograman/spring/3.3-generate-content-dari-client-side-dengan-AngularJS/)\n- [Kardinalitas pada Spring Data JPA]()\n- [Konfigurasi yang sering digunakan untuk CRUD pada Spring Data JPA]()\n- [Otoriasai login dengan Spring Security](https://ciazhar.github.io/2017/04/23/pemrograman/spring/4-otorisasi-login-dengan-spring-security/)\n- [Layouting dengan Thymeleaf](https://ciazhar.github.io/2017/04/23/pemrograman/spring/5-layout-dengan-thymeleaf/)\n- [Membuat Report dengan Jasper Report](https://ciazhar.github.io/2017/04/23/pemrograman/spring/6-jasper-report/)\n- [Single Signed On dengan Spring Oauth]()\n- [Full Stack Application]()\n","slug":"pemrograman/spring/0-introduction-to-spring-boot","published":1,"updated":"2017-05-07T09:30:40.613Z","_id":"cj2ed41nf000x8jlphlzgh5a2","comments":1,"layout":"post","photos":[],"link":"","content":"<p><img src=\"/images/spring.png\" alt=\"\"></p>\n<h1 id=\"Sekilas-tentang-Spring-Boot\"><a href=\"#Sekilas-tentang-Spring-Boot\" class=\"headerlink\" title=\"Sekilas tentang Spring Boot\"></a>Sekilas tentang Spring Boot</h1><p><a href=\"http://projects.spring.io/spring-boot/\" target=\"_blank\" rel=\"external\">Spring Boot</a> merupakan suatu framework untuk mempermudah dalam membangun aplikasi spring tanpa harus mengkonfigurasi setiap komponenya. Spring sendiri adalah framework untuk membuat aplikasi berbasis enterprise menggunakan <a href=\"https://en.wikipedia.org/wiki/List_of_JVM_languages\" target=\"_blank\" rel=\"external\">bahasa-bahasa JVM</a>. Pada Tutorial kali ini kita akan coba membuat aplikasi spring berbasis backend web.</p>\n<h1 id=\"Roadmap-Belajar-Spring\"><a href=\"#Roadmap-Belajar-Spring\" class=\"headerlink\" title=\"Roadmap Belajar Spring\"></a>Roadmap Belajar Spring</h1><ul>\n<li><a href=\"https://ciazhar.github.io/2017/04/23/pemrograman/spring/1-setup-project/\">Setup Project Spring Boot</a></li>\n<li><a href=\"https://ciazhar.github.io/2017/04/23/pemrograman/spring/2-membuat-web-sederhana-dengan-spring-boot-starter-web-dan-thymeleaf/\">Membuat Web Menggunakan Spring Boot dan Thyeleaf</a></li>\n<li><a href=\"https://ciazhar.github.io/2017/04/23/pemrograman/spring/3.1-crud-dengan-spring-data-jpa/\">Setup Project Untuk CRUD dengan Spring Data JPA dan MySQL</a></li>\n<li><a href=\"https://ciazhar.github.io/2017/04/23/pemrograman/spring/3.2-generate-content-dari-server-side-dengan-thymeleaf/\">CRUD dengan Content digenerate di Server Side Menggunakan Spring Data JPA dan Thymeleaf</a></li>\n<li><a href=\"https://ciazhar.github.io/2017/04/23/pemrograman/spring/3.3-generate-content-dari-client-side-dengan-AngularJS/\">CRUD dengan Content digenerate di Client Side AngularJS</a></li>\n<li><a href=\"\">Kardinalitas pada Spring Data JPA</a></li>\n<li><a href=\"\">Konfigurasi yang sering digunakan untuk CRUD pada Spring Data JPA</a></li>\n<li><a href=\"https://ciazhar.github.io/2017/04/23/pemrograman/spring/4-otorisasi-login-dengan-spring-security/\">Otoriasai login dengan Spring Security</a></li>\n<li><a href=\"https://ciazhar.github.io/2017/04/23/pemrograman/spring/5-layout-dengan-thymeleaf/\">Layouting dengan Thymeleaf</a></li>\n<li><a href=\"https://ciazhar.github.io/2017/04/23/pemrograman/spring/6-jasper-report/\">Membuat Report dengan Jasper Report</a></li>\n<li><a href=\"\">Single Signed On dengan Spring Oauth</a></li>\n<li><a href=\"\">Full Stack Application</a></li>\n</ul>\n","excerpt":"","more":"<p><img src=\"/images/spring.png\" alt=\"\"></p>\n<h1 id=\"Sekilas-tentang-Spring-Boot\"><a href=\"#Sekilas-tentang-Spring-Boot\" class=\"headerlink\" title=\"Sekilas tentang Spring Boot\"></a>Sekilas tentang Spring Boot</h1><p><a href=\"http://projects.spring.io/spring-boot/\">Spring Boot</a> merupakan suatu framework untuk mempermudah dalam membangun aplikasi spring tanpa harus mengkonfigurasi setiap komponenya. Spring sendiri adalah framework untuk membuat aplikasi berbasis enterprise menggunakan <a href=\"https://en.wikipedia.org/wiki/List_of_JVM_languages\">bahasa-bahasa JVM</a>. Pada Tutorial kali ini kita akan coba membuat aplikasi spring berbasis backend web.</p>\n<h1 id=\"Roadmap-Belajar-Spring\"><a href=\"#Roadmap-Belajar-Spring\" class=\"headerlink\" title=\"Roadmap Belajar Spring\"></a>Roadmap Belajar Spring</h1><ul>\n<li><a href=\"https://ciazhar.github.io/2017/04/23/pemrograman/spring/1-setup-project/\">Setup Project Spring Boot</a></li>\n<li><a href=\"https://ciazhar.github.io/2017/04/23/pemrograman/spring/2-membuat-web-sederhana-dengan-spring-boot-starter-web-dan-thymeleaf/\">Membuat Web Menggunakan Spring Boot dan Thyeleaf</a></li>\n<li><a href=\"https://ciazhar.github.io/2017/04/23/pemrograman/spring/3.1-crud-dengan-spring-data-jpa/\">Setup Project Untuk CRUD dengan Spring Data JPA dan MySQL</a></li>\n<li><a href=\"https://ciazhar.github.io/2017/04/23/pemrograman/spring/3.2-generate-content-dari-server-side-dengan-thymeleaf/\">CRUD dengan Content digenerate di Server Side Menggunakan Spring Data JPA dan Thymeleaf</a></li>\n<li><a href=\"https://ciazhar.github.io/2017/04/23/pemrograman/spring/3.3-generate-content-dari-client-side-dengan-AngularJS/\">CRUD dengan Content digenerate di Client Side AngularJS</a></li>\n<li><a href=\"\">Kardinalitas pada Spring Data JPA</a></li>\n<li><a href=\"\">Konfigurasi yang sering digunakan untuk CRUD pada Spring Data JPA</a></li>\n<li><a href=\"https://ciazhar.github.io/2017/04/23/pemrograman/spring/4-otorisasi-login-dengan-spring-security/\">Otoriasai login dengan Spring Security</a></li>\n<li><a href=\"https://ciazhar.github.io/2017/04/23/pemrograman/spring/5-layout-dengan-thymeleaf/\">Layouting dengan Thymeleaf</a></li>\n<li><a href=\"https://ciazhar.github.io/2017/04/23/pemrograman/spring/6-jasper-report/\">Membuat Report dengan Jasper Report</a></li>\n<li><a href=\"\">Single Signed On dengan Spring Oauth</a></li>\n<li><a href=\"\">Full Stack Application</a></li>\n</ul>\n"},{"title":"Setup Project Spring","date":"2017-04-23T07:17:29.000Z","_content":"![](/images/springboot.png)\n# Setup Development Environment\nUntuk menggunakan Spring Boot anda perlu menginstall beberapa Development Environment. Diantaranya adalah :\n- Java Development Kit (JDK atau openJDK)\n- Build Tools (Apache Maven atau Gradle)\n- IDE (IntellijIDEA atau Netbeans)\n\n# Setup Project Mengunakan Spring Initializer\n- Buka browser lalu masukkan url `http://start.spring.io/`\n- Selanjutnya anda akan diminta untuk mengisi beberapa data yaitu :\n  - Tipe Project. Project dapat berupa maven atau gradle. Isi dengan Build tools yang sudah anda install di komputer anda.\n  - Versi Spring. Pilih versi terbaru yang bukan SNAPSHOOT.\n  - Project Metadata. Format pengisianya adalah sebagai berikut :\n    Group : com.nama.domain.anda (dipisah dengan titik)\n    Artifact : nama-aplikasi-anda (tidak boleh diberi spasi)\n  - Dependencies. Isi dengan library yang anda butuhkan. Pada tutorial ini kita kan menggunakan `Thymeleaf` dan `Web`.\n- Generate Project\n- Add project ke text editor\n\n# Struktur Folder Aplikasi Spring Boot\nStruktur foldernya akan seperti berikut :\n```\ndemo\n├── mvnw\n├── mvnw.cmd\n├── pom.xml\n└── src\n    ├── main\n    │   ├── java\n    │   │   └── com\n    │   │       └── example\n    │   │           └── DemoApplication.java\n    │   └── resources\n    │       ├── application.properties\n    │       ├── static\n    │       └── templates\n    └── test\n        └── java\n            └── com\n                └── example\n                    └── DemoApplicationTests.java\n```\nSebagai catatan struktur folder tersebut dapat berubah sesuai data yang anda masukkan saat membuat project.\nAnda dapat menghapus mvnw dan mvn.cmd. Pada Project tersebut terdapat beberapa file yaitu :\n- pom.xml. File ini merupakan konfigurasi dari Maven. Jika anda menggunakan Gradle maka yang dibuat adalah file .gradle.\n- Di dalam folder src/main/java/com/example terdapat file DemoApplication.java. File ini merupakan main file dari aplikasi spring boot anda.\n- Folder src/main/java/com/example sendiri digunakan untuk menampung file-file java.\n- Di dalam folder src/main/resources terdapat file application.properties. File ini digunakan untuk mengkonfigurasi aplikasi spring.\n- Folder src/main/respurces/static digunakan untuk menampung file static (hmtl, css dan js)\n- Folder src/main/respurces/templates digunakan untuk menampung file html yang menggunakan Thymeleaf.\n- Folder src/test/java/com/example digunakan untuk menampung file-file testing.\n\n# Running Project\nUntuk menjalankan project dapat menggunakan perintah berikut pada CLI\n```\nmvn clean spring-boot:run\n```\n","source":"_posts/pemrograman/spring/1-setup-project.md","raw":"---\ntitle: Setup Project Spring\ndate: 2017-04-23 14:17:29\ncategories:\n  - Pemrograman\n  - Spring\n---\n![](/images/springboot.png)\n# Setup Development Environment\nUntuk menggunakan Spring Boot anda perlu menginstall beberapa Development Environment. Diantaranya adalah :\n- Java Development Kit (JDK atau openJDK)\n- Build Tools (Apache Maven atau Gradle)\n- IDE (IntellijIDEA atau Netbeans)\n\n# Setup Project Mengunakan Spring Initializer\n- Buka browser lalu masukkan url `http://start.spring.io/`\n- Selanjutnya anda akan diminta untuk mengisi beberapa data yaitu :\n  - Tipe Project. Project dapat berupa maven atau gradle. Isi dengan Build tools yang sudah anda install di komputer anda.\n  - Versi Spring. Pilih versi terbaru yang bukan SNAPSHOOT.\n  - Project Metadata. Format pengisianya adalah sebagai berikut :\n    Group : com.nama.domain.anda (dipisah dengan titik)\n    Artifact : nama-aplikasi-anda (tidak boleh diberi spasi)\n  - Dependencies. Isi dengan library yang anda butuhkan. Pada tutorial ini kita kan menggunakan `Thymeleaf` dan `Web`.\n- Generate Project\n- Add project ke text editor\n\n# Struktur Folder Aplikasi Spring Boot\nStruktur foldernya akan seperti berikut :\n```\ndemo\n├── mvnw\n├── mvnw.cmd\n├── pom.xml\n└── src\n    ├── main\n    │   ├── java\n    │   │   └── com\n    │   │       └── example\n    │   │           └── DemoApplication.java\n    │   └── resources\n    │       ├── application.properties\n    │       ├── static\n    │       └── templates\n    └── test\n        └── java\n            └── com\n                └── example\n                    └── DemoApplicationTests.java\n```\nSebagai catatan struktur folder tersebut dapat berubah sesuai data yang anda masukkan saat membuat project.\nAnda dapat menghapus mvnw dan mvn.cmd. Pada Project tersebut terdapat beberapa file yaitu :\n- pom.xml. File ini merupakan konfigurasi dari Maven. Jika anda menggunakan Gradle maka yang dibuat adalah file .gradle.\n- Di dalam folder src/main/java/com/example terdapat file DemoApplication.java. File ini merupakan main file dari aplikasi spring boot anda.\n- Folder src/main/java/com/example sendiri digunakan untuk menampung file-file java.\n- Di dalam folder src/main/resources terdapat file application.properties. File ini digunakan untuk mengkonfigurasi aplikasi spring.\n- Folder src/main/respurces/static digunakan untuk menampung file static (hmtl, css dan js)\n- Folder src/main/respurces/templates digunakan untuk menampung file html yang menggunakan Thymeleaf.\n- Folder src/test/java/com/example digunakan untuk menampung file-file testing.\n\n# Running Project\nUntuk menjalankan project dapat menggunakan perintah berikut pada CLI\n```\nmvn clean spring-boot:run\n```\n","slug":"pemrograman/spring/1-setup-project","published":1,"updated":"2017-05-07T09:21:01.695Z","_id":"cj2ed41ps002e8jlpr9x3av0h","comments":1,"layout":"post","photos":[],"link":"","content":"<p><img src=\"/images/springboot.png\" alt=\"\"></p>\n<h1 id=\"Setup-Development-Environment\"><a href=\"#Setup-Development-Environment\" class=\"headerlink\" title=\"Setup Development Environment\"></a>Setup Development Environment</h1><p>Untuk menggunakan Spring Boot anda perlu menginstall beberapa Development Environment. Diantaranya adalah :</p>\n<ul>\n<li>Java Development Kit (JDK atau openJDK)</li>\n<li>Build Tools (Apache Maven atau Gradle)</li>\n<li>IDE (IntellijIDEA atau Netbeans)</li>\n</ul>\n<h1 id=\"Setup-Project-Mengunakan-Spring-Initializer\"><a href=\"#Setup-Project-Mengunakan-Spring-Initializer\" class=\"headerlink\" title=\"Setup Project Mengunakan Spring Initializer\"></a>Setup Project Mengunakan Spring Initializer</h1><ul>\n<li>Buka browser lalu masukkan url <code>http://start.spring.io/</code></li>\n<li>Selanjutnya anda akan diminta untuk mengisi beberapa data yaitu :<ul>\n<li>Tipe Project. Project dapat berupa maven atau gradle. Isi dengan Build tools yang sudah anda install di komputer anda.</li>\n<li>Versi Spring. Pilih versi terbaru yang bukan SNAPSHOOT.</li>\n<li>Project Metadata. Format pengisianya adalah sebagai berikut :<br>Group : com.nama.domain.anda (dipisah dengan titik)<br>Artifact : nama-aplikasi-anda (tidak boleh diberi spasi)</li>\n<li>Dependencies. Isi dengan library yang anda butuhkan. Pada tutorial ini kita kan menggunakan <code>Thymeleaf</code> dan <code>Web</code>.</li>\n</ul>\n</li>\n<li>Generate Project</li>\n<li>Add project ke text editor</li>\n</ul>\n<h1 id=\"Struktur-Folder-Aplikasi-Spring-Boot\"><a href=\"#Struktur-Folder-Aplikasi-Spring-Boot\" class=\"headerlink\" title=\"Struktur Folder Aplikasi Spring Boot\"></a>Struktur Folder Aplikasi Spring Boot</h1><p>Struktur foldernya akan seperti berikut :<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\">demo</div><div class=\"line\">├── mvnw</div><div class=\"line\">├── mvnw.cmd</div><div class=\"line\">├── pom.xml</div><div class=\"line\">└── src</div><div class=\"line\">    ├── main</div><div class=\"line\">    │   ├── java</div><div class=\"line\">    │   │   └── com</div><div class=\"line\">    │   │       └── example</div><div class=\"line\">    │   │           └── DemoApplication.java</div><div class=\"line\">    │   └── resources</div><div class=\"line\">    │       ├── application.properties</div><div class=\"line\">    │       ├── static</div><div class=\"line\">    │       └── templates</div><div class=\"line\">    └── test</div><div class=\"line\">        └── java</div><div class=\"line\">            └── com</div><div class=\"line\">                └── example</div><div class=\"line\">                    └── DemoApplicationTests.java</div></pre></td></tr></table></figure></p>\n<p>Sebagai catatan struktur folder tersebut dapat berubah sesuai data yang anda masukkan saat membuat project.<br>Anda dapat menghapus mvnw dan mvn.cmd. Pada Project tersebut terdapat beberapa file yaitu :</p>\n<ul>\n<li>pom.xml. File ini merupakan konfigurasi dari Maven. Jika anda menggunakan Gradle maka yang dibuat adalah file .gradle.</li>\n<li>Di dalam folder src/main/java/com/example terdapat file DemoApplication.java. File ini merupakan main file dari aplikasi spring boot anda.</li>\n<li>Folder src/main/java/com/example sendiri digunakan untuk menampung file-file java.</li>\n<li>Di dalam folder src/main/resources terdapat file application.properties. File ini digunakan untuk mengkonfigurasi aplikasi spring.</li>\n<li>Folder src/main/respurces/static digunakan untuk menampung file static (hmtl, css dan js)</li>\n<li>Folder src/main/respurces/templates digunakan untuk menampung file html yang menggunakan Thymeleaf.</li>\n<li>Folder src/test/java/com/example digunakan untuk menampung file-file testing.</li>\n</ul>\n<h1 id=\"Running-Project\"><a href=\"#Running-Project\" class=\"headerlink\" title=\"Running Project\"></a>Running Project</h1><p>Untuk menjalankan project dapat menggunakan perintah berikut pada CLI<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">mvn clean spring-boot:run</div></pre></td></tr></table></figure></p>\n","excerpt":"","more":"<p><img src=\"/images/springboot.png\" alt=\"\"></p>\n<h1 id=\"Setup-Development-Environment\"><a href=\"#Setup-Development-Environment\" class=\"headerlink\" title=\"Setup Development Environment\"></a>Setup Development Environment</h1><p>Untuk menggunakan Spring Boot anda perlu menginstall beberapa Development Environment. Diantaranya adalah :</p>\n<ul>\n<li>Java Development Kit (JDK atau openJDK)</li>\n<li>Build Tools (Apache Maven atau Gradle)</li>\n<li>IDE (IntellijIDEA atau Netbeans)</li>\n</ul>\n<h1 id=\"Setup-Project-Mengunakan-Spring-Initializer\"><a href=\"#Setup-Project-Mengunakan-Spring-Initializer\" class=\"headerlink\" title=\"Setup Project Mengunakan Spring Initializer\"></a>Setup Project Mengunakan Spring Initializer</h1><ul>\n<li>Buka browser lalu masukkan url <code>http://start.spring.io/</code></li>\n<li>Selanjutnya anda akan diminta untuk mengisi beberapa data yaitu :<ul>\n<li>Tipe Project. Project dapat berupa maven atau gradle. Isi dengan Build tools yang sudah anda install di komputer anda.</li>\n<li>Versi Spring. Pilih versi terbaru yang bukan SNAPSHOOT.</li>\n<li>Project Metadata. Format pengisianya adalah sebagai berikut :<br>Group : com.nama.domain.anda (dipisah dengan titik)<br>Artifact : nama-aplikasi-anda (tidak boleh diberi spasi)</li>\n<li>Dependencies. Isi dengan library yang anda butuhkan. Pada tutorial ini kita kan menggunakan <code>Thymeleaf</code> dan <code>Web</code>.</li>\n</ul>\n</li>\n<li>Generate Project</li>\n<li>Add project ke text editor</li>\n</ul>\n<h1 id=\"Struktur-Folder-Aplikasi-Spring-Boot\"><a href=\"#Struktur-Folder-Aplikasi-Spring-Boot\" class=\"headerlink\" title=\"Struktur Folder Aplikasi Spring Boot\"></a>Struktur Folder Aplikasi Spring Boot</h1><p>Struktur foldernya akan seperti berikut :<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\">demo</div><div class=\"line\">├── mvnw</div><div class=\"line\">├── mvnw.cmd</div><div class=\"line\">├── pom.xml</div><div class=\"line\">└── src</div><div class=\"line\">    ├── main</div><div class=\"line\">    │   ├── java</div><div class=\"line\">    │   │   └── com</div><div class=\"line\">    │   │       └── example</div><div class=\"line\">    │   │           └── DemoApplication.java</div><div class=\"line\">    │   └── resources</div><div class=\"line\">    │       ├── application.properties</div><div class=\"line\">    │       ├── static</div><div class=\"line\">    │       └── templates</div><div class=\"line\">    └── test</div><div class=\"line\">        └── java</div><div class=\"line\">            └── com</div><div class=\"line\">                └── example</div><div class=\"line\">                    └── DemoApplicationTests.java</div></pre></td></tr></table></figure></p>\n<p>Sebagai catatan struktur folder tersebut dapat berubah sesuai data yang anda masukkan saat membuat project.<br>Anda dapat menghapus mvnw dan mvn.cmd. Pada Project tersebut terdapat beberapa file yaitu :</p>\n<ul>\n<li>pom.xml. File ini merupakan konfigurasi dari Maven. Jika anda menggunakan Gradle maka yang dibuat adalah file .gradle.</li>\n<li>Di dalam folder src/main/java/com/example terdapat file DemoApplication.java. File ini merupakan main file dari aplikasi spring boot anda.</li>\n<li>Folder src/main/java/com/example sendiri digunakan untuk menampung file-file java.</li>\n<li>Di dalam folder src/main/resources terdapat file application.properties. File ini digunakan untuk mengkonfigurasi aplikasi spring.</li>\n<li>Folder src/main/respurces/static digunakan untuk menampung file static (hmtl, css dan js)</li>\n<li>Folder src/main/respurces/templates digunakan untuk menampung file html yang menggunakan Thymeleaf.</li>\n<li>Folder src/test/java/com/example digunakan untuk menampung file-file testing.</li>\n</ul>\n<h1 id=\"Running-Project\"><a href=\"#Running-Project\" class=\"headerlink\" title=\"Running Project\"></a>Running Project</h1><p>Untuk menjalankan project dapat menggunakan perintah berikut pada CLI<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">mvn clean spring-boot:run</div></pre></td></tr></table></figure></p>\n"},{"title":"Membuat Laman Web Sederhana","date":"2017-04-23T07:17:30.000Z","_content":"![](/images/springboot.png)\nUntuk pertama kali kita akan coba membuat laman web sederhana. Langkah-langkahnya adalah sebagai berikut :\n\n- Buat controller sederhana (main/java/domain/Controllers/HaloController.java)\n```java\n  @Controller\n  public class HaloController{\n    @RequestMapping(\"/\")\n    public String halo(){\n      return \"index\";\n    }\n  }\n```\nKeterangan :\n1. `@Controller` digunakan untuk menandai bahwa class `HaloController` adalah class controller\n2. `@RequestMapping` digunakan untuk mapping url metode halo yang akan digunakan oleh view bernama `index`\n\n\n- Buat file HTML (main/resources/templates/index.html)\n```html\n  <html xmlns:th=\"http://www.thymeleaf.org\">\n    <head>\n      <title>Aplikasi Spring Boot</title>\n      <link rel=\"stylesheet\" th:href=\"@{/css/bootstrap.min.css}\"  media=\"screen\"/>\n      <link rel=\"stylesheet\" th:href=\"@{/css/signin.css}\" media=\"screen\"/>\n    </head>\n\n    <body>\n      <nav class=\"navbar navbar-inverse navbar-fixed-top\">\n        <div class=\"container\">\n          <div class=\"navbar-header\">\n            <button type=\"button\" class=\"navbar-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#navbar\" aria-expanded=\"false\" aria-controls=\"navbar\">\n              <span class=\"sr-only\">Toggle navigation</span>\n              <span class=\"icon-bar\"></span>\n              <span class=\"icon-bar\"></span>\n              <span class=\"icon-bar\"></span>\n            </button>\n            <a class=\"navbar-brand\" th:href=\"@{/}\">ciazhar</a>\n          </div>\n        </div>\n      </nav>\n\n      <div class=\"container\">\n        <h1>Aplikasi Spring Boot Dengan Thymeleaf</h1>\n      </div>\n\n      <script th:src=\"@{/js/jquery.min.js}\"></script>\n      <script th:src=\"@{/js/bootstrap.min.js}\"></script>\n    </body>\n  </html>\n```\nKeterangan :\n1. `<html xmlns:th=\"http://www.thymeleaf.org\">` menandai bahwa html itu menggunakan template engine thymeleaf\n2. `th:href` (jika di html bernama `href`) digunakan untuk menginjek css. css tersebut dapat di simpan di `src/main/resources/static/css`. Tetapi karena `src/main/resources/static` merupakan classpath maka untuk menginjeknya hanya perlu dari folder css saja. contoh : `<link rel=\"stylesheet\" th:href=\"@{/css/bootstrap.min.css}\"  media=\"screen\"/>`\nSelain itu kita juga dapat menggunakanya untuk melakukan link sesuai mapping di controller. contoh : `<a class=\"navbar-brand\" th:href=\"@{/}\">ciazhar</a>`\n3. `th:src`(jika di html bernama `src`) digunakan untuk menginjek js. js tersebut dapat di simpan di `src/main/resources/static/js`. contoh : `<script th:src=\"@{/js/jquery.min.js}\"></script>`\n\n\n\n- Memasang Library (/src/main/resources)\nJika kita lihat pada html diatas kita memerlukan beberapa library yaitu bootstrap dan jquery. Library tersebut dapat anda download di official masing-masing library tersebut. Kemudian masukkan ke /src/main/resources/css untuk file CSS dan /src/main/resources/js untuk file JS.\n","source":"_posts/pemrograman/spring/2-membuat-web-sederhana-dengan-spring-boot-starter-web-dan-thymeleaf.md","raw":"---\ntitle: Membuat Laman Web Sederhana\ndate: 2017-04-23 14:17:30\ncategories:\n  - Pemrograman\n  - Spring\n---\n![](/images/springboot.png)\nUntuk pertama kali kita akan coba membuat laman web sederhana. Langkah-langkahnya adalah sebagai berikut :\n\n- Buat controller sederhana (main/java/domain/Controllers/HaloController.java)\n```java\n  @Controller\n  public class HaloController{\n    @RequestMapping(\"/\")\n    public String halo(){\n      return \"index\";\n    }\n  }\n```\nKeterangan :\n1. `@Controller` digunakan untuk menandai bahwa class `HaloController` adalah class controller\n2. `@RequestMapping` digunakan untuk mapping url metode halo yang akan digunakan oleh view bernama `index`\n\n\n- Buat file HTML (main/resources/templates/index.html)\n```html\n  <html xmlns:th=\"http://www.thymeleaf.org\">\n    <head>\n      <title>Aplikasi Spring Boot</title>\n      <link rel=\"stylesheet\" th:href=\"@{/css/bootstrap.min.css}\"  media=\"screen\"/>\n      <link rel=\"stylesheet\" th:href=\"@{/css/signin.css}\" media=\"screen\"/>\n    </head>\n\n    <body>\n      <nav class=\"navbar navbar-inverse navbar-fixed-top\">\n        <div class=\"container\">\n          <div class=\"navbar-header\">\n            <button type=\"button\" class=\"navbar-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#navbar\" aria-expanded=\"false\" aria-controls=\"navbar\">\n              <span class=\"sr-only\">Toggle navigation</span>\n              <span class=\"icon-bar\"></span>\n              <span class=\"icon-bar\"></span>\n              <span class=\"icon-bar\"></span>\n            </button>\n            <a class=\"navbar-brand\" th:href=\"@{/}\">ciazhar</a>\n          </div>\n        </div>\n      </nav>\n\n      <div class=\"container\">\n        <h1>Aplikasi Spring Boot Dengan Thymeleaf</h1>\n      </div>\n\n      <script th:src=\"@{/js/jquery.min.js}\"></script>\n      <script th:src=\"@{/js/bootstrap.min.js}\"></script>\n    </body>\n  </html>\n```\nKeterangan :\n1. `<html xmlns:th=\"http://www.thymeleaf.org\">` menandai bahwa html itu menggunakan template engine thymeleaf\n2. `th:href` (jika di html bernama `href`) digunakan untuk menginjek css. css tersebut dapat di simpan di `src/main/resources/static/css`. Tetapi karena `src/main/resources/static` merupakan classpath maka untuk menginjeknya hanya perlu dari folder css saja. contoh : `<link rel=\"stylesheet\" th:href=\"@{/css/bootstrap.min.css}\"  media=\"screen\"/>`\nSelain itu kita juga dapat menggunakanya untuk melakukan link sesuai mapping di controller. contoh : `<a class=\"navbar-brand\" th:href=\"@{/}\">ciazhar</a>`\n3. `th:src`(jika di html bernama `src`) digunakan untuk menginjek js. js tersebut dapat di simpan di `src/main/resources/static/js`. contoh : `<script th:src=\"@{/js/jquery.min.js}\"></script>`\n\n\n\n- Memasang Library (/src/main/resources)\nJika kita lihat pada html diatas kita memerlukan beberapa library yaitu bootstrap dan jquery. Library tersebut dapat anda download di official masing-masing library tersebut. Kemudian masukkan ke /src/main/resources/css untuk file CSS dan /src/main/resources/js untuk file JS.\n","slug":"pemrograman/spring/2-membuat-web-sederhana-dengan-spring-boot-starter-web-dan-thymeleaf","published":1,"updated":"2017-05-07T09:21:05.632Z","_id":"cj2ed41pv002f8jlpoyoqi0nh","comments":1,"layout":"post","photos":[],"link":"","content":"<p><img src=\"/images/springboot.png\" alt=\"\"><br>Untuk pertama kali kita akan coba membuat laman web sederhana. Langkah-langkahnya adalah sebagai berikut :</p>\n<ul>\n<li>Buat controller sederhana (main/java/domain/Controllers/HaloController.java)<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">@Controller</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HaloController</span></span>&#123;</div><div class=\"line\">  <span class=\"meta\">@RequestMapping</span>(<span class=\"string\">\"/\"</span>)</div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">halo</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">\"index\"</span>;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>Keterangan :</p>\n<ol>\n<li><code>@Controller</code> digunakan untuk menandai bahwa class <code>HaloController</code> adalah class controller</li>\n<li><code>@RequestMapping</code> digunakan untuk mapping url metode halo yang akan digunakan oleh view bernama <code>index</code></li>\n</ol>\n<ul>\n<li>Buat file HTML (main/resources/templates/index.html)<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">xmlns:th</span>=<span class=\"string\">\"http://www.thymeleaf.org\"</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Aplikasi Spring Boot<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"stylesheet\"</span> <span class=\"attr\">th:href</span>=<span class=\"string\">\"@&#123;/css/bootstrap.min.css&#125;\"</span>  <span class=\"attr\">media</span>=<span class=\"string\">\"screen\"</span>/&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"stylesheet\"</span> <span class=\"attr\">th:href</span>=<span class=\"string\">\"@&#123;/css/signin.css&#125;\"</span> <span class=\"attr\">media</span>=<span class=\"string\">\"screen\"</span>/&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">nav</span> <span class=\"attr\">class</span>=<span class=\"string\">\"navbar navbar-inverse navbar-fixed-top\"</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"container\"</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"navbar-header\"</span>&gt;</span></div><div class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">type</span>=<span class=\"string\">\"button\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"navbar-toggle collapsed\"</span> <span class=\"attr\">data-toggle</span>=<span class=\"string\">\"collapse\"</span> <span class=\"attr\">data-target</span>=<span class=\"string\">\"#navbar\"</span> <span class=\"attr\">aria-expanded</span>=<span class=\"string\">\"false\"</span> <span class=\"attr\">aria-controls</span>=<span class=\"string\">\"navbar\"</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"sr-only\"</span>&gt;</span>Toggle navigation<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"icon-bar\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"icon-bar\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"icon-bar\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></div><div class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></div><div class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">\"navbar-brand\"</span> <span class=\"attr\">th:href</span>=<span class=\"string\">\"@&#123;/&#125;\"</span>&gt;</span>ciazhar<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">nav</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"container\"</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>Aplikasi Spring Boot Dengan Thymeleaf<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">th:src</span>=<span class=\"string\">\"@&#123;/js/jquery.min.js&#125;\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">th:src</span>=<span class=\"string\">\"@&#123;/js/bootstrap.min.js&#125;\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>Keterangan :</p>\n<ol>\n<li><code>&lt;html xmlns:th=&quot;http://www.thymeleaf.org&quot;&gt;</code> menandai bahwa html itu menggunakan template engine thymeleaf</li>\n<li><code>th:href</code> (jika di html bernama <code>href</code>) digunakan untuk menginjek css. css tersebut dapat di simpan di <code>src/main/resources/static/css</code>. Tetapi karena <code>src/main/resources/static</code> merupakan classpath maka untuk menginjeknya hanya perlu dari folder css saja. contoh : <code>&lt;link rel=&quot;stylesheet&quot; th:href=&quot;@{/css/bootstrap.min.css}&quot;  media=&quot;screen&quot;/&gt;</code><br>Selain itu kita juga dapat menggunakanya untuk melakukan link sesuai mapping di controller. contoh : <code>&lt;a class=&quot;navbar-brand&quot; th:href=&quot;@{/}&quot;&gt;ciazhar&lt;/a&gt;</code></li>\n<li><code>th:src</code>(jika di html bernama <code>src</code>) digunakan untuk menginjek js. js tersebut dapat di simpan di <code>src/main/resources/static/js</code>. contoh : <code>&lt;script th:src=&quot;@{/js/jquery.min.js}&quot;&gt;&lt;/script&gt;</code></li>\n</ol>\n<ul>\n<li>Memasang Library (/src/main/resources)<br>Jika kita lihat pada html diatas kita memerlukan beberapa library yaitu bootstrap dan jquery. Library tersebut dapat anda download di official masing-masing library tersebut. Kemudian masukkan ke /src/main/resources/css untuk file CSS dan /src/main/resources/js untuk file JS.</li>\n</ul>\n","excerpt":"","more":"<p><img src=\"/images/springboot.png\" alt=\"\"><br>Untuk pertama kali kita akan coba membuat laman web sederhana. Langkah-langkahnya adalah sebagai berikut :</p>\n<ul>\n<li>Buat controller sederhana (main/java/domain/Controllers/HaloController.java)<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">@Controller</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HaloController</span></span>&#123;</div><div class=\"line\">  <span class=\"meta\">@RequestMapping</span>(<span class=\"string\">\"/\"</span>)</div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">halo</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">\"index\"</span>;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>Keterangan :</p>\n<ol>\n<li><code>@Controller</code> digunakan untuk menandai bahwa class <code>HaloController</code> adalah class controller</li>\n<li><code>@RequestMapping</code> digunakan untuk mapping url metode halo yang akan digunakan oleh view bernama <code>index</code></li>\n</ol>\n<ul>\n<li>Buat file HTML (main/resources/templates/index.html)<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">xmlns:th</span>=<span class=\"string\">\"http://www.thymeleaf.org\"</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Aplikasi Spring Boot<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"stylesheet\"</span> <span class=\"attr\">th:href</span>=<span class=\"string\">\"@&#123;/css/bootstrap.min.css&#125;\"</span>  <span class=\"attr\">media</span>=<span class=\"string\">\"screen\"</span>/&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"stylesheet\"</span> <span class=\"attr\">th:href</span>=<span class=\"string\">\"@&#123;/css/signin.css&#125;\"</span> <span class=\"attr\">media</span>=<span class=\"string\">\"screen\"</span>/&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">nav</span> <span class=\"attr\">class</span>=<span class=\"string\">\"navbar navbar-inverse navbar-fixed-top\"</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"container\"</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"navbar-header\"</span>&gt;</span></div><div class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">type</span>=<span class=\"string\">\"button\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"navbar-toggle collapsed\"</span> <span class=\"attr\">data-toggle</span>=<span class=\"string\">\"collapse\"</span> <span class=\"attr\">data-target</span>=<span class=\"string\">\"#navbar\"</span> <span class=\"attr\">aria-expanded</span>=<span class=\"string\">\"false\"</span> <span class=\"attr\">aria-controls</span>=<span class=\"string\">\"navbar\"</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"sr-only\"</span>&gt;</span>Toggle navigation<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"icon-bar\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"icon-bar\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"icon-bar\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></div><div class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></div><div class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">\"navbar-brand\"</span> <span class=\"attr\">th:href</span>=<span class=\"string\">\"@&#123;/&#125;\"</span>&gt;</span>ciazhar<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">nav</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"container\"</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>Aplikasi Spring Boot Dengan Thymeleaf<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">th:src</span>=<span class=\"string\">\"@&#123;/js/jquery.min.js&#125;\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">th:src</span>=<span class=\"string\">\"@&#123;/js/bootstrap.min.js&#125;\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>Keterangan :</p>\n<ol>\n<li><code>&lt;html xmlns:th=&quot;http://www.thymeleaf.org&quot;&gt;</code> menandai bahwa html itu menggunakan template engine thymeleaf</li>\n<li><code>th:href</code> (jika di html bernama <code>href</code>) digunakan untuk menginjek css. css tersebut dapat di simpan di <code>src/main/resources/static/css</code>. Tetapi karena <code>src/main/resources/static</code> merupakan classpath maka untuk menginjeknya hanya perlu dari folder css saja. contoh : <code>&lt;link rel=&quot;stylesheet&quot; th:href=&quot;@{/css/bootstrap.min.css}&quot;  media=&quot;screen&quot;/&gt;</code><br>Selain itu kita juga dapat menggunakanya untuk melakukan link sesuai mapping di controller. contoh : <code>&lt;a class=&quot;navbar-brand&quot; th:href=&quot;@{/}&quot;&gt;ciazhar&lt;/a&gt;</code></li>\n<li><code>th:src</code>(jika di html bernama <code>src</code>) digunakan untuk menginjek js. js tersebut dapat di simpan di <code>src/main/resources/static/js</code>. contoh : <code>&lt;script th:src=&quot;@{/js/jquery.min.js}&quot;&gt;&lt;/script&gt;</code></li>\n</ol>\n<ul>\n<li>Memasang Library (/src/main/resources)<br>Jika kita lihat pada html diatas kita memerlukan beberapa library yaitu bootstrap dan jquery. Library tersebut dapat anda download di official masing-masing library tersebut. Kemudian masukkan ke /src/main/resources/css untuk file CSS dan /src/main/resources/js untuk file JS.</li>\n</ul>\n"},{"title":"Setup Project Untuk CRUD","date":"2017-04-23T07:17:31.000Z","_content":"![](/images/springboot.png)\nPada tutorial kali ini kita akan melakukan Create Read Update Delete (CRUD) menggunakan Spring Data JPA. Untuk database kita akan menggunakan mysql, jadi anda harus menginstallnya terlebih dahulu. Berikut ini merupakan langkah-langkahnya :\n\n- Pertama-tama kita akan tambahkan dependendcy spring data jpa (pom.xml)\n\n```xml\n  <dependency>\n    <groupId>org.springframework.boot</groupId>\n    <artifactId>spring-boot-starter-data-jpa</artifactId>\n  </dependency>\n  <dependency>\n    <groupId>mysql</groupId>\n    <artifactId>mysql-connector-java</artifactId>\n    <version>6.0.6</version>\n  </dependency>\n```\nUntuk mencari dependency dapat dilihat di [Maven Repostory](https://mvnrepository.com)\n\n- Setting Database (main/resources/application.properties)\n\n```yml\n  spring.datasource.url=jdbc:mysql://localhost:3306/pelatihan\n  spring.datasource.username=pelatihanuser\n  spring.datasource.password=pelatihanpasswd\n```\nKeterangan :\n1. `spring.datasource.url` merupakan url untuk database. Dalam pengisianya harap disesuaikan dengan jenis database, port pada perangkat, dan nama database yang telah dibuat. Pada contoh tersebut menggunakan jenis database (mysql), port pada perangkat (3306), dan nama database(pelatihan)\n2. `spring.datasource.username` merupakan username database.\n3. `spring.datasource.password` merupakan password database.\n\n\n- Membuat Schema (CLI)\nUntuk memuat schema teteap harus manual. Berikut langkah-langkahnya di mysql.\n```\n  mysql -u root -p\n  grant all on pelatihan.* to pelatihanuser@localhost identified by 'pelatihanpasswd'\n  create database pelatihan;\n```\n\n- Meggunakan mysql (CLI)\nBerikut adalah sintaks yang akan sering digunakan dalam mysql.\n```\n  use pelatihan;\t\t\t///menggunakan database\n  show tables;\t\t\t///memperlihatkan tabel dan attributenya\n  show create table nama_tabel \\G\t///memperlihatkan detil tabel\n  select * from nama_tabel ///memperlihatkan data pada tabel\n  drop table peserta;\t\t///menghapus data pada tabel\n```\n","source":"_posts/pemrograman/spring/3.1-crud-dengan-spring-data-jpa.md","raw":"---\ntitle: Setup Project Untuk CRUD\ndate: 2017-04-23 14:17:31\ncategories:\n  - Pemrograman\n  - Spring\n---\n![](/images/springboot.png)\nPada tutorial kali ini kita akan melakukan Create Read Update Delete (CRUD) menggunakan Spring Data JPA. Untuk database kita akan menggunakan mysql, jadi anda harus menginstallnya terlebih dahulu. Berikut ini merupakan langkah-langkahnya :\n\n- Pertama-tama kita akan tambahkan dependendcy spring data jpa (pom.xml)\n\n```xml\n  <dependency>\n    <groupId>org.springframework.boot</groupId>\n    <artifactId>spring-boot-starter-data-jpa</artifactId>\n  </dependency>\n  <dependency>\n    <groupId>mysql</groupId>\n    <artifactId>mysql-connector-java</artifactId>\n    <version>6.0.6</version>\n  </dependency>\n```\nUntuk mencari dependency dapat dilihat di [Maven Repostory](https://mvnrepository.com)\n\n- Setting Database (main/resources/application.properties)\n\n```yml\n  spring.datasource.url=jdbc:mysql://localhost:3306/pelatihan\n  spring.datasource.username=pelatihanuser\n  spring.datasource.password=pelatihanpasswd\n```\nKeterangan :\n1. `spring.datasource.url` merupakan url untuk database. Dalam pengisianya harap disesuaikan dengan jenis database, port pada perangkat, dan nama database yang telah dibuat. Pada contoh tersebut menggunakan jenis database (mysql), port pada perangkat (3306), dan nama database(pelatihan)\n2. `spring.datasource.username` merupakan username database.\n3. `spring.datasource.password` merupakan password database.\n\n\n- Membuat Schema (CLI)\nUntuk memuat schema teteap harus manual. Berikut langkah-langkahnya di mysql.\n```\n  mysql -u root -p\n  grant all on pelatihan.* to pelatihanuser@localhost identified by 'pelatihanpasswd'\n  create database pelatihan;\n```\n\n- Meggunakan mysql (CLI)\nBerikut adalah sintaks yang akan sering digunakan dalam mysql.\n```\n  use pelatihan;\t\t\t///menggunakan database\n  show tables;\t\t\t///memperlihatkan tabel dan attributenya\n  show create table nama_tabel \\G\t///memperlihatkan detil tabel\n  select * from nama_tabel ///memperlihatkan data pada tabel\n  drop table peserta;\t\t///menghapus data pada tabel\n```\n","slug":"pemrograman/spring/3.1-crud-dengan-spring-data-jpa","published":1,"updated":"2017-05-07T09:21:09.696Z","_id":"cj2ed41px002g8jlp5n9soowm","comments":1,"layout":"post","photos":[],"link":"","content":"<p><img src=\"/images/springboot.png\" alt=\"\"><br>Pada tutorial kali ini kita akan melakukan Create Read Update Delete (CRUD) menggunakan Spring Data JPA. Untuk database kita akan menggunakan mysql, jadi anda harus menginstallnya terlebih dahulu. Berikut ini merupakan langkah-langkahnya :</p>\n<ul>\n<li>Pertama-tama kita akan tambahkan dependendcy spring data jpa (pom.xml)</li>\n</ul>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-data-jpa<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>mysql<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>mysql-connector-java<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>6.0.6<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>Untuk mencari dependency dapat dilihat di <a href=\"https://mvnrepository.com\" target=\"_blank\" rel=\"external\">Maven Repostory</a></p>\n<ul>\n<li>Setting Database (main/resources/application.properties)</li>\n</ul>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"string\">spring.datasource.url=jdbc:mysql://localhost:3306/pelatihan</span></div><div class=\"line\"><span class=\"string\">spring.datasource.username=pelatihanuser</span></div><div class=\"line\"><span class=\"string\">spring.datasource.password=pelatihanpasswd</span></div></pre></td></tr></table></figure>\n<p>Keterangan :</p>\n<ol>\n<li><code>spring.datasource.url</code> merupakan url untuk database. Dalam pengisianya harap disesuaikan dengan jenis database, port pada perangkat, dan nama database yang telah dibuat. Pada contoh tersebut menggunakan jenis database (mysql), port pada perangkat (3306), dan nama database(pelatihan)</li>\n<li><code>spring.datasource.username</code> merupakan username database.</li>\n<li><code>spring.datasource.password</code> merupakan password database.</li>\n</ol>\n<ul>\n<li><p>Membuat Schema (CLI)<br>Untuk memuat schema teteap harus manual. Berikut langkah-langkahnya di mysql.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">mysql -u root -p</div><div class=\"line\">grant all on pelatihan.* to pelatihanuser@localhost identified by &apos;pelatihanpasswd&apos;</div><div class=\"line\">create database pelatihan;</div></pre></td></tr></table></figure>\n</li>\n<li><p>Meggunakan mysql (CLI)<br>Berikut adalah sintaks yang akan sering digunakan dalam mysql.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">use pelatihan;\t\t\t///menggunakan database</div><div class=\"line\">show tables;\t\t\t///memperlihatkan tabel dan attributenya</div><div class=\"line\">show create table nama_tabel \\G\t///memperlihatkan detil tabel</div><div class=\"line\">select * from nama_tabel ///memperlihatkan data pada tabel</div><div class=\"line\">drop table peserta;\t\t///menghapus data pada tabel</div></pre></td></tr></table></figure>\n</li>\n</ul>\n","excerpt":"","more":"<p><img src=\"/images/springboot.png\" alt=\"\"><br>Pada tutorial kali ini kita akan melakukan Create Read Update Delete (CRUD) menggunakan Spring Data JPA. Untuk database kita akan menggunakan mysql, jadi anda harus menginstallnya terlebih dahulu. Berikut ini merupakan langkah-langkahnya :</p>\n<ul>\n<li>Pertama-tama kita akan tambahkan dependendcy spring data jpa (pom.xml)</li>\n</ul>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-data-jpa<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>mysql<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>mysql-connector-java<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>6.0.6<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>Untuk mencari dependency dapat dilihat di <a href=\"https://mvnrepository.com\">Maven Repostory</a></p>\n<ul>\n<li>Setting Database (main/resources/application.properties)</li>\n</ul>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"string\">spring.datasource.url=jdbc:mysql://localhost:3306/pelatihan</span></div><div class=\"line\"><span class=\"string\">spring.datasource.username=pelatihanuser</span></div><div class=\"line\"><span class=\"string\">spring.datasource.password=pelatihanpasswd</span></div></pre></td></tr></table></figure>\n<p>Keterangan :</p>\n<ol>\n<li><code>spring.datasource.url</code> merupakan url untuk database. Dalam pengisianya harap disesuaikan dengan jenis database, port pada perangkat, dan nama database yang telah dibuat. Pada contoh tersebut menggunakan jenis database (mysql), port pada perangkat (3306), dan nama database(pelatihan)</li>\n<li><code>spring.datasource.username</code> merupakan username database.</li>\n<li><code>spring.datasource.password</code> merupakan password database.</li>\n</ol>\n<ul>\n<li><p>Membuat Schema (CLI)<br>Untuk memuat schema teteap harus manual. Berikut langkah-langkahnya di mysql.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">mysql -u root -p</div><div class=\"line\">grant all on pelatihan.* to pelatihanuser@localhost identified by &apos;pelatihanpasswd&apos;</div><div class=\"line\">create database pelatihan;</div></pre></td></tr></table></figure>\n</li>\n<li><p>Meggunakan mysql (CLI)<br>Berikut adalah sintaks yang akan sering digunakan dalam mysql.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">use pelatihan;\t\t\t///menggunakan database</div><div class=\"line\">show tables;\t\t\t///memperlihatkan tabel dan attributenya</div><div class=\"line\">show create table nama_tabel \\G\t///memperlihatkan detil tabel</div><div class=\"line\">select * from nama_tabel ///memperlihatkan data pada tabel</div><div class=\"line\">drop table peserta;\t\t///menghapus data pada tabel</div></pre></td></tr></table></figure>\n</li>\n</ul>\n"},{"title":"CRUD dengan Content digenerate di Server Side Menggunakan Spring Data JPA dan Thymeleaf","date":"2017-04-23T07:17:32.000Z","_content":"![](/images/springboot.png)\nAda banyak cara dalam melakukan menggenetate conten dari Server Side di Spring. Anda dapat memilih salah satu dari rangkaian tutorial berikut:\n- [Menggunakan paging and sorting repository](https://ciazhar.github.io/2017/04/23/pemrograman/spring/3.2.1-menggunakan-paging-and-sorting-repository/)\n- [Menggunakan entity manager factory](https://ciazhar.github.io/2017/04/23/pemrograman/spring/3.2.2-menggunakan-entity-manager-factory/)\n","source":"_posts/pemrograman/spring/3.2-generate-content-dari-server-side-dengan-thymeleaf.md","raw":"---\ntitle: CRUD dengan Content digenerate di Server Side Menggunakan Spring Data JPA dan Thymeleaf\ndate: 2017-04-23 14:17:32\ncategories:\n  - Pemrograman\n  - Spring\n---\n![](/images/springboot.png)\nAda banyak cara dalam melakukan menggenetate conten dari Server Side di Spring. Anda dapat memilih salah satu dari rangkaian tutorial berikut:\n- [Menggunakan paging and sorting repository](https://ciazhar.github.io/2017/04/23/pemrograman/spring/3.2.1-menggunakan-paging-and-sorting-repository/)\n- [Menggunakan entity manager factory](https://ciazhar.github.io/2017/04/23/pemrograman/spring/3.2.2-menggunakan-entity-manager-factory/)\n","slug":"pemrograman/spring/3.2-generate-content-dari-server-side-dengan-thymeleaf","published":1,"updated":"2017-05-07T09:32:00.587Z","_id":"cj2ed41q1002h8jlpnpcm8vkp","comments":1,"layout":"post","photos":[],"link":"","content":"<p><img src=\"/images/springboot.png\" alt=\"\"><br>Ada banyak cara dalam melakukan menggenetate conten dari Server Side di Spring. Anda dapat memilih salah satu dari rangkaian tutorial berikut:</p>\n<ul>\n<li><a href=\"https://ciazhar.github.io/2017/04/23/pemrograman/spring/3.2.1-menggunakan-paging-and-sorting-repository/\">Menggunakan paging and sorting repository</a></li>\n<li><a href=\"https://ciazhar.github.io/2017/04/23/pemrograman/spring/3.2.2-menggunakan-entity-manager-factory/\">Menggunakan entity manager factory</a></li>\n</ul>\n","excerpt":"","more":"<p><img src=\"/images/springboot.png\" alt=\"\"><br>Ada banyak cara dalam melakukan menggenetate conten dari Server Side di Spring. Anda dapat memilih salah satu dari rangkaian tutorial berikut:</p>\n<ul>\n<li><a href=\"https://ciazhar.github.io/2017/04/23/pemrograman/spring/3.2.1-menggunakan-paging-and-sorting-repository/\">Menggunakan paging and sorting repository</a></li>\n<li><a href=\"https://ciazhar.github.io/2017/04/23/pemrograman/spring/3.2.2-menggunakan-entity-manager-factory/\">Menggunakan entity manager factory</a></li>\n</ul>\n"},{"title":"Menggunakan Paging and Sorting Repository","date":"2017-04-23T07:17:33.000Z","_content":"![](/images/springboot.png)\n## Menggunakan Paging and Sorting Repository ##\n\n- Membuat model (src/main/java/domain/model/PesertaPaging.java)\n  ```\n    @Entity @Table(name = \"t_peserta\")\n    public class PesertaPaging {\n\n        @Id @GeneratedValue(generator = \"uuid\")\n        @GenericGenerator(name = \"uuid\", strategy = \"uuid2\")\n        private String id;\n\n        @Column(nullable=false)\n        @NotNull\n        @NotEmpty\n        @Size(min = 1, max = 150)\n        private String nama;\n\n        @Column(nullable=false,unique=true)\n        @Email\n        @NotNull\n        @NotEmpty\n        private String email;\n\n        @Column(nullable=false,unique=true)\n        @NotNull\n        @NotEmpty\n        private String noHp;\n    }\n  ```\n- Generate getter dan setter (src/main/java/domain/model/PesertaPaging.java)\n  ```\n    public String getId() {\n        return id;\n    }\n\n    public void setId(String id) {\n        this.id = id;\n    }\n\n    public String getNama() {\n        return nama;\n    }\n\n    public void setNama(String nama) {\n        this.nama = nama;\n    }\n\n    public String getEmail() {\n        return email;\n    }\n\n    public void setEmail(String email) {\n        this.email = email;\n    }\n\n    public String getNoHp() {\n        return noHp;\n    }\n\n    public void setNoHp(String noHp) {\n        this.noHp = noHp;\n    }\n  ```\n- Membuat dao (src/main/java/domain/dao/PesertaPagingDao.java)\n  ```\n    public interface PesertaPagingDao extends PagingAndSortingRepository<PesertaPaging, String>{\n\n    }\n  ```\n- Membuat controller (src/main/java/domain/controller/PesertaPagingController.java)\n  ```\n    @Controller\n    @RequestMapping(\"/peserta\")\n    public class PesertaPagingController {\n\n        @Autowired\n        PesertaPagingDao pesertaPagingDao;\n\n        @RequestMapping(\"/list\")\n        public String listPeserta(ModelMap modelMap){\n            modelMap.put(\"peserta\",pesertaPagingDao.findAll());\n            return \"/peserta/list\";\n        }\n\n        @RequestMapping(value = \"/form\", method = RequestMethod.GET)\n        public void tampilkanForm(\n                @RequestParam(required = false, name = \"id\") PesertaPaging peserta,\n                ModelMap mm){\n            if(peserta != null){\n                mm.addAttribute(\"peserta\", peserta);\n            } else {\n                mm.addAttribute(\"peserta\", new PesertaPaging());\n            }\n        }\n        @RequestMapping(value = \"/form\", method = RequestMethod.POST)\n        public String prosesForm(@ModelAttribute @Valid PesertaPaging p, BindingResult hasilValidasi){\n            if(hasilValidasi.hasErrors()){\n                return \"/peserta/form\";\n            }\n            pesertaPagingDao.save(p);\n            return \"redirect:list\";\n        }\n        @RequestMapping(value = \"/hapus\")\n        public String hapusPeserta(@RequestParam(name = \"id\")String id,ModelMap modelMap){\n            pesertaPagingDao.delete(id);\n            return \"redirect:list\";\n        }\n    }\n  ```\n- Membuat UI (src/main/resources/templates/peserta/list.html)\n  ```\n    <html xmlns:th=\"http://www.thymeleaf.org\">\n    <head>\n        <title>Aplikasi Spring Boot</title>\n        <link rel=\"stylesheet\" th:href=\"@{/css/bootstrap.min.css}\"  media=\"screen\"/>\n        <link rel=\"stylesheet\" th:href=\"@{/css/starter-template.css}\" media=\"screen\"/>\n\n    </head>\n\n    <body>\n\n    <nav class=\"navbar navbar-inverse navbar-fixed-top\">\n        <div class=\"container\">\n            <div class=\"navbar-header\">\n                <button type=\"button\" class=\"navbar-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#navbar\" aria-expanded=\"false\" aria-controls=\"navbar\">\n                    <span class=\"sr-only\">Toggle navigation</span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                </button>\n                <a class=\"navbar-brand\" th:href=\"@{/}\">ciazhar</a>\n            </div>\n            <div id=\"navbar\" class=\"collapse navbar-collapse\">\n                <ul class=\"nav navbar-nav\">\n                    <li class=\"active\"><a th:href=\"@{/peserta}\">Daftar Peserta</a></li>\n                    <li><a href=\"#about\">About</a></li>\n                    <li><a href=\"#contact\">Contact</a></li>\n                </ul>\n            </div><!--/.nav-collapse -->\n        </div>\n    </nav>\n\n\n\n    <div class=\"container\">\n        <h1>Daftar Peserta</h1>\n        <div th:if=\"${not #lists.isEmpty(peserta)}\">\n            <table class=\"table table-striped\">\n                <tr>\n                    <th>Nama</th>\n                    <th>Email</th>\n                    <th>No Hp</th>\n                    <th>Action</th>\n                </tr>\n                <tr th:each=\"pesertas : ${peserta}\">\n                    <td th:text=\"${pesertas.nama}\"></td>\n                    <td th:text=\"${pesertas.email}\"></td>\n                    <td th:text=\"${pesertas.noHp}\"></td>\n                    <td>\n                        <a th:href=\"@{/peserta/form(id=${pesertas.id})}\"><span class=\"glyphicon glyphicon-edit\"></span></a>\n                        <a th:href=\"@{/peserta/hapus(id=${pesertas.id})}\"><span class=\"glyphicon glyphicon-remove\"></span></a>\n                    </td>\n                </tr>\n            </table>\n        </div>\n        <div>\n            <a class=\"btn btn-default\" th:href=\"@{/peserta/form}\">New</a>\n        </div>\n    </div>\n\n\n    <script th:src=\"@{/js/jquery.min.js}\"></script>\n    <script th:src=\"@{/js/bootstrap.min.js}\"></script>\n    </body>\n    </html>\n  ```\n- Membuat UI (src/main/resources/templates/peserta/form.html)\n  ```\n    <html xmlns:th=\"http://www.thymeleaf.org\">\n    <head>\n        <title>Aplikasi Spring Boot</title>\n        <link rel=\"stylesheet\" th:href=\"@{/css/bootstrap.min.css}\"  media=\"screen\"/>\n        <link rel=\"stylesheet\" th:href=\"@{/css/starter-template.css}\" media=\"screen\"/>\n\n    </head>\n\n    <body>\n\n    <nav class=\"navbar navbar-inverse navbar-fixed-top\">\n        <div class=\"container\">\n            <div class=\"navbar-header\">\n                <button type=\"button\" class=\"navbar-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#navbar\" aria-expanded=\"false\" aria-controls=\"navbar\">\n                    <span class=\"sr-only\">Toggle navigation</span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                </button>\n                <a class=\"navbar-brand\" th:href=\"@{/}\">ciazhar</a>\n            </div>\n            <div id=\"navbar\" class=\"collapse navbar-collapse\">\n                <ul class=\"nav navbar-nav\">\n                    <li class=\"active\"><a th:href=\"@{/peserta}\">Daftar Peserta</a></li>\n                    <li><a href=\"#about\">About</a></li>\n                    <li><a href=\"#contact\">Contact</a></li>\n                </ul>\n            </div><!--/.nav-collapse -->\n        </div>\n    </nav>\n\n\n    <div class=\"container\">\n        <h1>Form Peserta</h1>\n        <div class=\"row\">\n            <div class=\"col-sm-8\">\n                <form class=\"form-horizontal\" th:object=\"${peserta}\" th:action=\"@{/peserta/form}\" method=\"post\">\n                    <input type=\"hidden\" th:field=\"*{id}\"/>\n                    <div class=\"form-group\">\n                        <label class=\"col-sm-2 control-label\">Nama:</label>\n                        <div class=\"col-sm-10\">\n                            <input type=\"text\" class=\"form-control\" th:field=\"*{nama}\"/>\n                        </div>\n                    </div>\n\n                    <div class=\"form-group\">\n                        <label class=\"col-sm-2 control-label\">Email:</label>\n                        <div class=\"col-sm-10\">\n                            <input type=\"email\" class=\"form-control\" th:field=\"*{email}\"/>\n                        </div>\n                    </div>\n\n                    <div class=\"form-group\">\n                        <label class=\"col-sm-2 control-label\">Nomer HP:</label>\n                        <div class=\"col-sm-10\">\n                            <input type=\"text\" class=\"form-control\" th:field=\"*{noHp}\"/>\n                        </div>\n                    </div>\n\n                    <div class=\"form-group\">\n                        <button type=\"submit\" class=\"btn btn-deffault\">Simpan</button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n\n\n    <script th:src=\"@{/js/jquery.min.js}\"></script>\n    <script th:src=\"@{/js/bootstrap.min.js}\"></script>\n    </body>\n    </html>\n  ```\n","source":"_posts/pemrograman/spring/3.2.1-menggunakan-paging-and-sorting-repository.md","raw":"---\ntitle: Menggunakan Paging and Sorting Repository\ndate: 2017-04-23 14:17:33\ncategories:\n  - Pemrograman\n  - Spring\n---\n![](/images/springboot.png)\n## Menggunakan Paging and Sorting Repository ##\n\n- Membuat model (src/main/java/domain/model/PesertaPaging.java)\n  ```\n    @Entity @Table(name = \"t_peserta\")\n    public class PesertaPaging {\n\n        @Id @GeneratedValue(generator = \"uuid\")\n        @GenericGenerator(name = \"uuid\", strategy = \"uuid2\")\n        private String id;\n\n        @Column(nullable=false)\n        @NotNull\n        @NotEmpty\n        @Size(min = 1, max = 150)\n        private String nama;\n\n        @Column(nullable=false,unique=true)\n        @Email\n        @NotNull\n        @NotEmpty\n        private String email;\n\n        @Column(nullable=false,unique=true)\n        @NotNull\n        @NotEmpty\n        private String noHp;\n    }\n  ```\n- Generate getter dan setter (src/main/java/domain/model/PesertaPaging.java)\n  ```\n    public String getId() {\n        return id;\n    }\n\n    public void setId(String id) {\n        this.id = id;\n    }\n\n    public String getNama() {\n        return nama;\n    }\n\n    public void setNama(String nama) {\n        this.nama = nama;\n    }\n\n    public String getEmail() {\n        return email;\n    }\n\n    public void setEmail(String email) {\n        this.email = email;\n    }\n\n    public String getNoHp() {\n        return noHp;\n    }\n\n    public void setNoHp(String noHp) {\n        this.noHp = noHp;\n    }\n  ```\n- Membuat dao (src/main/java/domain/dao/PesertaPagingDao.java)\n  ```\n    public interface PesertaPagingDao extends PagingAndSortingRepository<PesertaPaging, String>{\n\n    }\n  ```\n- Membuat controller (src/main/java/domain/controller/PesertaPagingController.java)\n  ```\n    @Controller\n    @RequestMapping(\"/peserta\")\n    public class PesertaPagingController {\n\n        @Autowired\n        PesertaPagingDao pesertaPagingDao;\n\n        @RequestMapping(\"/list\")\n        public String listPeserta(ModelMap modelMap){\n            modelMap.put(\"peserta\",pesertaPagingDao.findAll());\n            return \"/peserta/list\";\n        }\n\n        @RequestMapping(value = \"/form\", method = RequestMethod.GET)\n        public void tampilkanForm(\n                @RequestParam(required = false, name = \"id\") PesertaPaging peserta,\n                ModelMap mm){\n            if(peserta != null){\n                mm.addAttribute(\"peserta\", peserta);\n            } else {\n                mm.addAttribute(\"peserta\", new PesertaPaging());\n            }\n        }\n        @RequestMapping(value = \"/form\", method = RequestMethod.POST)\n        public String prosesForm(@ModelAttribute @Valid PesertaPaging p, BindingResult hasilValidasi){\n            if(hasilValidasi.hasErrors()){\n                return \"/peserta/form\";\n            }\n            pesertaPagingDao.save(p);\n            return \"redirect:list\";\n        }\n        @RequestMapping(value = \"/hapus\")\n        public String hapusPeserta(@RequestParam(name = \"id\")String id,ModelMap modelMap){\n            pesertaPagingDao.delete(id);\n            return \"redirect:list\";\n        }\n    }\n  ```\n- Membuat UI (src/main/resources/templates/peserta/list.html)\n  ```\n    <html xmlns:th=\"http://www.thymeleaf.org\">\n    <head>\n        <title>Aplikasi Spring Boot</title>\n        <link rel=\"stylesheet\" th:href=\"@{/css/bootstrap.min.css}\"  media=\"screen\"/>\n        <link rel=\"stylesheet\" th:href=\"@{/css/starter-template.css}\" media=\"screen\"/>\n\n    </head>\n\n    <body>\n\n    <nav class=\"navbar navbar-inverse navbar-fixed-top\">\n        <div class=\"container\">\n            <div class=\"navbar-header\">\n                <button type=\"button\" class=\"navbar-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#navbar\" aria-expanded=\"false\" aria-controls=\"navbar\">\n                    <span class=\"sr-only\">Toggle navigation</span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                </button>\n                <a class=\"navbar-brand\" th:href=\"@{/}\">ciazhar</a>\n            </div>\n            <div id=\"navbar\" class=\"collapse navbar-collapse\">\n                <ul class=\"nav navbar-nav\">\n                    <li class=\"active\"><a th:href=\"@{/peserta}\">Daftar Peserta</a></li>\n                    <li><a href=\"#about\">About</a></li>\n                    <li><a href=\"#contact\">Contact</a></li>\n                </ul>\n            </div><!--/.nav-collapse -->\n        </div>\n    </nav>\n\n\n\n    <div class=\"container\">\n        <h1>Daftar Peserta</h1>\n        <div th:if=\"${not #lists.isEmpty(peserta)}\">\n            <table class=\"table table-striped\">\n                <tr>\n                    <th>Nama</th>\n                    <th>Email</th>\n                    <th>No Hp</th>\n                    <th>Action</th>\n                </tr>\n                <tr th:each=\"pesertas : ${peserta}\">\n                    <td th:text=\"${pesertas.nama}\"></td>\n                    <td th:text=\"${pesertas.email}\"></td>\n                    <td th:text=\"${pesertas.noHp}\"></td>\n                    <td>\n                        <a th:href=\"@{/peserta/form(id=${pesertas.id})}\"><span class=\"glyphicon glyphicon-edit\"></span></a>\n                        <a th:href=\"@{/peserta/hapus(id=${pesertas.id})}\"><span class=\"glyphicon glyphicon-remove\"></span></a>\n                    </td>\n                </tr>\n            </table>\n        </div>\n        <div>\n            <a class=\"btn btn-default\" th:href=\"@{/peserta/form}\">New</a>\n        </div>\n    </div>\n\n\n    <script th:src=\"@{/js/jquery.min.js}\"></script>\n    <script th:src=\"@{/js/bootstrap.min.js}\"></script>\n    </body>\n    </html>\n  ```\n- Membuat UI (src/main/resources/templates/peserta/form.html)\n  ```\n    <html xmlns:th=\"http://www.thymeleaf.org\">\n    <head>\n        <title>Aplikasi Spring Boot</title>\n        <link rel=\"stylesheet\" th:href=\"@{/css/bootstrap.min.css}\"  media=\"screen\"/>\n        <link rel=\"stylesheet\" th:href=\"@{/css/starter-template.css}\" media=\"screen\"/>\n\n    </head>\n\n    <body>\n\n    <nav class=\"navbar navbar-inverse navbar-fixed-top\">\n        <div class=\"container\">\n            <div class=\"navbar-header\">\n                <button type=\"button\" class=\"navbar-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#navbar\" aria-expanded=\"false\" aria-controls=\"navbar\">\n                    <span class=\"sr-only\">Toggle navigation</span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                </button>\n                <a class=\"navbar-brand\" th:href=\"@{/}\">ciazhar</a>\n            </div>\n            <div id=\"navbar\" class=\"collapse navbar-collapse\">\n                <ul class=\"nav navbar-nav\">\n                    <li class=\"active\"><a th:href=\"@{/peserta}\">Daftar Peserta</a></li>\n                    <li><a href=\"#about\">About</a></li>\n                    <li><a href=\"#contact\">Contact</a></li>\n                </ul>\n            </div><!--/.nav-collapse -->\n        </div>\n    </nav>\n\n\n    <div class=\"container\">\n        <h1>Form Peserta</h1>\n        <div class=\"row\">\n            <div class=\"col-sm-8\">\n                <form class=\"form-horizontal\" th:object=\"${peserta}\" th:action=\"@{/peserta/form}\" method=\"post\">\n                    <input type=\"hidden\" th:field=\"*{id}\"/>\n                    <div class=\"form-group\">\n                        <label class=\"col-sm-2 control-label\">Nama:</label>\n                        <div class=\"col-sm-10\">\n                            <input type=\"text\" class=\"form-control\" th:field=\"*{nama}\"/>\n                        </div>\n                    </div>\n\n                    <div class=\"form-group\">\n                        <label class=\"col-sm-2 control-label\">Email:</label>\n                        <div class=\"col-sm-10\">\n                            <input type=\"email\" class=\"form-control\" th:field=\"*{email}\"/>\n                        </div>\n                    </div>\n\n                    <div class=\"form-group\">\n                        <label class=\"col-sm-2 control-label\">Nomer HP:</label>\n                        <div class=\"col-sm-10\">\n                            <input type=\"text\" class=\"form-control\" th:field=\"*{noHp}\"/>\n                        </div>\n                    </div>\n\n                    <div class=\"form-group\">\n                        <button type=\"submit\" class=\"btn btn-deffault\">Simpan</button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n\n\n    <script th:src=\"@{/js/jquery.min.js}\"></script>\n    <script th:src=\"@{/js/bootstrap.min.js}\"></script>\n    </body>\n    </html>\n  ```\n","slug":"pemrograman/spring/3.2.1-menggunakan-paging-and-sorting-repository","published":1,"updated":"2017-05-07T09:21:17.548Z","_id":"cj2ed41qb002j8jlpblep9912","comments":1,"layout":"post","photos":[],"link":"","content":"<p><img src=\"/images/springboot.png\" alt=\"\"></p>\n<h2 id=\"Menggunakan-Paging-and-Sorting-Repository\"><a href=\"#Menggunakan-Paging-and-Sorting-Repository\" class=\"headerlink\" title=\"Menggunakan Paging and Sorting Repository\"></a>Menggunakan Paging and Sorting Repository</h2><ul>\n<li><p>Membuat model (src/main/java/domain/model/PesertaPaging.java)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div></pre></td><td class=\"code\"><pre><div class=\"line\">@Entity @Table(name = &quot;t_peserta&quot;)</div><div class=\"line\">public class PesertaPaging &#123;</div><div class=\"line\"></div><div class=\"line\">    @Id @GeneratedValue(generator = &quot;uuid&quot;)</div><div class=\"line\">    @GenericGenerator(name = &quot;uuid&quot;, strategy = &quot;uuid2&quot;)</div><div class=\"line\">    private String id;</div><div class=\"line\"></div><div class=\"line\">    @Column(nullable=false)</div><div class=\"line\">    @NotNull</div><div class=\"line\">    @NotEmpty</div><div class=\"line\">    @Size(min = 1, max = 150)</div><div class=\"line\">    private String nama;</div><div class=\"line\"></div><div class=\"line\">    @Column(nullable=false,unique=true)</div><div class=\"line\">    @Email</div><div class=\"line\">    @NotNull</div><div class=\"line\">    @NotEmpty</div><div class=\"line\">    private String email;</div><div class=\"line\"></div><div class=\"line\">    @Column(nullable=false,unique=true)</div><div class=\"line\">    @NotNull</div><div class=\"line\">    @NotEmpty</div><div class=\"line\">    private String noHp;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n<li><p>Generate getter dan setter (src/main/java/domain/model/PesertaPaging.java)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div></pre></td><td class=\"code\"><pre><div class=\"line\">public String getId() &#123;</div><div class=\"line\">    return id;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">public void setId(String id) &#123;</div><div class=\"line\">    this.id = id;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">public String getNama() &#123;</div><div class=\"line\">    return nama;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">public void setNama(String nama) &#123;</div><div class=\"line\">    this.nama = nama;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">public String getEmail() &#123;</div><div class=\"line\">    return email;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">public void setEmail(String email) &#123;</div><div class=\"line\">    this.email = email;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">public String getNoHp() &#123;</div><div class=\"line\">    return noHp;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">public void setNoHp(String noHp) &#123;</div><div class=\"line\">    this.noHp = noHp;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n<li><p>Membuat dao (src/main/java/domain/dao/PesertaPagingDao.java)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">public interface PesertaPagingDao extends PagingAndSortingRepository&lt;PesertaPaging, String&gt;&#123;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n<li><p>Membuat controller (src/main/java/domain/controller/PesertaPagingController.java)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div></pre></td><td class=\"code\"><pre><div class=\"line\">@Controller</div><div class=\"line\">@RequestMapping(&quot;/peserta&quot;)</div><div class=\"line\">public class PesertaPagingController &#123;</div><div class=\"line\"></div><div class=\"line\">    @Autowired</div><div class=\"line\">    PesertaPagingDao pesertaPagingDao;</div><div class=\"line\"></div><div class=\"line\">    @RequestMapping(&quot;/list&quot;)</div><div class=\"line\">    public String listPeserta(ModelMap modelMap)&#123;</div><div class=\"line\">        modelMap.put(&quot;peserta&quot;,pesertaPagingDao.findAll());</div><div class=\"line\">        return &quot;/peserta/list&quot;;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    @RequestMapping(value = &quot;/form&quot;, method = RequestMethod.GET)</div><div class=\"line\">    public void tampilkanForm(</div><div class=\"line\">            @RequestParam(required = false, name = &quot;id&quot;) PesertaPaging peserta,</div><div class=\"line\">            ModelMap mm)&#123;</div><div class=\"line\">        if(peserta != null)&#123;</div><div class=\"line\">            mm.addAttribute(&quot;peserta&quot;, peserta);</div><div class=\"line\">        &#125; else &#123;</div><div class=\"line\">            mm.addAttribute(&quot;peserta&quot;, new PesertaPaging());</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    @RequestMapping(value = &quot;/form&quot;, method = RequestMethod.POST)</div><div class=\"line\">    public String prosesForm(@ModelAttribute @Valid PesertaPaging p, BindingResult hasilValidasi)&#123;</div><div class=\"line\">        if(hasilValidasi.hasErrors())&#123;</div><div class=\"line\">            return &quot;/peserta/form&quot;;</div><div class=\"line\">        &#125;</div><div class=\"line\">        pesertaPagingDao.save(p);</div><div class=\"line\">        return &quot;redirect:list&quot;;</div><div class=\"line\">    &#125;</div><div class=\"line\">    @RequestMapping(value = &quot;/hapus&quot;)</div><div class=\"line\">    public String hapusPeserta(@RequestParam(name = &quot;id&quot;)String id,ModelMap modelMap)&#123;</div><div class=\"line\">        pesertaPagingDao.delete(id);</div><div class=\"line\">        return &quot;redirect:list&quot;;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n<li><p>Membuat UI (src/main/resources/templates/peserta/list.html)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;html xmlns:th=&quot;http://www.thymeleaf.org&quot;&gt;</div><div class=\"line\">&lt;head&gt;</div><div class=\"line\">    &lt;title&gt;Aplikasi Spring Boot&lt;/title&gt;</div><div class=\"line\">    &lt;link rel=&quot;stylesheet&quot; th:href=&quot;@&#123;/css/bootstrap.min.css&#125;&quot;  media=&quot;screen&quot;/&gt;</div><div class=\"line\">    &lt;link rel=&quot;stylesheet&quot; th:href=&quot;@&#123;/css/starter-template.css&#125;&quot; media=&quot;screen&quot;/&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;/head&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;body&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;nav class=&quot;navbar navbar-inverse navbar-fixed-top&quot;&gt;</div><div class=\"line\">    &lt;div class=&quot;container&quot;&gt;</div><div class=\"line\">        &lt;div class=&quot;navbar-header&quot;&gt;</div><div class=\"line\">            &lt;button type=&quot;button&quot; class=&quot;navbar-toggle collapsed&quot; data-toggle=&quot;collapse&quot; data-target=&quot;#navbar&quot; aria-expanded=&quot;false&quot; aria-controls=&quot;navbar&quot;&gt;</div><div class=\"line\">                &lt;span class=&quot;sr-only&quot;&gt;Toggle navigation&lt;/span&gt;</div><div class=\"line\">                &lt;span class=&quot;icon-bar&quot;&gt;&lt;/span&gt;</div><div class=\"line\">                &lt;span class=&quot;icon-bar&quot;&gt;&lt;/span&gt;</div><div class=\"line\">                &lt;span class=&quot;icon-bar&quot;&gt;&lt;/span&gt;</div><div class=\"line\">            &lt;/button&gt;</div><div class=\"line\">            &lt;a class=&quot;navbar-brand&quot; th:href=&quot;@&#123;/&#125;&quot;&gt;ciazhar&lt;/a&gt;</div><div class=\"line\">        &lt;/div&gt;</div><div class=\"line\">        &lt;div id=&quot;navbar&quot; class=&quot;collapse navbar-collapse&quot;&gt;</div><div class=\"line\">            &lt;ul class=&quot;nav navbar-nav&quot;&gt;</div><div class=\"line\">                &lt;li class=&quot;active&quot;&gt;&lt;a th:href=&quot;@&#123;/peserta&#125;&quot;&gt;Daftar Peserta&lt;/a&gt;&lt;/li&gt;</div><div class=\"line\">                &lt;li&gt;&lt;a href=&quot;#about&quot;&gt;About&lt;/a&gt;&lt;/li&gt;</div><div class=\"line\">                &lt;li&gt;&lt;a href=&quot;#contact&quot;&gt;Contact&lt;/a&gt;&lt;/li&gt;</div><div class=\"line\">            &lt;/ul&gt;</div><div class=\"line\">        &lt;/div&gt;&lt;!--/.nav-collapse --&gt;</div><div class=\"line\">    &lt;/div&gt;</div><div class=\"line\">&lt;/nav&gt;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">&lt;div class=&quot;container&quot;&gt;</div><div class=\"line\">    &lt;h1&gt;Daftar Peserta&lt;/h1&gt;</div><div class=\"line\">    &lt;div th:if=&quot;$&#123;not #lists.isEmpty(peserta)&#125;&quot;&gt;</div><div class=\"line\">        &lt;table class=&quot;table table-striped&quot;&gt;</div><div class=\"line\">            &lt;tr&gt;</div><div class=\"line\">                &lt;th&gt;Nama&lt;/th&gt;</div><div class=\"line\">                &lt;th&gt;Email&lt;/th&gt;</div><div class=\"line\">                &lt;th&gt;No Hp&lt;/th&gt;</div><div class=\"line\">                &lt;th&gt;Action&lt;/th&gt;</div><div class=\"line\">            &lt;/tr&gt;</div><div class=\"line\">            &lt;tr th:each=&quot;pesertas : $&#123;peserta&#125;&quot;&gt;</div><div class=\"line\">                &lt;td th:text=&quot;$&#123;pesertas.nama&#125;&quot;&gt;&lt;/td&gt;</div><div class=\"line\">                &lt;td th:text=&quot;$&#123;pesertas.email&#125;&quot;&gt;&lt;/td&gt;</div><div class=\"line\">                &lt;td th:text=&quot;$&#123;pesertas.noHp&#125;&quot;&gt;&lt;/td&gt;</div><div class=\"line\">                &lt;td&gt;</div><div class=\"line\">                    &lt;a th:href=&quot;@&#123;/peserta/form(id=$&#123;pesertas.id&#125;)&#125;&quot;&gt;&lt;span class=&quot;glyphicon glyphicon-edit&quot;&gt;&lt;/span&gt;&lt;/a&gt;</div><div class=\"line\">                    &lt;a th:href=&quot;@&#123;/peserta/hapus(id=$&#123;pesertas.id&#125;)&#125;&quot;&gt;&lt;span class=&quot;glyphicon glyphicon-remove&quot;&gt;&lt;/span&gt;&lt;/a&gt;</div><div class=\"line\">                &lt;/td&gt;</div><div class=\"line\">            &lt;/tr&gt;</div><div class=\"line\">        &lt;/table&gt;</div><div class=\"line\">    &lt;/div&gt;</div><div class=\"line\">    &lt;div&gt;</div><div class=\"line\">        &lt;a class=&quot;btn btn-default&quot; th:href=&quot;@&#123;/peserta/form&#125;&quot;&gt;New&lt;/a&gt;</div><div class=\"line\">    &lt;/div&gt;</div><div class=\"line\">&lt;/div&gt;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">&lt;script th:src=&quot;@&#123;/js/jquery.min.js&#125;&quot;&gt;&lt;/script&gt;</div><div class=\"line\">&lt;script th:src=&quot;@&#123;/js/bootstrap.min.js&#125;&quot;&gt;&lt;/script&gt;</div><div class=\"line\">&lt;/body&gt;</div><div class=\"line\">&lt;/html&gt;</div></pre></td></tr></table></figure>\n</li>\n<li><p>Membuat UI (src/main/resources/templates/peserta/form.html)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;html xmlns:th=&quot;http://www.thymeleaf.org&quot;&gt;</div><div class=\"line\">&lt;head&gt;</div><div class=\"line\">    &lt;title&gt;Aplikasi Spring Boot&lt;/title&gt;</div><div class=\"line\">    &lt;link rel=&quot;stylesheet&quot; th:href=&quot;@&#123;/css/bootstrap.min.css&#125;&quot;  media=&quot;screen&quot;/&gt;</div><div class=\"line\">    &lt;link rel=&quot;stylesheet&quot; th:href=&quot;@&#123;/css/starter-template.css&#125;&quot; media=&quot;screen&quot;/&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;/head&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;body&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;nav class=&quot;navbar navbar-inverse navbar-fixed-top&quot;&gt;</div><div class=\"line\">    &lt;div class=&quot;container&quot;&gt;</div><div class=\"line\">        &lt;div class=&quot;navbar-header&quot;&gt;</div><div class=\"line\">            &lt;button type=&quot;button&quot; class=&quot;navbar-toggle collapsed&quot; data-toggle=&quot;collapse&quot; data-target=&quot;#navbar&quot; aria-expanded=&quot;false&quot; aria-controls=&quot;navbar&quot;&gt;</div><div class=\"line\">                &lt;span class=&quot;sr-only&quot;&gt;Toggle navigation&lt;/span&gt;</div><div class=\"line\">                &lt;span class=&quot;icon-bar&quot;&gt;&lt;/span&gt;</div><div class=\"line\">                &lt;span class=&quot;icon-bar&quot;&gt;&lt;/span&gt;</div><div class=\"line\">                &lt;span class=&quot;icon-bar&quot;&gt;&lt;/span&gt;</div><div class=\"line\">            &lt;/button&gt;</div><div class=\"line\">            &lt;a class=&quot;navbar-brand&quot; th:href=&quot;@&#123;/&#125;&quot;&gt;ciazhar&lt;/a&gt;</div><div class=\"line\">        &lt;/div&gt;</div><div class=\"line\">        &lt;div id=&quot;navbar&quot; class=&quot;collapse navbar-collapse&quot;&gt;</div><div class=\"line\">            &lt;ul class=&quot;nav navbar-nav&quot;&gt;</div><div class=\"line\">                &lt;li class=&quot;active&quot;&gt;&lt;a th:href=&quot;@&#123;/peserta&#125;&quot;&gt;Daftar Peserta&lt;/a&gt;&lt;/li&gt;</div><div class=\"line\">                &lt;li&gt;&lt;a href=&quot;#about&quot;&gt;About&lt;/a&gt;&lt;/li&gt;</div><div class=\"line\">                &lt;li&gt;&lt;a href=&quot;#contact&quot;&gt;Contact&lt;/a&gt;&lt;/li&gt;</div><div class=\"line\">            &lt;/ul&gt;</div><div class=\"line\">        &lt;/div&gt;&lt;!--/.nav-collapse --&gt;</div><div class=\"line\">    &lt;/div&gt;</div><div class=\"line\">&lt;/nav&gt;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">&lt;div class=&quot;container&quot;&gt;</div><div class=\"line\">    &lt;h1&gt;Form Peserta&lt;/h1&gt;</div><div class=\"line\">    &lt;div class=&quot;row&quot;&gt;</div><div class=\"line\">        &lt;div class=&quot;col-sm-8&quot;&gt;</div><div class=\"line\">            &lt;form class=&quot;form-horizontal&quot; th:object=&quot;$&#123;peserta&#125;&quot; th:action=&quot;@&#123;/peserta/form&#125;&quot; method=&quot;post&quot;&gt;</div><div class=\"line\">                &lt;input type=&quot;hidden&quot; th:field=&quot;*&#123;id&#125;&quot;/&gt;</div><div class=\"line\">                &lt;div class=&quot;form-group&quot;&gt;</div><div class=\"line\">                    &lt;label class=&quot;col-sm-2 control-label&quot;&gt;Nama:&lt;/label&gt;</div><div class=\"line\">                    &lt;div class=&quot;col-sm-10&quot;&gt;</div><div class=\"line\">                        &lt;input type=&quot;text&quot; class=&quot;form-control&quot; th:field=&quot;*&#123;nama&#125;&quot;/&gt;</div><div class=\"line\">                    &lt;/div&gt;</div><div class=\"line\">                &lt;/div&gt;</div><div class=\"line\"></div><div class=\"line\">                &lt;div class=&quot;form-group&quot;&gt;</div><div class=\"line\">                    &lt;label class=&quot;col-sm-2 control-label&quot;&gt;Email:&lt;/label&gt;</div><div class=\"line\">                    &lt;div class=&quot;col-sm-10&quot;&gt;</div><div class=\"line\">                        &lt;input type=&quot;email&quot; class=&quot;form-control&quot; th:field=&quot;*&#123;email&#125;&quot;/&gt;</div><div class=\"line\">                    &lt;/div&gt;</div><div class=\"line\">                &lt;/div&gt;</div><div class=\"line\"></div><div class=\"line\">                &lt;div class=&quot;form-group&quot;&gt;</div><div class=\"line\">                    &lt;label class=&quot;col-sm-2 control-label&quot;&gt;Nomer HP:&lt;/label&gt;</div><div class=\"line\">                    &lt;div class=&quot;col-sm-10&quot;&gt;</div><div class=\"line\">                        &lt;input type=&quot;text&quot; class=&quot;form-control&quot; th:field=&quot;*&#123;noHp&#125;&quot;/&gt;</div><div class=\"line\">                    &lt;/div&gt;</div><div class=\"line\">                &lt;/div&gt;</div><div class=\"line\"></div><div class=\"line\">                &lt;div class=&quot;form-group&quot;&gt;</div><div class=\"line\">                    &lt;button type=&quot;submit&quot; class=&quot;btn btn-deffault&quot;&gt;Simpan&lt;/button&gt;</div><div class=\"line\">                &lt;/div&gt;</div><div class=\"line\">            &lt;/form&gt;</div><div class=\"line\">        &lt;/div&gt;</div><div class=\"line\">    &lt;/div&gt;</div><div class=\"line\">&lt;/div&gt;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">&lt;script th:src=&quot;@&#123;/js/jquery.min.js&#125;&quot;&gt;&lt;/script&gt;</div><div class=\"line\">&lt;script th:src=&quot;@&#123;/js/bootstrap.min.js&#125;&quot;&gt;&lt;/script&gt;</div><div class=\"line\">&lt;/body&gt;</div><div class=\"line\">&lt;/html&gt;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n","excerpt":"","more":"<p><img src=\"/images/springboot.png\" alt=\"\"></p>\n<h2 id=\"Menggunakan-Paging-and-Sorting-Repository\"><a href=\"#Menggunakan-Paging-and-Sorting-Repository\" class=\"headerlink\" title=\"Menggunakan Paging and Sorting Repository\"></a>Menggunakan Paging and Sorting Repository</h2><ul>\n<li><p>Membuat model (src/main/java/domain/model/PesertaPaging.java)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div></pre></td><td class=\"code\"><pre><div class=\"line\">@Entity @Table(name = &quot;t_peserta&quot;)</div><div class=\"line\">public class PesertaPaging &#123;</div><div class=\"line\"></div><div class=\"line\">    @Id @GeneratedValue(generator = &quot;uuid&quot;)</div><div class=\"line\">    @GenericGenerator(name = &quot;uuid&quot;, strategy = &quot;uuid2&quot;)</div><div class=\"line\">    private String id;</div><div class=\"line\"></div><div class=\"line\">    @Column(nullable=false)</div><div class=\"line\">    @NotNull</div><div class=\"line\">    @NotEmpty</div><div class=\"line\">    @Size(min = 1, max = 150)</div><div class=\"line\">    private String nama;</div><div class=\"line\"></div><div class=\"line\">    @Column(nullable=false,unique=true)</div><div class=\"line\">    @Email</div><div class=\"line\">    @NotNull</div><div class=\"line\">    @NotEmpty</div><div class=\"line\">    private String email;</div><div class=\"line\"></div><div class=\"line\">    @Column(nullable=false,unique=true)</div><div class=\"line\">    @NotNull</div><div class=\"line\">    @NotEmpty</div><div class=\"line\">    private String noHp;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n<li><p>Generate getter dan setter (src/main/java/domain/model/PesertaPaging.java)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div></pre></td><td class=\"code\"><pre><div class=\"line\">public String getId() &#123;</div><div class=\"line\">    return id;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">public void setId(String id) &#123;</div><div class=\"line\">    this.id = id;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">public String getNama() &#123;</div><div class=\"line\">    return nama;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">public void setNama(String nama) &#123;</div><div class=\"line\">    this.nama = nama;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">public String getEmail() &#123;</div><div class=\"line\">    return email;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">public void setEmail(String email) &#123;</div><div class=\"line\">    this.email = email;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">public String getNoHp() &#123;</div><div class=\"line\">    return noHp;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">public void setNoHp(String noHp) &#123;</div><div class=\"line\">    this.noHp = noHp;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n<li><p>Membuat dao (src/main/java/domain/dao/PesertaPagingDao.java)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">public interface PesertaPagingDao extends PagingAndSortingRepository&lt;PesertaPaging, String&gt;&#123;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n<li><p>Membuat controller (src/main/java/domain/controller/PesertaPagingController.java)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div></pre></td><td class=\"code\"><pre><div class=\"line\">@Controller</div><div class=\"line\">@RequestMapping(&quot;/peserta&quot;)</div><div class=\"line\">public class PesertaPagingController &#123;</div><div class=\"line\"></div><div class=\"line\">    @Autowired</div><div class=\"line\">    PesertaPagingDao pesertaPagingDao;</div><div class=\"line\"></div><div class=\"line\">    @RequestMapping(&quot;/list&quot;)</div><div class=\"line\">    public String listPeserta(ModelMap modelMap)&#123;</div><div class=\"line\">        modelMap.put(&quot;peserta&quot;,pesertaPagingDao.findAll());</div><div class=\"line\">        return &quot;/peserta/list&quot;;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    @RequestMapping(value = &quot;/form&quot;, method = RequestMethod.GET)</div><div class=\"line\">    public void tampilkanForm(</div><div class=\"line\">            @RequestParam(required = false, name = &quot;id&quot;) PesertaPaging peserta,</div><div class=\"line\">            ModelMap mm)&#123;</div><div class=\"line\">        if(peserta != null)&#123;</div><div class=\"line\">            mm.addAttribute(&quot;peserta&quot;, peserta);</div><div class=\"line\">        &#125; else &#123;</div><div class=\"line\">            mm.addAttribute(&quot;peserta&quot;, new PesertaPaging());</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    @RequestMapping(value = &quot;/form&quot;, method = RequestMethod.POST)</div><div class=\"line\">    public String prosesForm(@ModelAttribute @Valid PesertaPaging p, BindingResult hasilValidasi)&#123;</div><div class=\"line\">        if(hasilValidasi.hasErrors())&#123;</div><div class=\"line\">            return &quot;/peserta/form&quot;;</div><div class=\"line\">        &#125;</div><div class=\"line\">        pesertaPagingDao.save(p);</div><div class=\"line\">        return &quot;redirect:list&quot;;</div><div class=\"line\">    &#125;</div><div class=\"line\">    @RequestMapping(value = &quot;/hapus&quot;)</div><div class=\"line\">    public String hapusPeserta(@RequestParam(name = &quot;id&quot;)String id,ModelMap modelMap)&#123;</div><div class=\"line\">        pesertaPagingDao.delete(id);</div><div class=\"line\">        return &quot;redirect:list&quot;;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n<li><p>Membuat UI (src/main/resources/templates/peserta/list.html)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;html xmlns:th=&quot;http://www.thymeleaf.org&quot;&gt;</div><div class=\"line\">&lt;head&gt;</div><div class=\"line\">    &lt;title&gt;Aplikasi Spring Boot&lt;/title&gt;</div><div class=\"line\">    &lt;link rel=&quot;stylesheet&quot; th:href=&quot;@&#123;/css/bootstrap.min.css&#125;&quot;  media=&quot;screen&quot;/&gt;</div><div class=\"line\">    &lt;link rel=&quot;stylesheet&quot; th:href=&quot;@&#123;/css/starter-template.css&#125;&quot; media=&quot;screen&quot;/&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;/head&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;body&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;nav class=&quot;navbar navbar-inverse navbar-fixed-top&quot;&gt;</div><div class=\"line\">    &lt;div class=&quot;container&quot;&gt;</div><div class=\"line\">        &lt;div class=&quot;navbar-header&quot;&gt;</div><div class=\"line\">            &lt;button type=&quot;button&quot; class=&quot;navbar-toggle collapsed&quot; data-toggle=&quot;collapse&quot; data-target=&quot;#navbar&quot; aria-expanded=&quot;false&quot; aria-controls=&quot;navbar&quot;&gt;</div><div class=\"line\">                &lt;span class=&quot;sr-only&quot;&gt;Toggle navigation&lt;/span&gt;</div><div class=\"line\">                &lt;span class=&quot;icon-bar&quot;&gt;&lt;/span&gt;</div><div class=\"line\">                &lt;span class=&quot;icon-bar&quot;&gt;&lt;/span&gt;</div><div class=\"line\">                &lt;span class=&quot;icon-bar&quot;&gt;&lt;/span&gt;</div><div class=\"line\">            &lt;/button&gt;</div><div class=\"line\">            &lt;a class=&quot;navbar-brand&quot; th:href=&quot;@&#123;/&#125;&quot;&gt;ciazhar&lt;/a&gt;</div><div class=\"line\">        &lt;/div&gt;</div><div class=\"line\">        &lt;div id=&quot;navbar&quot; class=&quot;collapse navbar-collapse&quot;&gt;</div><div class=\"line\">            &lt;ul class=&quot;nav navbar-nav&quot;&gt;</div><div class=\"line\">                &lt;li class=&quot;active&quot;&gt;&lt;a th:href=&quot;@&#123;/peserta&#125;&quot;&gt;Daftar Peserta&lt;/a&gt;&lt;/li&gt;</div><div class=\"line\">                &lt;li&gt;&lt;a href=&quot;#about&quot;&gt;About&lt;/a&gt;&lt;/li&gt;</div><div class=\"line\">                &lt;li&gt;&lt;a href=&quot;#contact&quot;&gt;Contact&lt;/a&gt;&lt;/li&gt;</div><div class=\"line\">            &lt;/ul&gt;</div><div class=\"line\">        &lt;/div&gt;&lt;!--/.nav-collapse --&gt;</div><div class=\"line\">    &lt;/div&gt;</div><div class=\"line\">&lt;/nav&gt;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">&lt;div class=&quot;container&quot;&gt;</div><div class=\"line\">    &lt;h1&gt;Daftar Peserta&lt;/h1&gt;</div><div class=\"line\">    &lt;div th:if=&quot;$&#123;not #lists.isEmpty(peserta)&#125;&quot;&gt;</div><div class=\"line\">        &lt;table class=&quot;table table-striped&quot;&gt;</div><div class=\"line\">            &lt;tr&gt;</div><div class=\"line\">                &lt;th&gt;Nama&lt;/th&gt;</div><div class=\"line\">                &lt;th&gt;Email&lt;/th&gt;</div><div class=\"line\">                &lt;th&gt;No Hp&lt;/th&gt;</div><div class=\"line\">                &lt;th&gt;Action&lt;/th&gt;</div><div class=\"line\">            &lt;/tr&gt;</div><div class=\"line\">            &lt;tr th:each=&quot;pesertas : $&#123;peserta&#125;&quot;&gt;</div><div class=\"line\">                &lt;td th:text=&quot;$&#123;pesertas.nama&#125;&quot;&gt;&lt;/td&gt;</div><div class=\"line\">                &lt;td th:text=&quot;$&#123;pesertas.email&#125;&quot;&gt;&lt;/td&gt;</div><div class=\"line\">                &lt;td th:text=&quot;$&#123;pesertas.noHp&#125;&quot;&gt;&lt;/td&gt;</div><div class=\"line\">                &lt;td&gt;</div><div class=\"line\">                    &lt;a th:href=&quot;@&#123;/peserta/form(id=$&#123;pesertas.id&#125;)&#125;&quot;&gt;&lt;span class=&quot;glyphicon glyphicon-edit&quot;&gt;&lt;/span&gt;&lt;/a&gt;</div><div class=\"line\">                    &lt;a th:href=&quot;@&#123;/peserta/hapus(id=$&#123;pesertas.id&#125;)&#125;&quot;&gt;&lt;span class=&quot;glyphicon glyphicon-remove&quot;&gt;&lt;/span&gt;&lt;/a&gt;</div><div class=\"line\">                &lt;/td&gt;</div><div class=\"line\">            &lt;/tr&gt;</div><div class=\"line\">        &lt;/table&gt;</div><div class=\"line\">    &lt;/div&gt;</div><div class=\"line\">    &lt;div&gt;</div><div class=\"line\">        &lt;a class=&quot;btn btn-default&quot; th:href=&quot;@&#123;/peserta/form&#125;&quot;&gt;New&lt;/a&gt;</div><div class=\"line\">    &lt;/div&gt;</div><div class=\"line\">&lt;/div&gt;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">&lt;script th:src=&quot;@&#123;/js/jquery.min.js&#125;&quot;&gt;&lt;/script&gt;</div><div class=\"line\">&lt;script th:src=&quot;@&#123;/js/bootstrap.min.js&#125;&quot;&gt;&lt;/script&gt;</div><div class=\"line\">&lt;/body&gt;</div><div class=\"line\">&lt;/html&gt;</div></pre></td></tr></table></figure>\n</li>\n<li><p>Membuat UI (src/main/resources/templates/peserta/form.html)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;html xmlns:th=&quot;http://www.thymeleaf.org&quot;&gt;</div><div class=\"line\">&lt;head&gt;</div><div class=\"line\">    &lt;title&gt;Aplikasi Spring Boot&lt;/title&gt;</div><div class=\"line\">    &lt;link rel=&quot;stylesheet&quot; th:href=&quot;@&#123;/css/bootstrap.min.css&#125;&quot;  media=&quot;screen&quot;/&gt;</div><div class=\"line\">    &lt;link rel=&quot;stylesheet&quot; th:href=&quot;@&#123;/css/starter-template.css&#125;&quot; media=&quot;screen&quot;/&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;/head&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;body&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;nav class=&quot;navbar navbar-inverse navbar-fixed-top&quot;&gt;</div><div class=\"line\">    &lt;div class=&quot;container&quot;&gt;</div><div class=\"line\">        &lt;div class=&quot;navbar-header&quot;&gt;</div><div class=\"line\">            &lt;button type=&quot;button&quot; class=&quot;navbar-toggle collapsed&quot; data-toggle=&quot;collapse&quot; data-target=&quot;#navbar&quot; aria-expanded=&quot;false&quot; aria-controls=&quot;navbar&quot;&gt;</div><div class=\"line\">                &lt;span class=&quot;sr-only&quot;&gt;Toggle navigation&lt;/span&gt;</div><div class=\"line\">                &lt;span class=&quot;icon-bar&quot;&gt;&lt;/span&gt;</div><div class=\"line\">                &lt;span class=&quot;icon-bar&quot;&gt;&lt;/span&gt;</div><div class=\"line\">                &lt;span class=&quot;icon-bar&quot;&gt;&lt;/span&gt;</div><div class=\"line\">            &lt;/button&gt;</div><div class=\"line\">            &lt;a class=&quot;navbar-brand&quot; th:href=&quot;@&#123;/&#125;&quot;&gt;ciazhar&lt;/a&gt;</div><div class=\"line\">        &lt;/div&gt;</div><div class=\"line\">        &lt;div id=&quot;navbar&quot; class=&quot;collapse navbar-collapse&quot;&gt;</div><div class=\"line\">            &lt;ul class=&quot;nav navbar-nav&quot;&gt;</div><div class=\"line\">                &lt;li class=&quot;active&quot;&gt;&lt;a th:href=&quot;@&#123;/peserta&#125;&quot;&gt;Daftar Peserta&lt;/a&gt;&lt;/li&gt;</div><div class=\"line\">                &lt;li&gt;&lt;a href=&quot;#about&quot;&gt;About&lt;/a&gt;&lt;/li&gt;</div><div class=\"line\">                &lt;li&gt;&lt;a href=&quot;#contact&quot;&gt;Contact&lt;/a&gt;&lt;/li&gt;</div><div class=\"line\">            &lt;/ul&gt;</div><div class=\"line\">        &lt;/div&gt;&lt;!--/.nav-collapse --&gt;</div><div class=\"line\">    &lt;/div&gt;</div><div class=\"line\">&lt;/nav&gt;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">&lt;div class=&quot;container&quot;&gt;</div><div class=\"line\">    &lt;h1&gt;Form Peserta&lt;/h1&gt;</div><div class=\"line\">    &lt;div class=&quot;row&quot;&gt;</div><div class=\"line\">        &lt;div class=&quot;col-sm-8&quot;&gt;</div><div class=\"line\">            &lt;form class=&quot;form-horizontal&quot; th:object=&quot;$&#123;peserta&#125;&quot; th:action=&quot;@&#123;/peserta/form&#125;&quot; method=&quot;post&quot;&gt;</div><div class=\"line\">                &lt;input type=&quot;hidden&quot; th:field=&quot;*&#123;id&#125;&quot;/&gt;</div><div class=\"line\">                &lt;div class=&quot;form-group&quot;&gt;</div><div class=\"line\">                    &lt;label class=&quot;col-sm-2 control-label&quot;&gt;Nama:&lt;/label&gt;</div><div class=\"line\">                    &lt;div class=&quot;col-sm-10&quot;&gt;</div><div class=\"line\">                        &lt;input type=&quot;text&quot; class=&quot;form-control&quot; th:field=&quot;*&#123;nama&#125;&quot;/&gt;</div><div class=\"line\">                    &lt;/div&gt;</div><div class=\"line\">                &lt;/div&gt;</div><div class=\"line\"></div><div class=\"line\">                &lt;div class=&quot;form-group&quot;&gt;</div><div class=\"line\">                    &lt;label class=&quot;col-sm-2 control-label&quot;&gt;Email:&lt;/label&gt;</div><div class=\"line\">                    &lt;div class=&quot;col-sm-10&quot;&gt;</div><div class=\"line\">                        &lt;input type=&quot;email&quot; class=&quot;form-control&quot; th:field=&quot;*&#123;email&#125;&quot;/&gt;</div><div class=\"line\">                    &lt;/div&gt;</div><div class=\"line\">                &lt;/div&gt;</div><div class=\"line\"></div><div class=\"line\">                &lt;div class=&quot;form-group&quot;&gt;</div><div class=\"line\">                    &lt;label class=&quot;col-sm-2 control-label&quot;&gt;Nomer HP:&lt;/label&gt;</div><div class=\"line\">                    &lt;div class=&quot;col-sm-10&quot;&gt;</div><div class=\"line\">                        &lt;input type=&quot;text&quot; class=&quot;form-control&quot; th:field=&quot;*&#123;noHp&#125;&quot;/&gt;</div><div class=\"line\">                    &lt;/div&gt;</div><div class=\"line\">                &lt;/div&gt;</div><div class=\"line\"></div><div class=\"line\">                &lt;div class=&quot;form-group&quot;&gt;</div><div class=\"line\">                    &lt;button type=&quot;submit&quot; class=&quot;btn btn-deffault&quot;&gt;Simpan&lt;/button&gt;</div><div class=\"line\">                &lt;/div&gt;</div><div class=\"line\">            &lt;/form&gt;</div><div class=\"line\">        &lt;/div&gt;</div><div class=\"line\">    &lt;/div&gt;</div><div class=\"line\">&lt;/div&gt;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">&lt;script th:src=&quot;@&#123;/js/jquery.min.js&#125;&quot;&gt;&lt;/script&gt;</div><div class=\"line\">&lt;script th:src=&quot;@&#123;/js/bootstrap.min.js&#125;&quot;&gt;&lt;/script&gt;</div><div class=\"line\">&lt;/body&gt;</div><div class=\"line\">&lt;/html&gt;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n"},{"title":"Menggunakan Entity Manager Factory","date":"2017-04-23T07:17:34.000Z","_content":"![](/images/springboot.png)\n## Menggunakan Entity Manager Factory ##\n- Buat Model Peserta(main/java/domain/entity/Peserta.java)\n  ```\n    @Entity\n    public class Peserta{\n      @Id @GeneratedValue(generator = \"uuid\")\n      @GenericGenerator(name = \"uuid\", strategy = \"uuid2\")\n      private String id;\n\n      @Column(nullable=false)\n      @NotNull\n      @NotEmpty\n      @Size(min = 1, max = 150)\n      private String nama;\n\n      @Column(nullable=false,unique=true)\n      @Email\n      @NotNull\n      @NotEmpty\n      private String email;\n\n      @Column(nullable=false,unique=true)\n      @NotNull\n      @NotEmpty\n      private String noHp;\n\n      @Version\n      @Column(columnDefinition= \"integer DEFAULT 0\")\n      private Integer version;\n  ```\n  Keterangan :\n  - id menggunakan string karena nanti akan menggunakan UUID, sehingga id digenerate secara unique.\n  - not empty just for string\n  - not null, not empty, size buat validasi\n  - version digunakan untuk versioning update\n\n- Generate Getter and setter(main/java/domain/entity/Peserta.java)\n  ```\n    public String getId() {\n      return id;\n    }\n\n    public void setId(String id) {\n      this.id = id;\n    }\n\n    public String getNama() {\n      return nama;\n    }\n\n    public void setNama(String nama) {\n      this.nama = nama;\n    }\n\n    public String getEmail() {\n      return email;\n    }\n\n    public void setEmail(String email) {\n      this.email = email;\n    }\n\n    public String getNoHp() {\n      return noHp;\n    }\n\n    public void setNoHp(String noHp) {\n      this.noHp = noHp;\n    }\n\n    public Integer getVersion() {\n      return version;\n    }\n\n    public void setVersion(Integer version) {\n      this.version = version;\n    }\n  ```\n- Bikin Dao (main/java/domain/dao/PesertaDao.java)\n  Note :\n  Dao ini file yang berupa interface yang akan dimplementasi ke class service\n  ```\n    public interface PesertaDao{\n        List <Peserta> daftarPeserta();\n        Peserta saveOrUpdate (Peserta peserta);\n        Peserta getIdPeserta(String id);\n        void delete(String id);\n    }\n  ```\n- Bikin class service(main/java/domain/services/PesertaService.java)\n  ```\n    @Service\n    public class PesertaService implements PesertaDao {\n\n        @Autowired\n        private EntityManagerFactory entityManagerFactory;\n\n        @Override\n        public List<Peserta> daftarPeserta() {\n            EntityManager entityManager = entityManagerFactory.createEntityManager();\n            return entityManager.createQuery(\"from Peserta\", Peserta.class).getResultList();\n        }\n\n        @Override\n        public Peserta saveOrUpdate(Peserta peserta) {\n            EntityManager entityManager = entityManagerFactory.createEntityManager();\n            entityManager.getTransaction().begin();\n            Peserta saved = entityManager.merge(peserta);///merge berfungsi untuk mengecek apakah data udah ada di database, jika belum create, jika sudah update\n            entityManager.getTransaction().commit();\n            return saved;\n        }\n\n        @Override\n        public Peserta getIdPeserta(String id) {\n            EntityManager entityManager = entityManagerFactory.createEntityManager();\n            return entityManager.find(Peserta.class,id);\n\n        }\n\n        @Override\n        public void delete(String id) {\n            EntityManager entityManager = entityManagerFactory.createEntityManager();\n            entityManager.getTransaction().begin();\n            entityManager.remove(entityManager.find(Peserta.class,id));\n            entityManager.getTransaction().commit();\n        }\n  ```\n- Bikin class controller(main/java/domain/controllers/PesertaController.java)\n  ```\n    @Controller\n    public class PesertaController{\n\n        @Autowired\n        private PesertaDao pesertaDao;\n\n        @RequestMapping(\"/peserta\")\n        public String listPeserta(Model model){\n            model.addAttribute(\"peserta\", pesertaDao.daftarPeserta());\n            return \"/peserta/listPeserta\";\n        }\n\n        @RequestMapping(value = \"/peserta/create\", method = RequestMethod.GET)\n        public String tampilkanForm(Model model){\n            model.addAttribute(\"peserta\",new Peserta());\n            return \"/peserta/formPeserta\";\n        }\n\n        @RequestMapping(value = \"/peserta/create\", method = RequestMethod.POST)\n        public String saveForm(Model model, Peserta peserta){\n            model.addAttribute(\"peserta\", pesertaDao.saveOrUpdate(peserta));\n            return \"redirect:/peserta\";\n        }\n\n        @RequestMapping(value = \"/peserta/edit/{id}\",method = RequestMethod.GET)\n        public String editForm(@PathVariable String id, Model model){\n            model.addAttribute(\"peserta\",pesertaDao.getIdPeserta(id));\n            return \"/peserta/formPeserta\";\n        }\n\n        @RequestMapping(\"/peserta/hapus/{id}\")\n        public String deletePeserta(@PathVariable String id){\n            pesertaDao.delete(id);\n            return \"redirect:/peserta\";\n        }\n    }\n  ```\n- Bikin UI Peserta(main/resources/peserta/listPeserta.html)\n  ```\n    <html xmlns:th=\"http://www.thymeleaf.org\">\n    <head>\n        <title>Aplikasi Spring Boot</title>\n        <link rel=\"stylesheet\" th:href=\"@{/css/bootstrap.min.css}\"  media=\"screen\"/>\n        <link rel=\"stylesheet\" th:href=\"@{/css/starter-template.css}\" media=\"screen\"/>\n\n    </head>\n\n    <body>\n\n    <nav class=\"navbar navbar-inverse navbar-fixed-top\">\n        <div class=\"container\">\n            <div class=\"navbar-header\">\n                <button type=\"button\" class=\"navbar-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#navbar\" aria-expanded=\"false\" aria-controls=\"navbar\">\n                    <span class=\"sr-only\">Toggle navigation</span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                </button>\n                <a class=\"navbar-brand\" th:href=\"@{/}\">ciazhar</a>\n            </div>\n            <div id=\"navbar\" class=\"collapse navbar-collapse\">\n                <ul class=\"nav navbar-nav\">\n                    <li class=\"active\"><a th:href=\"@{/peserta}\">Daftar Peserta</a></li>\n                    <li><a href=\"#about\">About</a></li>\n                    <li><a href=\"#contact\">Contact</a></li>\n                </ul>\n            </div><!--/.nav-collapse -->\n        </div>\n    </nav>\n\n\n\n    <div class=\"container\">\n        <h1>Daftar Peserta</h1>\n        <div th:if=\"${not #lists.isEmpty(peserta)}\">\n            <table class=\"table table-striped\">\n                <tr>\n                    <th>Nama</th>\n                    <th>Email</th>\n                    <th>No Hp</th>\n                    <th>Action</th>\n                </tr>\n                <tr th:each=\"pesertas : ${peserta}\">\n                    <td th:text=\"${pesertas.nama}\"></td>\n                    <td th:text=\"${pesertas.email}\"></td>\n                    <td th:text=\"${pesertas.noHp}\"></td>\n                    <td>\n                        <a th:href=\"${'/peserta/edit/'+pesertas.id}\"><span class=\"glyphicon glyphicon-edit\"></span></a>\n                        <a th:href=\"${'/peserta/hapus/'+pesertas.id}\"><span class=\"glyphicon glyphicon-remove\"></span></a>\n                    </td>\n                </tr>\n            </table>\n        </div>\n        <div>\n            <a class=\"btn btn-default\" th:href=\"@{/peserta/create}\">New</a>\n        </div>\n    </div>\n\n\n    <script th:src=\"@{/js/jquery.min.js}\"></script>\n    <script th:src=\"@{/js/bootstrap.min.js}\"></script>\n    </body>\n    </html>\n\n  ```\n- UI untuk form (main/resources/peserta/formPeserta.html)\n  ```\n    <html xmlns:th=\"http://www.thymeleaf.org\">\n    <head>\n        <title>Aplikasi Spring Boot</title>\n        <link rel=\"stylesheet\" th:href=\"@{/css/bootstrap.min.css}\"  media=\"screen\"/>\n        <link rel=\"stylesheet\" th:href=\"@{/css/starter-template.css}\" media=\"screen\"/>\n\n    </head>\n\n    <body>\n\n    <nav class=\"navbar navbar-inverse navbar-fixed-top\">\n        <div class=\"container\">\n            <div class=\"navbar-header\">\n                <button type=\"button\" class=\"navbar-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#navbar\" aria-expanded=\"false\" aria-controls=\"navbar\">\n                    <span class=\"sr-only\">Toggle navigation</span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                </button>\n                <a class=\"navbar-brand\" th:href=\"@{/}\">ciazhar</a>\n            </div>\n            <div id=\"navbar\" class=\"collapse navbar-collapse\">\n                <ul class=\"nav navbar-nav\">\n                    <li class=\"active\"><a th:href=\"@{/peserta}\">Daftar Peserta</a></li>\n                    <li><a href=\"#about\">About</a></li>\n                    <li><a href=\"#contact\">Contact</a></li>\n                </ul>\n            </div><!--/.nav-collapse -->\n        </div>\n    </nav>\n\n\n    <div class=\"container\">\n        <h1>Form Peserta</h1>\n        <div class=\"row\">\n            <div class=\"col-sm-8\">\n                <form class=\"form-horizontal\" th:object=\"${peserta}\" th:action=\"@{/peserta/create}\" method=\"post\">\n                    <input type=\"hidden\" th:field=\"*{id}\"/>\n                    <input type=\"hidden\" th:field=\"*{version}\"/>\n                    <div class=\"form-group\">\n                        <label class=\"col-sm-2 control-label\">Nama:</label>\n                        <div class=\"col-sm-10\">\n                            <input type=\"text\" class=\"form-control\" th:field=\"*{nama}\"/>\n                        </div>\n                    </div>\n\n                    <div class=\"form-group\">\n                        <label class=\"col-sm-2 control-label\">Email:</label>\n                        <div class=\"col-sm-10\">\n                            <input type=\"email\" class=\"form-control\" th:field=\"*{email}\"/>\n                        </div>\n                    </div>\n\n                    <div class=\"form-group\">\n                        <label class=\"col-sm-2 control-label\">Nomer HP:</label>\n                        <div class=\"col-sm-10\">\n                            <input type=\"text\" class=\"form-control\" th:field=\"*{noHp}\"/>\n                        </div>\n                    </div>\n\n                    <div class=\"form-group\">\n                        <button type=\"submit\" class=\"btn btn-deffault\">Simpan</button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n\n\n    <script th:src=\"@{/js/jquery.min.js}\"></script>\n    <script th:src=\"@{/js/bootstrap.min.js}\"></script>\n    </body>\n    </html>\n\n  ```\n","source":"_posts/pemrograman/spring/3.2.2-menggunakan-entity-manager-factory.md","raw":"---\ntitle: Menggunakan Entity Manager Factory\ndate: 2017-04-23 14:17:34\ncategories:\n  - Pemrograman\n  - Spring\n---\n![](/images/springboot.png)\n## Menggunakan Entity Manager Factory ##\n- Buat Model Peserta(main/java/domain/entity/Peserta.java)\n  ```\n    @Entity\n    public class Peserta{\n      @Id @GeneratedValue(generator = \"uuid\")\n      @GenericGenerator(name = \"uuid\", strategy = \"uuid2\")\n      private String id;\n\n      @Column(nullable=false)\n      @NotNull\n      @NotEmpty\n      @Size(min = 1, max = 150)\n      private String nama;\n\n      @Column(nullable=false,unique=true)\n      @Email\n      @NotNull\n      @NotEmpty\n      private String email;\n\n      @Column(nullable=false,unique=true)\n      @NotNull\n      @NotEmpty\n      private String noHp;\n\n      @Version\n      @Column(columnDefinition= \"integer DEFAULT 0\")\n      private Integer version;\n  ```\n  Keterangan :\n  - id menggunakan string karena nanti akan menggunakan UUID, sehingga id digenerate secara unique.\n  - not empty just for string\n  - not null, not empty, size buat validasi\n  - version digunakan untuk versioning update\n\n- Generate Getter and setter(main/java/domain/entity/Peserta.java)\n  ```\n    public String getId() {\n      return id;\n    }\n\n    public void setId(String id) {\n      this.id = id;\n    }\n\n    public String getNama() {\n      return nama;\n    }\n\n    public void setNama(String nama) {\n      this.nama = nama;\n    }\n\n    public String getEmail() {\n      return email;\n    }\n\n    public void setEmail(String email) {\n      this.email = email;\n    }\n\n    public String getNoHp() {\n      return noHp;\n    }\n\n    public void setNoHp(String noHp) {\n      this.noHp = noHp;\n    }\n\n    public Integer getVersion() {\n      return version;\n    }\n\n    public void setVersion(Integer version) {\n      this.version = version;\n    }\n  ```\n- Bikin Dao (main/java/domain/dao/PesertaDao.java)\n  Note :\n  Dao ini file yang berupa interface yang akan dimplementasi ke class service\n  ```\n    public interface PesertaDao{\n        List <Peserta> daftarPeserta();\n        Peserta saveOrUpdate (Peserta peserta);\n        Peserta getIdPeserta(String id);\n        void delete(String id);\n    }\n  ```\n- Bikin class service(main/java/domain/services/PesertaService.java)\n  ```\n    @Service\n    public class PesertaService implements PesertaDao {\n\n        @Autowired\n        private EntityManagerFactory entityManagerFactory;\n\n        @Override\n        public List<Peserta> daftarPeserta() {\n            EntityManager entityManager = entityManagerFactory.createEntityManager();\n            return entityManager.createQuery(\"from Peserta\", Peserta.class).getResultList();\n        }\n\n        @Override\n        public Peserta saveOrUpdate(Peserta peserta) {\n            EntityManager entityManager = entityManagerFactory.createEntityManager();\n            entityManager.getTransaction().begin();\n            Peserta saved = entityManager.merge(peserta);///merge berfungsi untuk mengecek apakah data udah ada di database, jika belum create, jika sudah update\n            entityManager.getTransaction().commit();\n            return saved;\n        }\n\n        @Override\n        public Peserta getIdPeserta(String id) {\n            EntityManager entityManager = entityManagerFactory.createEntityManager();\n            return entityManager.find(Peserta.class,id);\n\n        }\n\n        @Override\n        public void delete(String id) {\n            EntityManager entityManager = entityManagerFactory.createEntityManager();\n            entityManager.getTransaction().begin();\n            entityManager.remove(entityManager.find(Peserta.class,id));\n            entityManager.getTransaction().commit();\n        }\n  ```\n- Bikin class controller(main/java/domain/controllers/PesertaController.java)\n  ```\n    @Controller\n    public class PesertaController{\n\n        @Autowired\n        private PesertaDao pesertaDao;\n\n        @RequestMapping(\"/peserta\")\n        public String listPeserta(Model model){\n            model.addAttribute(\"peserta\", pesertaDao.daftarPeserta());\n            return \"/peserta/listPeserta\";\n        }\n\n        @RequestMapping(value = \"/peserta/create\", method = RequestMethod.GET)\n        public String tampilkanForm(Model model){\n            model.addAttribute(\"peserta\",new Peserta());\n            return \"/peserta/formPeserta\";\n        }\n\n        @RequestMapping(value = \"/peserta/create\", method = RequestMethod.POST)\n        public String saveForm(Model model, Peserta peserta){\n            model.addAttribute(\"peserta\", pesertaDao.saveOrUpdate(peserta));\n            return \"redirect:/peserta\";\n        }\n\n        @RequestMapping(value = \"/peserta/edit/{id}\",method = RequestMethod.GET)\n        public String editForm(@PathVariable String id, Model model){\n            model.addAttribute(\"peserta\",pesertaDao.getIdPeserta(id));\n            return \"/peserta/formPeserta\";\n        }\n\n        @RequestMapping(\"/peserta/hapus/{id}\")\n        public String deletePeserta(@PathVariable String id){\n            pesertaDao.delete(id);\n            return \"redirect:/peserta\";\n        }\n    }\n  ```\n- Bikin UI Peserta(main/resources/peserta/listPeserta.html)\n  ```\n    <html xmlns:th=\"http://www.thymeleaf.org\">\n    <head>\n        <title>Aplikasi Spring Boot</title>\n        <link rel=\"stylesheet\" th:href=\"@{/css/bootstrap.min.css}\"  media=\"screen\"/>\n        <link rel=\"stylesheet\" th:href=\"@{/css/starter-template.css}\" media=\"screen\"/>\n\n    </head>\n\n    <body>\n\n    <nav class=\"navbar navbar-inverse navbar-fixed-top\">\n        <div class=\"container\">\n            <div class=\"navbar-header\">\n                <button type=\"button\" class=\"navbar-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#navbar\" aria-expanded=\"false\" aria-controls=\"navbar\">\n                    <span class=\"sr-only\">Toggle navigation</span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                </button>\n                <a class=\"navbar-brand\" th:href=\"@{/}\">ciazhar</a>\n            </div>\n            <div id=\"navbar\" class=\"collapse navbar-collapse\">\n                <ul class=\"nav navbar-nav\">\n                    <li class=\"active\"><a th:href=\"@{/peserta}\">Daftar Peserta</a></li>\n                    <li><a href=\"#about\">About</a></li>\n                    <li><a href=\"#contact\">Contact</a></li>\n                </ul>\n            </div><!--/.nav-collapse -->\n        </div>\n    </nav>\n\n\n\n    <div class=\"container\">\n        <h1>Daftar Peserta</h1>\n        <div th:if=\"${not #lists.isEmpty(peserta)}\">\n            <table class=\"table table-striped\">\n                <tr>\n                    <th>Nama</th>\n                    <th>Email</th>\n                    <th>No Hp</th>\n                    <th>Action</th>\n                </tr>\n                <tr th:each=\"pesertas : ${peserta}\">\n                    <td th:text=\"${pesertas.nama}\"></td>\n                    <td th:text=\"${pesertas.email}\"></td>\n                    <td th:text=\"${pesertas.noHp}\"></td>\n                    <td>\n                        <a th:href=\"${'/peserta/edit/'+pesertas.id}\"><span class=\"glyphicon glyphicon-edit\"></span></a>\n                        <a th:href=\"${'/peserta/hapus/'+pesertas.id}\"><span class=\"glyphicon glyphicon-remove\"></span></a>\n                    </td>\n                </tr>\n            </table>\n        </div>\n        <div>\n            <a class=\"btn btn-default\" th:href=\"@{/peserta/create}\">New</a>\n        </div>\n    </div>\n\n\n    <script th:src=\"@{/js/jquery.min.js}\"></script>\n    <script th:src=\"@{/js/bootstrap.min.js}\"></script>\n    </body>\n    </html>\n\n  ```\n- UI untuk form (main/resources/peserta/formPeserta.html)\n  ```\n    <html xmlns:th=\"http://www.thymeleaf.org\">\n    <head>\n        <title>Aplikasi Spring Boot</title>\n        <link rel=\"stylesheet\" th:href=\"@{/css/bootstrap.min.css}\"  media=\"screen\"/>\n        <link rel=\"stylesheet\" th:href=\"@{/css/starter-template.css}\" media=\"screen\"/>\n\n    </head>\n\n    <body>\n\n    <nav class=\"navbar navbar-inverse navbar-fixed-top\">\n        <div class=\"container\">\n            <div class=\"navbar-header\">\n                <button type=\"button\" class=\"navbar-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#navbar\" aria-expanded=\"false\" aria-controls=\"navbar\">\n                    <span class=\"sr-only\">Toggle navigation</span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                </button>\n                <a class=\"navbar-brand\" th:href=\"@{/}\">ciazhar</a>\n            </div>\n            <div id=\"navbar\" class=\"collapse navbar-collapse\">\n                <ul class=\"nav navbar-nav\">\n                    <li class=\"active\"><a th:href=\"@{/peserta}\">Daftar Peserta</a></li>\n                    <li><a href=\"#about\">About</a></li>\n                    <li><a href=\"#contact\">Contact</a></li>\n                </ul>\n            </div><!--/.nav-collapse -->\n        </div>\n    </nav>\n\n\n    <div class=\"container\">\n        <h1>Form Peserta</h1>\n        <div class=\"row\">\n            <div class=\"col-sm-8\">\n                <form class=\"form-horizontal\" th:object=\"${peserta}\" th:action=\"@{/peserta/create}\" method=\"post\">\n                    <input type=\"hidden\" th:field=\"*{id}\"/>\n                    <input type=\"hidden\" th:field=\"*{version}\"/>\n                    <div class=\"form-group\">\n                        <label class=\"col-sm-2 control-label\">Nama:</label>\n                        <div class=\"col-sm-10\">\n                            <input type=\"text\" class=\"form-control\" th:field=\"*{nama}\"/>\n                        </div>\n                    </div>\n\n                    <div class=\"form-group\">\n                        <label class=\"col-sm-2 control-label\">Email:</label>\n                        <div class=\"col-sm-10\">\n                            <input type=\"email\" class=\"form-control\" th:field=\"*{email}\"/>\n                        </div>\n                    </div>\n\n                    <div class=\"form-group\">\n                        <label class=\"col-sm-2 control-label\">Nomer HP:</label>\n                        <div class=\"col-sm-10\">\n                            <input type=\"text\" class=\"form-control\" th:field=\"*{noHp}\"/>\n                        </div>\n                    </div>\n\n                    <div class=\"form-group\">\n                        <button type=\"submit\" class=\"btn btn-deffault\">Simpan</button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n\n\n    <script th:src=\"@{/js/jquery.min.js}\"></script>\n    <script th:src=\"@{/js/bootstrap.min.js}\"></script>\n    </body>\n    </html>\n\n  ```\n","slug":"pemrograman/spring/3.2.2-menggunakan-entity-manager-factory","published":1,"updated":"2017-05-07T09:21:21.608Z","_id":"cj2ed41qi002l8jlpi70nq6aw","comments":1,"layout":"post","photos":[],"link":"","content":"<p><img src=\"/images/springboot.png\" alt=\"\"></p>\n<h2 id=\"Menggunakan-Entity-Manager-Factory\"><a href=\"#Menggunakan-Entity-Manager-Factory\" class=\"headerlink\" title=\"Menggunakan Entity Manager Factory\"></a>Menggunakan Entity Manager Factory</h2><ul>\n<li><p>Buat Model Peserta(main/java/domain/entity/Peserta.java)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div></pre></td><td class=\"code\"><pre><div class=\"line\">@Entity</div><div class=\"line\">public class Peserta&#123;</div><div class=\"line\">  @Id @GeneratedValue(generator = &quot;uuid&quot;)</div><div class=\"line\">  @GenericGenerator(name = &quot;uuid&quot;, strategy = &quot;uuid2&quot;)</div><div class=\"line\">  private String id;</div><div class=\"line\"></div><div class=\"line\">  @Column(nullable=false)</div><div class=\"line\">  @NotNull</div><div class=\"line\">  @NotEmpty</div><div class=\"line\">  @Size(min = 1, max = 150)</div><div class=\"line\">  private String nama;</div><div class=\"line\"></div><div class=\"line\">  @Column(nullable=false,unique=true)</div><div class=\"line\">  @Email</div><div class=\"line\">  @NotNull</div><div class=\"line\">  @NotEmpty</div><div class=\"line\">  private String email;</div><div class=\"line\"></div><div class=\"line\">  @Column(nullable=false,unique=true)</div><div class=\"line\">  @NotNull</div><div class=\"line\">  @NotEmpty</div><div class=\"line\">  private String noHp;</div><div class=\"line\"></div><div class=\"line\">  @Version</div><div class=\"line\">  @Column(columnDefinition= &quot;integer DEFAULT 0&quot;)</div><div class=\"line\">  private Integer version;</div></pre></td></tr></table></figure>\n<p>Keterangan :</p>\n<ul>\n<li>id menggunakan string karena nanti akan menggunakan UUID, sehingga id digenerate secara unique.</li>\n<li>not empty just for string</li>\n<li>not null, not empty, size buat validasi</li>\n<li>version digunakan untuk versioning update</li>\n</ul>\n</li>\n<li><p>Generate Getter and setter(main/java/domain/entity/Peserta.java)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div></pre></td><td class=\"code\"><pre><div class=\"line\">public String getId() &#123;</div><div class=\"line\">  return id;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">public void setId(String id) &#123;</div><div class=\"line\">  this.id = id;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">public String getNama() &#123;</div><div class=\"line\">  return nama;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">public void setNama(String nama) &#123;</div><div class=\"line\">  this.nama = nama;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">public String getEmail() &#123;</div><div class=\"line\">  return email;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">public void setEmail(String email) &#123;</div><div class=\"line\">  this.email = email;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">public String getNoHp() &#123;</div><div class=\"line\">  return noHp;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">public void setNoHp(String noHp) &#123;</div><div class=\"line\">  this.noHp = noHp;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">public Integer getVersion() &#123;</div><div class=\"line\">  return version;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">public void setVersion(Integer version) &#123;</div><div class=\"line\">  this.version = version;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n<li><p>Bikin Dao (main/java/domain/dao/PesertaDao.java)<br>Note :<br>Dao ini file yang berupa interface yang akan dimplementasi ke class service</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">public interface PesertaDao&#123;</div><div class=\"line\">    List &lt;Peserta&gt; daftarPeserta();</div><div class=\"line\">    Peserta saveOrUpdate (Peserta peserta);</div><div class=\"line\">    Peserta getIdPeserta(String id);</div><div class=\"line\">    void delete(String id);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n<li><p>Bikin class service(main/java/domain/services/PesertaService.java)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div></pre></td><td class=\"code\"><pre><div class=\"line\">@Service</div><div class=\"line\">public class PesertaService implements PesertaDao &#123;</div><div class=\"line\"></div><div class=\"line\">    @Autowired</div><div class=\"line\">    private EntityManagerFactory entityManagerFactory;</div><div class=\"line\"></div><div class=\"line\">    @Override</div><div class=\"line\">    public List&lt;Peserta&gt; daftarPeserta() &#123;</div><div class=\"line\">        EntityManager entityManager = entityManagerFactory.createEntityManager();</div><div class=\"line\">        return entityManager.createQuery(&quot;from Peserta&quot;, Peserta.class).getResultList();</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    @Override</div><div class=\"line\">    public Peserta saveOrUpdate(Peserta peserta) &#123;</div><div class=\"line\">        EntityManager entityManager = entityManagerFactory.createEntityManager();</div><div class=\"line\">        entityManager.getTransaction().begin();</div><div class=\"line\">        Peserta saved = entityManager.merge(peserta);///merge berfungsi untuk mengecek apakah data udah ada di database, jika belum create, jika sudah update</div><div class=\"line\">        entityManager.getTransaction().commit();</div><div class=\"line\">        return saved;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    @Override</div><div class=\"line\">    public Peserta getIdPeserta(String id) &#123;</div><div class=\"line\">        EntityManager entityManager = entityManagerFactory.createEntityManager();</div><div class=\"line\">        return entityManager.find(Peserta.class,id);</div><div class=\"line\"></div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    @Override</div><div class=\"line\">    public void delete(String id) &#123;</div><div class=\"line\">        EntityManager entityManager = entityManagerFactory.createEntityManager();</div><div class=\"line\">        entityManager.getTransaction().begin();</div><div class=\"line\">        entityManager.remove(entityManager.find(Peserta.class,id));</div><div class=\"line\">        entityManager.getTransaction().commit();</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure>\n</li>\n<li><p>Bikin class controller(main/java/domain/controllers/PesertaController.java)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div></pre></td><td class=\"code\"><pre><div class=\"line\">@Controller</div><div class=\"line\">public class PesertaController&#123;</div><div class=\"line\"></div><div class=\"line\">    @Autowired</div><div class=\"line\">    private PesertaDao pesertaDao;</div><div class=\"line\"></div><div class=\"line\">    @RequestMapping(&quot;/peserta&quot;)</div><div class=\"line\">    public String listPeserta(Model model)&#123;</div><div class=\"line\">        model.addAttribute(&quot;peserta&quot;, pesertaDao.daftarPeserta());</div><div class=\"line\">        return &quot;/peserta/listPeserta&quot;;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    @RequestMapping(value = &quot;/peserta/create&quot;, method = RequestMethod.GET)</div><div class=\"line\">    public String tampilkanForm(Model model)&#123;</div><div class=\"line\">        model.addAttribute(&quot;peserta&quot;,new Peserta());</div><div class=\"line\">        return &quot;/peserta/formPeserta&quot;;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    @RequestMapping(value = &quot;/peserta/create&quot;, method = RequestMethod.POST)</div><div class=\"line\">    public String saveForm(Model model, Peserta peserta)&#123;</div><div class=\"line\">        model.addAttribute(&quot;peserta&quot;, pesertaDao.saveOrUpdate(peserta));</div><div class=\"line\">        return &quot;redirect:/peserta&quot;;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    @RequestMapping(value = &quot;/peserta/edit/&#123;id&#125;&quot;,method = RequestMethod.GET)</div><div class=\"line\">    public String editForm(@PathVariable String id, Model model)&#123;</div><div class=\"line\">        model.addAttribute(&quot;peserta&quot;,pesertaDao.getIdPeserta(id));</div><div class=\"line\">        return &quot;/peserta/formPeserta&quot;;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    @RequestMapping(&quot;/peserta/hapus/&#123;id&#125;&quot;)</div><div class=\"line\">    public String deletePeserta(@PathVariable String id)&#123;</div><div class=\"line\">        pesertaDao.delete(id);</div><div class=\"line\">        return &quot;redirect:/peserta&quot;;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n<li><p>Bikin UI Peserta(main/resources/peserta/listPeserta.html)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;html xmlns:th=&quot;http://www.thymeleaf.org&quot;&gt;</div><div class=\"line\">&lt;head&gt;</div><div class=\"line\">    &lt;title&gt;Aplikasi Spring Boot&lt;/title&gt;</div><div class=\"line\">    &lt;link rel=&quot;stylesheet&quot; th:href=&quot;@&#123;/css/bootstrap.min.css&#125;&quot;  media=&quot;screen&quot;/&gt;</div><div class=\"line\">    &lt;link rel=&quot;stylesheet&quot; th:href=&quot;@&#123;/css/starter-template.css&#125;&quot; media=&quot;screen&quot;/&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;/head&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;body&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;nav class=&quot;navbar navbar-inverse navbar-fixed-top&quot;&gt;</div><div class=\"line\">    &lt;div class=&quot;container&quot;&gt;</div><div class=\"line\">        &lt;div class=&quot;navbar-header&quot;&gt;</div><div class=\"line\">            &lt;button type=&quot;button&quot; class=&quot;navbar-toggle collapsed&quot; data-toggle=&quot;collapse&quot; data-target=&quot;#navbar&quot; aria-expanded=&quot;false&quot; aria-controls=&quot;navbar&quot;&gt;</div><div class=\"line\">                &lt;span class=&quot;sr-only&quot;&gt;Toggle navigation&lt;/span&gt;</div><div class=\"line\">                &lt;span class=&quot;icon-bar&quot;&gt;&lt;/span&gt;</div><div class=\"line\">                &lt;span class=&quot;icon-bar&quot;&gt;&lt;/span&gt;</div><div class=\"line\">                &lt;span class=&quot;icon-bar&quot;&gt;&lt;/span&gt;</div><div class=\"line\">            &lt;/button&gt;</div><div class=\"line\">            &lt;a class=&quot;navbar-brand&quot; th:href=&quot;@&#123;/&#125;&quot;&gt;ciazhar&lt;/a&gt;</div><div class=\"line\">        &lt;/div&gt;</div><div class=\"line\">        &lt;div id=&quot;navbar&quot; class=&quot;collapse navbar-collapse&quot;&gt;</div><div class=\"line\">            &lt;ul class=&quot;nav navbar-nav&quot;&gt;</div><div class=\"line\">                &lt;li class=&quot;active&quot;&gt;&lt;a th:href=&quot;@&#123;/peserta&#125;&quot;&gt;Daftar Peserta&lt;/a&gt;&lt;/li&gt;</div><div class=\"line\">                &lt;li&gt;&lt;a href=&quot;#about&quot;&gt;About&lt;/a&gt;&lt;/li&gt;</div><div class=\"line\">                &lt;li&gt;&lt;a href=&quot;#contact&quot;&gt;Contact&lt;/a&gt;&lt;/li&gt;</div><div class=\"line\">            &lt;/ul&gt;</div><div class=\"line\">        &lt;/div&gt;&lt;!--/.nav-collapse --&gt;</div><div class=\"line\">    &lt;/div&gt;</div><div class=\"line\">&lt;/nav&gt;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">&lt;div class=&quot;container&quot;&gt;</div><div class=\"line\">    &lt;h1&gt;Daftar Peserta&lt;/h1&gt;</div><div class=\"line\">    &lt;div th:if=&quot;$&#123;not #lists.isEmpty(peserta)&#125;&quot;&gt;</div><div class=\"line\">        &lt;table class=&quot;table table-striped&quot;&gt;</div><div class=\"line\">            &lt;tr&gt;</div><div class=\"line\">                &lt;th&gt;Nama&lt;/th&gt;</div><div class=\"line\">                &lt;th&gt;Email&lt;/th&gt;</div><div class=\"line\">                &lt;th&gt;No Hp&lt;/th&gt;</div><div class=\"line\">                &lt;th&gt;Action&lt;/th&gt;</div><div class=\"line\">            &lt;/tr&gt;</div><div class=\"line\">            &lt;tr th:each=&quot;pesertas : $&#123;peserta&#125;&quot;&gt;</div><div class=\"line\">                &lt;td th:text=&quot;$&#123;pesertas.nama&#125;&quot;&gt;&lt;/td&gt;</div><div class=\"line\">                &lt;td th:text=&quot;$&#123;pesertas.email&#125;&quot;&gt;&lt;/td&gt;</div><div class=\"line\">                &lt;td th:text=&quot;$&#123;pesertas.noHp&#125;&quot;&gt;&lt;/td&gt;</div><div class=\"line\">                &lt;td&gt;</div><div class=\"line\">                    &lt;a th:href=&quot;$&#123;&apos;/peserta/edit/&apos;+pesertas.id&#125;&quot;&gt;&lt;span class=&quot;glyphicon glyphicon-edit&quot;&gt;&lt;/span&gt;&lt;/a&gt;</div><div class=\"line\">                    &lt;a th:href=&quot;$&#123;&apos;/peserta/hapus/&apos;+pesertas.id&#125;&quot;&gt;&lt;span class=&quot;glyphicon glyphicon-remove&quot;&gt;&lt;/span&gt;&lt;/a&gt;</div><div class=\"line\">                &lt;/td&gt;</div><div class=\"line\">            &lt;/tr&gt;</div><div class=\"line\">        &lt;/table&gt;</div><div class=\"line\">    &lt;/div&gt;</div><div class=\"line\">    &lt;div&gt;</div><div class=\"line\">        &lt;a class=&quot;btn btn-default&quot; th:href=&quot;@&#123;/peserta/create&#125;&quot;&gt;New&lt;/a&gt;</div><div class=\"line\">    &lt;/div&gt;</div><div class=\"line\">&lt;/div&gt;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">&lt;script th:src=&quot;@&#123;/js/jquery.min.js&#125;&quot;&gt;&lt;/script&gt;</div><div class=\"line\">&lt;script th:src=&quot;@&#123;/js/bootstrap.min.js&#125;&quot;&gt;&lt;/script&gt;</div><div class=\"line\">&lt;/body&gt;</div><div class=\"line\">&lt;/html&gt;</div></pre></td></tr></table></figure>\n</li>\n<li><p>UI untuk form (main/resources/peserta/formPeserta.html)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;html xmlns:th=&quot;http://www.thymeleaf.org&quot;&gt;</div><div class=\"line\">&lt;head&gt;</div><div class=\"line\">    &lt;title&gt;Aplikasi Spring Boot&lt;/title&gt;</div><div class=\"line\">    &lt;link rel=&quot;stylesheet&quot; th:href=&quot;@&#123;/css/bootstrap.min.css&#125;&quot;  media=&quot;screen&quot;/&gt;</div><div class=\"line\">    &lt;link rel=&quot;stylesheet&quot; th:href=&quot;@&#123;/css/starter-template.css&#125;&quot; media=&quot;screen&quot;/&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;/head&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;body&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;nav class=&quot;navbar navbar-inverse navbar-fixed-top&quot;&gt;</div><div class=\"line\">    &lt;div class=&quot;container&quot;&gt;</div><div class=\"line\">        &lt;div class=&quot;navbar-header&quot;&gt;</div><div class=\"line\">            &lt;button type=&quot;button&quot; class=&quot;navbar-toggle collapsed&quot; data-toggle=&quot;collapse&quot; data-target=&quot;#navbar&quot; aria-expanded=&quot;false&quot; aria-controls=&quot;navbar&quot;&gt;</div><div class=\"line\">                &lt;span class=&quot;sr-only&quot;&gt;Toggle navigation&lt;/span&gt;</div><div class=\"line\">                &lt;span class=&quot;icon-bar&quot;&gt;&lt;/span&gt;</div><div class=\"line\">                &lt;span class=&quot;icon-bar&quot;&gt;&lt;/span&gt;</div><div class=\"line\">                &lt;span class=&quot;icon-bar&quot;&gt;&lt;/span&gt;</div><div class=\"line\">            &lt;/button&gt;</div><div class=\"line\">            &lt;a class=&quot;navbar-brand&quot; th:href=&quot;@&#123;/&#125;&quot;&gt;ciazhar&lt;/a&gt;</div><div class=\"line\">        &lt;/div&gt;</div><div class=\"line\">        &lt;div id=&quot;navbar&quot; class=&quot;collapse navbar-collapse&quot;&gt;</div><div class=\"line\">            &lt;ul class=&quot;nav navbar-nav&quot;&gt;</div><div class=\"line\">                &lt;li class=&quot;active&quot;&gt;&lt;a th:href=&quot;@&#123;/peserta&#125;&quot;&gt;Daftar Peserta&lt;/a&gt;&lt;/li&gt;</div><div class=\"line\">                &lt;li&gt;&lt;a href=&quot;#about&quot;&gt;About&lt;/a&gt;&lt;/li&gt;</div><div class=\"line\">                &lt;li&gt;&lt;a href=&quot;#contact&quot;&gt;Contact&lt;/a&gt;&lt;/li&gt;</div><div class=\"line\">            &lt;/ul&gt;</div><div class=\"line\">        &lt;/div&gt;&lt;!--/.nav-collapse --&gt;</div><div class=\"line\">    &lt;/div&gt;</div><div class=\"line\">&lt;/nav&gt;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">&lt;div class=&quot;container&quot;&gt;</div><div class=\"line\">    &lt;h1&gt;Form Peserta&lt;/h1&gt;</div><div class=\"line\">    &lt;div class=&quot;row&quot;&gt;</div><div class=\"line\">        &lt;div class=&quot;col-sm-8&quot;&gt;</div><div class=\"line\">            &lt;form class=&quot;form-horizontal&quot; th:object=&quot;$&#123;peserta&#125;&quot; th:action=&quot;@&#123;/peserta/create&#125;&quot; method=&quot;post&quot;&gt;</div><div class=\"line\">                &lt;input type=&quot;hidden&quot; th:field=&quot;*&#123;id&#125;&quot;/&gt;</div><div class=\"line\">                &lt;input type=&quot;hidden&quot; th:field=&quot;*&#123;version&#125;&quot;/&gt;</div><div class=\"line\">                &lt;div class=&quot;form-group&quot;&gt;</div><div class=\"line\">                    &lt;label class=&quot;col-sm-2 control-label&quot;&gt;Nama:&lt;/label&gt;</div><div class=\"line\">                    &lt;div class=&quot;col-sm-10&quot;&gt;</div><div class=\"line\">                        &lt;input type=&quot;text&quot; class=&quot;form-control&quot; th:field=&quot;*&#123;nama&#125;&quot;/&gt;</div><div class=\"line\">                    &lt;/div&gt;</div><div class=\"line\">                &lt;/div&gt;</div><div class=\"line\"></div><div class=\"line\">                &lt;div class=&quot;form-group&quot;&gt;</div><div class=\"line\">                    &lt;label class=&quot;col-sm-2 control-label&quot;&gt;Email:&lt;/label&gt;</div><div class=\"line\">                    &lt;div class=&quot;col-sm-10&quot;&gt;</div><div class=\"line\">                        &lt;input type=&quot;email&quot; class=&quot;form-control&quot; th:field=&quot;*&#123;email&#125;&quot;/&gt;</div><div class=\"line\">                    &lt;/div&gt;</div><div class=\"line\">                &lt;/div&gt;</div><div class=\"line\"></div><div class=\"line\">                &lt;div class=&quot;form-group&quot;&gt;</div><div class=\"line\">                    &lt;label class=&quot;col-sm-2 control-label&quot;&gt;Nomer HP:&lt;/label&gt;</div><div class=\"line\">                    &lt;div class=&quot;col-sm-10&quot;&gt;</div><div class=\"line\">                        &lt;input type=&quot;text&quot; class=&quot;form-control&quot; th:field=&quot;*&#123;noHp&#125;&quot;/&gt;</div><div class=\"line\">                    &lt;/div&gt;</div><div class=\"line\">                &lt;/div&gt;</div><div class=\"line\"></div><div class=\"line\">                &lt;div class=&quot;form-group&quot;&gt;</div><div class=\"line\">                    &lt;button type=&quot;submit&quot; class=&quot;btn btn-deffault&quot;&gt;Simpan&lt;/button&gt;</div><div class=\"line\">                &lt;/div&gt;</div><div class=\"line\">            &lt;/form&gt;</div><div class=\"line\">        &lt;/div&gt;</div><div class=\"line\">    &lt;/div&gt;</div><div class=\"line\">&lt;/div&gt;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">&lt;script th:src=&quot;@&#123;/js/jquery.min.js&#125;&quot;&gt;&lt;/script&gt;</div><div class=\"line\">&lt;script th:src=&quot;@&#123;/js/bootstrap.min.js&#125;&quot;&gt;&lt;/script&gt;</div><div class=\"line\">&lt;/body&gt;</div><div class=\"line\">&lt;/html&gt;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n","excerpt":"","more":"<p><img src=\"/images/springboot.png\" alt=\"\"></p>\n<h2 id=\"Menggunakan-Entity-Manager-Factory\"><a href=\"#Menggunakan-Entity-Manager-Factory\" class=\"headerlink\" title=\"Menggunakan Entity Manager Factory\"></a>Menggunakan Entity Manager Factory</h2><ul>\n<li><p>Buat Model Peserta(main/java/domain/entity/Peserta.java)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div></pre></td><td class=\"code\"><pre><div class=\"line\">@Entity</div><div class=\"line\">public class Peserta&#123;</div><div class=\"line\">  @Id @GeneratedValue(generator = &quot;uuid&quot;)</div><div class=\"line\">  @GenericGenerator(name = &quot;uuid&quot;, strategy = &quot;uuid2&quot;)</div><div class=\"line\">  private String id;</div><div class=\"line\"></div><div class=\"line\">  @Column(nullable=false)</div><div class=\"line\">  @NotNull</div><div class=\"line\">  @NotEmpty</div><div class=\"line\">  @Size(min = 1, max = 150)</div><div class=\"line\">  private String nama;</div><div class=\"line\"></div><div class=\"line\">  @Column(nullable=false,unique=true)</div><div class=\"line\">  @Email</div><div class=\"line\">  @NotNull</div><div class=\"line\">  @NotEmpty</div><div class=\"line\">  private String email;</div><div class=\"line\"></div><div class=\"line\">  @Column(nullable=false,unique=true)</div><div class=\"line\">  @NotNull</div><div class=\"line\">  @NotEmpty</div><div class=\"line\">  private String noHp;</div><div class=\"line\"></div><div class=\"line\">  @Version</div><div class=\"line\">  @Column(columnDefinition= &quot;integer DEFAULT 0&quot;)</div><div class=\"line\">  private Integer version;</div></pre></td></tr></table></figure>\n<p>Keterangan :</p>\n<ul>\n<li>id menggunakan string karena nanti akan menggunakan UUID, sehingga id digenerate secara unique.</li>\n<li>not empty just for string</li>\n<li>not null, not empty, size buat validasi</li>\n<li>version digunakan untuk versioning update</li>\n</ul>\n</li>\n<li><p>Generate Getter and setter(main/java/domain/entity/Peserta.java)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div></pre></td><td class=\"code\"><pre><div class=\"line\">public String getId() &#123;</div><div class=\"line\">  return id;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">public void setId(String id) &#123;</div><div class=\"line\">  this.id = id;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">public String getNama() &#123;</div><div class=\"line\">  return nama;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">public void setNama(String nama) &#123;</div><div class=\"line\">  this.nama = nama;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">public String getEmail() &#123;</div><div class=\"line\">  return email;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">public void setEmail(String email) &#123;</div><div class=\"line\">  this.email = email;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">public String getNoHp() &#123;</div><div class=\"line\">  return noHp;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">public void setNoHp(String noHp) &#123;</div><div class=\"line\">  this.noHp = noHp;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">public Integer getVersion() &#123;</div><div class=\"line\">  return version;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">public void setVersion(Integer version) &#123;</div><div class=\"line\">  this.version = version;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n<li><p>Bikin Dao (main/java/domain/dao/PesertaDao.java)<br>Note :<br>Dao ini file yang berupa interface yang akan dimplementasi ke class service</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">public interface PesertaDao&#123;</div><div class=\"line\">    List &lt;Peserta&gt; daftarPeserta();</div><div class=\"line\">    Peserta saveOrUpdate (Peserta peserta);</div><div class=\"line\">    Peserta getIdPeserta(String id);</div><div class=\"line\">    void delete(String id);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n<li><p>Bikin class service(main/java/domain/services/PesertaService.java)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div></pre></td><td class=\"code\"><pre><div class=\"line\">@Service</div><div class=\"line\">public class PesertaService implements PesertaDao &#123;</div><div class=\"line\"></div><div class=\"line\">    @Autowired</div><div class=\"line\">    private EntityManagerFactory entityManagerFactory;</div><div class=\"line\"></div><div class=\"line\">    @Override</div><div class=\"line\">    public List&lt;Peserta&gt; daftarPeserta() &#123;</div><div class=\"line\">        EntityManager entityManager = entityManagerFactory.createEntityManager();</div><div class=\"line\">        return entityManager.createQuery(&quot;from Peserta&quot;, Peserta.class).getResultList();</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    @Override</div><div class=\"line\">    public Peserta saveOrUpdate(Peserta peserta) &#123;</div><div class=\"line\">        EntityManager entityManager = entityManagerFactory.createEntityManager();</div><div class=\"line\">        entityManager.getTransaction().begin();</div><div class=\"line\">        Peserta saved = entityManager.merge(peserta);///merge berfungsi untuk mengecek apakah data udah ada di database, jika belum create, jika sudah update</div><div class=\"line\">        entityManager.getTransaction().commit();</div><div class=\"line\">        return saved;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    @Override</div><div class=\"line\">    public Peserta getIdPeserta(String id) &#123;</div><div class=\"line\">        EntityManager entityManager = entityManagerFactory.createEntityManager();</div><div class=\"line\">        return entityManager.find(Peserta.class,id);</div><div class=\"line\"></div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    @Override</div><div class=\"line\">    public void delete(String id) &#123;</div><div class=\"line\">        EntityManager entityManager = entityManagerFactory.createEntityManager();</div><div class=\"line\">        entityManager.getTransaction().begin();</div><div class=\"line\">        entityManager.remove(entityManager.find(Peserta.class,id));</div><div class=\"line\">        entityManager.getTransaction().commit();</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure>\n</li>\n<li><p>Bikin class controller(main/java/domain/controllers/PesertaController.java)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div></pre></td><td class=\"code\"><pre><div class=\"line\">@Controller</div><div class=\"line\">public class PesertaController&#123;</div><div class=\"line\"></div><div class=\"line\">    @Autowired</div><div class=\"line\">    private PesertaDao pesertaDao;</div><div class=\"line\"></div><div class=\"line\">    @RequestMapping(&quot;/peserta&quot;)</div><div class=\"line\">    public String listPeserta(Model model)&#123;</div><div class=\"line\">        model.addAttribute(&quot;peserta&quot;, pesertaDao.daftarPeserta());</div><div class=\"line\">        return &quot;/peserta/listPeserta&quot;;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    @RequestMapping(value = &quot;/peserta/create&quot;, method = RequestMethod.GET)</div><div class=\"line\">    public String tampilkanForm(Model model)&#123;</div><div class=\"line\">        model.addAttribute(&quot;peserta&quot;,new Peserta());</div><div class=\"line\">        return &quot;/peserta/formPeserta&quot;;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    @RequestMapping(value = &quot;/peserta/create&quot;, method = RequestMethod.POST)</div><div class=\"line\">    public String saveForm(Model model, Peserta peserta)&#123;</div><div class=\"line\">        model.addAttribute(&quot;peserta&quot;, pesertaDao.saveOrUpdate(peserta));</div><div class=\"line\">        return &quot;redirect:/peserta&quot;;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    @RequestMapping(value = &quot;/peserta/edit/&#123;id&#125;&quot;,method = RequestMethod.GET)</div><div class=\"line\">    public String editForm(@PathVariable String id, Model model)&#123;</div><div class=\"line\">        model.addAttribute(&quot;peserta&quot;,pesertaDao.getIdPeserta(id));</div><div class=\"line\">        return &quot;/peserta/formPeserta&quot;;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    @RequestMapping(&quot;/peserta/hapus/&#123;id&#125;&quot;)</div><div class=\"line\">    public String deletePeserta(@PathVariable String id)&#123;</div><div class=\"line\">        pesertaDao.delete(id);</div><div class=\"line\">        return &quot;redirect:/peserta&quot;;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n<li><p>Bikin UI Peserta(main/resources/peserta/listPeserta.html)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;html xmlns:th=&quot;http://www.thymeleaf.org&quot;&gt;</div><div class=\"line\">&lt;head&gt;</div><div class=\"line\">    &lt;title&gt;Aplikasi Spring Boot&lt;/title&gt;</div><div class=\"line\">    &lt;link rel=&quot;stylesheet&quot; th:href=&quot;@&#123;/css/bootstrap.min.css&#125;&quot;  media=&quot;screen&quot;/&gt;</div><div class=\"line\">    &lt;link rel=&quot;stylesheet&quot; th:href=&quot;@&#123;/css/starter-template.css&#125;&quot; media=&quot;screen&quot;/&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;/head&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;body&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;nav class=&quot;navbar navbar-inverse navbar-fixed-top&quot;&gt;</div><div class=\"line\">    &lt;div class=&quot;container&quot;&gt;</div><div class=\"line\">        &lt;div class=&quot;navbar-header&quot;&gt;</div><div class=\"line\">            &lt;button type=&quot;button&quot; class=&quot;navbar-toggle collapsed&quot; data-toggle=&quot;collapse&quot; data-target=&quot;#navbar&quot; aria-expanded=&quot;false&quot; aria-controls=&quot;navbar&quot;&gt;</div><div class=\"line\">                &lt;span class=&quot;sr-only&quot;&gt;Toggle navigation&lt;/span&gt;</div><div class=\"line\">                &lt;span class=&quot;icon-bar&quot;&gt;&lt;/span&gt;</div><div class=\"line\">                &lt;span class=&quot;icon-bar&quot;&gt;&lt;/span&gt;</div><div class=\"line\">                &lt;span class=&quot;icon-bar&quot;&gt;&lt;/span&gt;</div><div class=\"line\">            &lt;/button&gt;</div><div class=\"line\">            &lt;a class=&quot;navbar-brand&quot; th:href=&quot;@&#123;/&#125;&quot;&gt;ciazhar&lt;/a&gt;</div><div class=\"line\">        &lt;/div&gt;</div><div class=\"line\">        &lt;div id=&quot;navbar&quot; class=&quot;collapse navbar-collapse&quot;&gt;</div><div class=\"line\">            &lt;ul class=&quot;nav navbar-nav&quot;&gt;</div><div class=\"line\">                &lt;li class=&quot;active&quot;&gt;&lt;a th:href=&quot;@&#123;/peserta&#125;&quot;&gt;Daftar Peserta&lt;/a&gt;&lt;/li&gt;</div><div class=\"line\">                &lt;li&gt;&lt;a href=&quot;#about&quot;&gt;About&lt;/a&gt;&lt;/li&gt;</div><div class=\"line\">                &lt;li&gt;&lt;a href=&quot;#contact&quot;&gt;Contact&lt;/a&gt;&lt;/li&gt;</div><div class=\"line\">            &lt;/ul&gt;</div><div class=\"line\">        &lt;/div&gt;&lt;!--/.nav-collapse --&gt;</div><div class=\"line\">    &lt;/div&gt;</div><div class=\"line\">&lt;/nav&gt;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">&lt;div class=&quot;container&quot;&gt;</div><div class=\"line\">    &lt;h1&gt;Daftar Peserta&lt;/h1&gt;</div><div class=\"line\">    &lt;div th:if=&quot;$&#123;not #lists.isEmpty(peserta)&#125;&quot;&gt;</div><div class=\"line\">        &lt;table class=&quot;table table-striped&quot;&gt;</div><div class=\"line\">            &lt;tr&gt;</div><div class=\"line\">                &lt;th&gt;Nama&lt;/th&gt;</div><div class=\"line\">                &lt;th&gt;Email&lt;/th&gt;</div><div class=\"line\">                &lt;th&gt;No Hp&lt;/th&gt;</div><div class=\"line\">                &lt;th&gt;Action&lt;/th&gt;</div><div class=\"line\">            &lt;/tr&gt;</div><div class=\"line\">            &lt;tr th:each=&quot;pesertas : $&#123;peserta&#125;&quot;&gt;</div><div class=\"line\">                &lt;td th:text=&quot;$&#123;pesertas.nama&#125;&quot;&gt;&lt;/td&gt;</div><div class=\"line\">                &lt;td th:text=&quot;$&#123;pesertas.email&#125;&quot;&gt;&lt;/td&gt;</div><div class=\"line\">                &lt;td th:text=&quot;$&#123;pesertas.noHp&#125;&quot;&gt;&lt;/td&gt;</div><div class=\"line\">                &lt;td&gt;</div><div class=\"line\">                    &lt;a th:href=&quot;$&#123;&apos;/peserta/edit/&apos;+pesertas.id&#125;&quot;&gt;&lt;span class=&quot;glyphicon glyphicon-edit&quot;&gt;&lt;/span&gt;&lt;/a&gt;</div><div class=\"line\">                    &lt;a th:href=&quot;$&#123;&apos;/peserta/hapus/&apos;+pesertas.id&#125;&quot;&gt;&lt;span class=&quot;glyphicon glyphicon-remove&quot;&gt;&lt;/span&gt;&lt;/a&gt;</div><div class=\"line\">                &lt;/td&gt;</div><div class=\"line\">            &lt;/tr&gt;</div><div class=\"line\">        &lt;/table&gt;</div><div class=\"line\">    &lt;/div&gt;</div><div class=\"line\">    &lt;div&gt;</div><div class=\"line\">        &lt;a class=&quot;btn btn-default&quot; th:href=&quot;@&#123;/peserta/create&#125;&quot;&gt;New&lt;/a&gt;</div><div class=\"line\">    &lt;/div&gt;</div><div class=\"line\">&lt;/div&gt;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">&lt;script th:src=&quot;@&#123;/js/jquery.min.js&#125;&quot;&gt;&lt;/script&gt;</div><div class=\"line\">&lt;script th:src=&quot;@&#123;/js/bootstrap.min.js&#125;&quot;&gt;&lt;/script&gt;</div><div class=\"line\">&lt;/body&gt;</div><div class=\"line\">&lt;/html&gt;</div></pre></td></tr></table></figure>\n</li>\n<li><p>UI untuk form (main/resources/peserta/formPeserta.html)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;html xmlns:th=&quot;http://www.thymeleaf.org&quot;&gt;</div><div class=\"line\">&lt;head&gt;</div><div class=\"line\">    &lt;title&gt;Aplikasi Spring Boot&lt;/title&gt;</div><div class=\"line\">    &lt;link rel=&quot;stylesheet&quot; th:href=&quot;@&#123;/css/bootstrap.min.css&#125;&quot;  media=&quot;screen&quot;/&gt;</div><div class=\"line\">    &lt;link rel=&quot;stylesheet&quot; th:href=&quot;@&#123;/css/starter-template.css&#125;&quot; media=&quot;screen&quot;/&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;/head&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;body&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;nav class=&quot;navbar navbar-inverse navbar-fixed-top&quot;&gt;</div><div class=\"line\">    &lt;div class=&quot;container&quot;&gt;</div><div class=\"line\">        &lt;div class=&quot;navbar-header&quot;&gt;</div><div class=\"line\">            &lt;button type=&quot;button&quot; class=&quot;navbar-toggle collapsed&quot; data-toggle=&quot;collapse&quot; data-target=&quot;#navbar&quot; aria-expanded=&quot;false&quot; aria-controls=&quot;navbar&quot;&gt;</div><div class=\"line\">                &lt;span class=&quot;sr-only&quot;&gt;Toggle navigation&lt;/span&gt;</div><div class=\"line\">                &lt;span class=&quot;icon-bar&quot;&gt;&lt;/span&gt;</div><div class=\"line\">                &lt;span class=&quot;icon-bar&quot;&gt;&lt;/span&gt;</div><div class=\"line\">                &lt;span class=&quot;icon-bar&quot;&gt;&lt;/span&gt;</div><div class=\"line\">            &lt;/button&gt;</div><div class=\"line\">            &lt;a class=&quot;navbar-brand&quot; th:href=&quot;@&#123;/&#125;&quot;&gt;ciazhar&lt;/a&gt;</div><div class=\"line\">        &lt;/div&gt;</div><div class=\"line\">        &lt;div id=&quot;navbar&quot; class=&quot;collapse navbar-collapse&quot;&gt;</div><div class=\"line\">            &lt;ul class=&quot;nav navbar-nav&quot;&gt;</div><div class=\"line\">                &lt;li class=&quot;active&quot;&gt;&lt;a th:href=&quot;@&#123;/peserta&#125;&quot;&gt;Daftar Peserta&lt;/a&gt;&lt;/li&gt;</div><div class=\"line\">                &lt;li&gt;&lt;a href=&quot;#about&quot;&gt;About&lt;/a&gt;&lt;/li&gt;</div><div class=\"line\">                &lt;li&gt;&lt;a href=&quot;#contact&quot;&gt;Contact&lt;/a&gt;&lt;/li&gt;</div><div class=\"line\">            &lt;/ul&gt;</div><div class=\"line\">        &lt;/div&gt;&lt;!--/.nav-collapse --&gt;</div><div class=\"line\">    &lt;/div&gt;</div><div class=\"line\">&lt;/nav&gt;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">&lt;div class=&quot;container&quot;&gt;</div><div class=\"line\">    &lt;h1&gt;Form Peserta&lt;/h1&gt;</div><div class=\"line\">    &lt;div class=&quot;row&quot;&gt;</div><div class=\"line\">        &lt;div class=&quot;col-sm-8&quot;&gt;</div><div class=\"line\">            &lt;form class=&quot;form-horizontal&quot; th:object=&quot;$&#123;peserta&#125;&quot; th:action=&quot;@&#123;/peserta/create&#125;&quot; method=&quot;post&quot;&gt;</div><div class=\"line\">                &lt;input type=&quot;hidden&quot; th:field=&quot;*&#123;id&#125;&quot;/&gt;</div><div class=\"line\">                &lt;input type=&quot;hidden&quot; th:field=&quot;*&#123;version&#125;&quot;/&gt;</div><div class=\"line\">                &lt;div class=&quot;form-group&quot;&gt;</div><div class=\"line\">                    &lt;label class=&quot;col-sm-2 control-label&quot;&gt;Nama:&lt;/label&gt;</div><div class=\"line\">                    &lt;div class=&quot;col-sm-10&quot;&gt;</div><div class=\"line\">                        &lt;input type=&quot;text&quot; class=&quot;form-control&quot; th:field=&quot;*&#123;nama&#125;&quot;/&gt;</div><div class=\"line\">                    &lt;/div&gt;</div><div class=\"line\">                &lt;/div&gt;</div><div class=\"line\"></div><div class=\"line\">                &lt;div class=&quot;form-group&quot;&gt;</div><div class=\"line\">                    &lt;label class=&quot;col-sm-2 control-label&quot;&gt;Email:&lt;/label&gt;</div><div class=\"line\">                    &lt;div class=&quot;col-sm-10&quot;&gt;</div><div class=\"line\">                        &lt;input type=&quot;email&quot; class=&quot;form-control&quot; th:field=&quot;*&#123;email&#125;&quot;/&gt;</div><div class=\"line\">                    &lt;/div&gt;</div><div class=\"line\">                &lt;/div&gt;</div><div class=\"line\"></div><div class=\"line\">                &lt;div class=&quot;form-group&quot;&gt;</div><div class=\"line\">                    &lt;label class=&quot;col-sm-2 control-label&quot;&gt;Nomer HP:&lt;/label&gt;</div><div class=\"line\">                    &lt;div class=&quot;col-sm-10&quot;&gt;</div><div class=\"line\">                        &lt;input type=&quot;text&quot; class=&quot;form-control&quot; th:field=&quot;*&#123;noHp&#125;&quot;/&gt;</div><div class=\"line\">                    &lt;/div&gt;</div><div class=\"line\">                &lt;/div&gt;</div><div class=\"line\"></div><div class=\"line\">                &lt;div class=&quot;form-group&quot;&gt;</div><div class=\"line\">                    &lt;button type=&quot;submit&quot; class=&quot;btn btn-deffault&quot;&gt;Simpan&lt;/button&gt;</div><div class=\"line\">                &lt;/div&gt;</div><div class=\"line\">            &lt;/form&gt;</div><div class=\"line\">        &lt;/div&gt;</div><div class=\"line\">    &lt;/div&gt;</div><div class=\"line\">&lt;/div&gt;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">&lt;script th:src=&quot;@&#123;/js/jquery.min.js&#125;&quot;&gt;&lt;/script&gt;</div><div class=\"line\">&lt;script th:src=&quot;@&#123;/js/bootstrap.min.js&#125;&quot;&gt;&lt;/script&gt;</div><div class=\"line\">&lt;/body&gt;</div><div class=\"line\">&lt;/html&gt;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n"},{"title":"CRUD dengan Content digenerate di Client Side Menggunakan AngularJS","date":"2017-04-23T07:17:35.000Z","_content":"![](/images/springboot.png)\n# Generate Content pada Client Side Menggunakan AngularJS #\n  Kita akan coba menggenate content dari materi.\n\n## Memulai AngularJS ##\n- Membuat file html (src/main/resources/templates/materi/listMateri.html)\n  ```\n  <html xmlns:th=\"http://www.thymeleaf.org\">\n    <head>\n      <meta charset=\"utf-8\">\n      <title>Daftar Materi</title>\n    </head>\n    <body ng-app=\"\">\n      <h1>Daftar Materi</h1>\n      <script th:src=\"@{/js/angular.min.js}\"></script>\n    </body>\n  </html>\n  ```\n- Register view(src/main/java/domain/config/KonfigurasiWeb)\n  ```\n    registry.addViewController(\"/materi/list\").setViewName(\"materi/listMateri\");\n  ```\n\n## Binding ##\n  Binding yaitu menggunakan data input untuk di outputkan secara dinamis(tanpa submit/client side). Prosesnya adalah user menginputkan data. Kemudian data itu disimpan ke sebuah variabel. Kemudian variabel itu dioutputkan lagi. Contoh\n  ```\n  <body ng-app=\"\">\n\n    Nama anda : <input type=\"text\" ng-model=\"nama\"/>\n    Selamat datang {{nama}}\n    <script th:src=\"@{/js/angular.min.js}\"></script>\n  </body>\n  ```\n\n## Menggunakan $scope ##\n$scope digunakan untuk menghubungkan variabel di html dengan javascript.\n### Mencetak data Array ####\n- (src/main/resources/templates/materi/listMateri.html)\n  ```\n  <div ng-controller=\"MateriController\">\n    Input Materi <input type=\"text\" ng-model=\"namaMateri\"/><br/>\n    Materi {{namaMateri}} berhasil diinput.\n    <ul>\n      <li ng-repeat=\"materi in daftarMateri\">{{materi}}</li>\n    </ul>\n  </div>\n\n  <script th:src=\"@{/js/materi.js}\"></script>\n  ```\n- Membuat file JS(/src/main/resources/static/js/materi.js)\n  ```\n  var materiapp = angular.module ('materiapp',[]);\n  materiapp.controller('MateriController', function($scope){\n      $scope.daftarMateri = [\n        'Java Fundamental',\n        'Spring Framework'\n      ];\n  });\n  ```\n### Memasukkan Data ke Array ###\n- (src/main/resources/templates/materi/listMateri.html)\n  ```\n    <button ng-click=\"tambahMateri()\">Tambahkan</button>\n  ```\n- (/src/main/resources/static/js/materi.js)\n  ```\n  $scope.tambahMateri = function(){\n    $scope.daftarMateri.push($scope.namaMateri);\n  }\n  ```\n### Menghapus Data dari Array ###\n- (src/main/resources/templates/materi/listMateri.html)\n  ```\n    <button ng-click=\"tambahMateri()\">Tambahkan</button>\n  ```\n- (/src/main/resources/static/js/materi.js)\n  ```\n  $scope.tambahMateri = function(){\n    $scope.daftarMateri.push($scope.namaMateri);\n  }\n  ```\n-\n## Membuat objek materi ##\n- membuat model\n  ```\n    @Entity @Table(name = \"materi\")\n    public class Materi {\n\n        @Id @GeneratedValue(generator = \"uuid\")\n        @GenericGenerator(name = \"uuid\", strategy = \"uuid2\")\n        private String id;\n\n        @Column(nullable = false, unique = true, length = 10)\n        private String kode;\n\n        @Column(nullable = false)\n        private String nama;\n\n        @JsonIgnore\n        @OneToMany(\n            cascade = CascadeType.ALL,\n            orphanRemoval = true,\n            mappedBy = \"materi\"\n        )\n        private List<Sesi> daftarSesi = new ArrayList<>();\n    }\n  ```\n- Generate Getter and Setter\n  ```\n    public String getId() {\n        return id;\n    }\n\n    public void setId(String id) {\n        this.id = id;\n    }\n\n    public String getKode() {\n        return kode;\n    }\n\n    public void setKode(String kode) {\n        this.kode = kode;\n    }\n\n    public String getNama() {\n        return nama;\n    }\n\n    public void setNama(String nama) {\n        this.nama = nama;\n    }\n\n    public List<Sesi> getDaftarSesi() {\n        return daftarSesi;\n    }\n\n    public void setDaftarSesi(List<Sesi> daftarSesi) {\n        this.daftarSesi = daftarSesi;\n    }\n  ```\n- membuat dao\n  ```\n    public interface MateriDao extends PagingAndSortingRepository<Materi,String>{\n\n    }\n  ```\n## Generate daftar Materi ##\n- membuat controller\n  ```\n    @RestController\n    @RequestMapping(\"/api\")\n    public class MateriApiController {\n        @Autowired private MateriDao md;\n\n        @RequestMapping(value = \"/materi\", method = RequestMethod.GET)\n        public Page<Materi> daftarMateri(Pageable page){\n            return md.findAll(page);\n        }\n    }\n  ```\n  Keteranga :\n  Karena kita menggunakan RestController maka hasil output akan berupa rest(biasanya json).\n- javascript\n  ```\n    materiapp.controller('GenerateMateriController', function($http, $scope){\n      $scope.daftarMateri = {};\n\n      $scope.listMateri = function(){\n        $http.get('/api/materi').then(sukses,gagal);\n\n        function sukses(response){\n          $scope.daftarMateri = response.data;\n          console.log($scope.daftarMateri);\n        };\n\n        function gagal(response){\n          console.log(response);\n          alert('Error'+response);\n        };\n      };\n      $scope.listMateri();\n    });\n  ```\n  Keterangan:\n  Kita membuat controller baru dengan nama GenerateMateriController. Lalu kita membuat daftarMateri sebagai penampung data json yang akan kita dapat dari `/api/materi` menggunakan fungsi listMateri.\n- html\n  ```\n    <div ng-controller=\"GenerateMateriController\">\n      <table border=\"1\">\n        <thead>\n          <tr>\n            <td>Kode</td>\n            <td>Nama</td>\n          </tr>\n        </thead>\n        <tbody>\n          <tr ng-repeat= \"materi in daftarMateri.content\">\n            <td>{{materi.kode}}</td>\n            <td>{{materi.nama}}</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  ```\n  Keterangan :\n  membuat div yang telah diinjek dengan GenerateMateriController. kemudian menggenerate materi dari daftarMateri menggunakan ng-repeat.\n\n## Menghapus materi ##\n- membuat fungsi hapus (javascript)\n  ```\n    $scope.hapusMateri = function(materi){\n         $http.delete('/api/materi/'+materi.id).then(sukses, gagal);\n         function sukses(response){\n             $scope.listMateri();\n         }\n         function gagal(response){\n             console.log(response);\n             alert('Error : '+response);\n         };\n     };\n  ```\n- menambahkan button hapus (html)\n  ```\n    <td><button ng-click=\"hapusMateri(materi)\">hapus</button></td>\n  ```\n## Menyimpan materi ##\n- membuat fungsi simpan (javascript)\n  ```\n    $scope.simpanMateri = function(){\n      $http.post('/api/materi', $scope.materi).then(sukses,gagal);\n      function sukses(response){\n         $scope.listMateri();\n      }\n      function gagal(response){\n         console.log(response);\n         alert('Error : '+response);\n       };\n    };  \n  ```\n- menambahkan form input (html)\n  ```\n    <table>\n      <tr>\n        <td>Kode</td>\n        <td><input type=\"text\" ng-model=\"materi.kode\" required=\"true\"/></td>\n        <td>Kode</td>\n      </tr>\n      <tr>\n        <td>Nama</td>\n        <td><input type=\"text\" ng-model=\"materi.nama\" required=\"true\"/></td>\n        <td>Kode</td>\n      </tr>\n      <tr>\n        <td>&nbsp;</td>\n        <td><button ng-click=\"simpanMateri()\">Simpan</button></td>\n        <td>Kode</td>\n      </tr>\n    </table>\n  ```\n","source":"_posts/pemrograman/spring/3.3-generate-content-dari-client-side-dengan-AngularJS.md","raw":"---\ntitle: CRUD dengan Content digenerate di Client Side Menggunakan AngularJS\ndate: 2017-04-23 14:17:35\ncategories:\n  - Pemrograman\n  - Spring\n---\n![](/images/springboot.png)\n# Generate Content pada Client Side Menggunakan AngularJS #\n  Kita akan coba menggenate content dari materi.\n\n## Memulai AngularJS ##\n- Membuat file html (src/main/resources/templates/materi/listMateri.html)\n  ```\n  <html xmlns:th=\"http://www.thymeleaf.org\">\n    <head>\n      <meta charset=\"utf-8\">\n      <title>Daftar Materi</title>\n    </head>\n    <body ng-app=\"\">\n      <h1>Daftar Materi</h1>\n      <script th:src=\"@{/js/angular.min.js}\"></script>\n    </body>\n  </html>\n  ```\n- Register view(src/main/java/domain/config/KonfigurasiWeb)\n  ```\n    registry.addViewController(\"/materi/list\").setViewName(\"materi/listMateri\");\n  ```\n\n## Binding ##\n  Binding yaitu menggunakan data input untuk di outputkan secara dinamis(tanpa submit/client side). Prosesnya adalah user menginputkan data. Kemudian data itu disimpan ke sebuah variabel. Kemudian variabel itu dioutputkan lagi. Contoh\n  ```\n  <body ng-app=\"\">\n\n    Nama anda : <input type=\"text\" ng-model=\"nama\"/>\n    Selamat datang {{nama}}\n    <script th:src=\"@{/js/angular.min.js}\"></script>\n  </body>\n  ```\n\n## Menggunakan $scope ##\n$scope digunakan untuk menghubungkan variabel di html dengan javascript.\n### Mencetak data Array ####\n- (src/main/resources/templates/materi/listMateri.html)\n  ```\n  <div ng-controller=\"MateriController\">\n    Input Materi <input type=\"text\" ng-model=\"namaMateri\"/><br/>\n    Materi {{namaMateri}} berhasil diinput.\n    <ul>\n      <li ng-repeat=\"materi in daftarMateri\">{{materi}}</li>\n    </ul>\n  </div>\n\n  <script th:src=\"@{/js/materi.js}\"></script>\n  ```\n- Membuat file JS(/src/main/resources/static/js/materi.js)\n  ```\n  var materiapp = angular.module ('materiapp',[]);\n  materiapp.controller('MateriController', function($scope){\n      $scope.daftarMateri = [\n        'Java Fundamental',\n        'Spring Framework'\n      ];\n  });\n  ```\n### Memasukkan Data ke Array ###\n- (src/main/resources/templates/materi/listMateri.html)\n  ```\n    <button ng-click=\"tambahMateri()\">Tambahkan</button>\n  ```\n- (/src/main/resources/static/js/materi.js)\n  ```\n  $scope.tambahMateri = function(){\n    $scope.daftarMateri.push($scope.namaMateri);\n  }\n  ```\n### Menghapus Data dari Array ###\n- (src/main/resources/templates/materi/listMateri.html)\n  ```\n    <button ng-click=\"tambahMateri()\">Tambahkan</button>\n  ```\n- (/src/main/resources/static/js/materi.js)\n  ```\n  $scope.tambahMateri = function(){\n    $scope.daftarMateri.push($scope.namaMateri);\n  }\n  ```\n-\n## Membuat objek materi ##\n- membuat model\n  ```\n    @Entity @Table(name = \"materi\")\n    public class Materi {\n\n        @Id @GeneratedValue(generator = \"uuid\")\n        @GenericGenerator(name = \"uuid\", strategy = \"uuid2\")\n        private String id;\n\n        @Column(nullable = false, unique = true, length = 10)\n        private String kode;\n\n        @Column(nullable = false)\n        private String nama;\n\n        @JsonIgnore\n        @OneToMany(\n            cascade = CascadeType.ALL,\n            orphanRemoval = true,\n            mappedBy = \"materi\"\n        )\n        private List<Sesi> daftarSesi = new ArrayList<>();\n    }\n  ```\n- Generate Getter and Setter\n  ```\n    public String getId() {\n        return id;\n    }\n\n    public void setId(String id) {\n        this.id = id;\n    }\n\n    public String getKode() {\n        return kode;\n    }\n\n    public void setKode(String kode) {\n        this.kode = kode;\n    }\n\n    public String getNama() {\n        return nama;\n    }\n\n    public void setNama(String nama) {\n        this.nama = nama;\n    }\n\n    public List<Sesi> getDaftarSesi() {\n        return daftarSesi;\n    }\n\n    public void setDaftarSesi(List<Sesi> daftarSesi) {\n        this.daftarSesi = daftarSesi;\n    }\n  ```\n- membuat dao\n  ```\n    public interface MateriDao extends PagingAndSortingRepository<Materi,String>{\n\n    }\n  ```\n## Generate daftar Materi ##\n- membuat controller\n  ```\n    @RestController\n    @RequestMapping(\"/api\")\n    public class MateriApiController {\n        @Autowired private MateriDao md;\n\n        @RequestMapping(value = \"/materi\", method = RequestMethod.GET)\n        public Page<Materi> daftarMateri(Pageable page){\n            return md.findAll(page);\n        }\n    }\n  ```\n  Keteranga :\n  Karena kita menggunakan RestController maka hasil output akan berupa rest(biasanya json).\n- javascript\n  ```\n    materiapp.controller('GenerateMateriController', function($http, $scope){\n      $scope.daftarMateri = {};\n\n      $scope.listMateri = function(){\n        $http.get('/api/materi').then(sukses,gagal);\n\n        function sukses(response){\n          $scope.daftarMateri = response.data;\n          console.log($scope.daftarMateri);\n        };\n\n        function gagal(response){\n          console.log(response);\n          alert('Error'+response);\n        };\n      };\n      $scope.listMateri();\n    });\n  ```\n  Keterangan:\n  Kita membuat controller baru dengan nama GenerateMateriController. Lalu kita membuat daftarMateri sebagai penampung data json yang akan kita dapat dari `/api/materi` menggunakan fungsi listMateri.\n- html\n  ```\n    <div ng-controller=\"GenerateMateriController\">\n      <table border=\"1\">\n        <thead>\n          <tr>\n            <td>Kode</td>\n            <td>Nama</td>\n          </tr>\n        </thead>\n        <tbody>\n          <tr ng-repeat= \"materi in daftarMateri.content\">\n            <td>{{materi.kode}}</td>\n            <td>{{materi.nama}}</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  ```\n  Keterangan :\n  membuat div yang telah diinjek dengan GenerateMateriController. kemudian menggenerate materi dari daftarMateri menggunakan ng-repeat.\n\n## Menghapus materi ##\n- membuat fungsi hapus (javascript)\n  ```\n    $scope.hapusMateri = function(materi){\n         $http.delete('/api/materi/'+materi.id).then(sukses, gagal);\n         function sukses(response){\n             $scope.listMateri();\n         }\n         function gagal(response){\n             console.log(response);\n             alert('Error : '+response);\n         };\n     };\n  ```\n- menambahkan button hapus (html)\n  ```\n    <td><button ng-click=\"hapusMateri(materi)\">hapus</button></td>\n  ```\n## Menyimpan materi ##\n- membuat fungsi simpan (javascript)\n  ```\n    $scope.simpanMateri = function(){\n      $http.post('/api/materi', $scope.materi).then(sukses,gagal);\n      function sukses(response){\n         $scope.listMateri();\n      }\n      function gagal(response){\n         console.log(response);\n         alert('Error : '+response);\n       };\n    };  \n  ```\n- menambahkan form input (html)\n  ```\n    <table>\n      <tr>\n        <td>Kode</td>\n        <td><input type=\"text\" ng-model=\"materi.kode\" required=\"true\"/></td>\n        <td>Kode</td>\n      </tr>\n      <tr>\n        <td>Nama</td>\n        <td><input type=\"text\" ng-model=\"materi.nama\" required=\"true\"/></td>\n        <td>Kode</td>\n      </tr>\n      <tr>\n        <td>&nbsp;</td>\n        <td><button ng-click=\"simpanMateri()\">Simpan</button></td>\n        <td>Kode</td>\n      </tr>\n    </table>\n  ```\n","slug":"pemrograman/spring/3.3-generate-content-dari-client-side-dengan-AngularJS","published":1,"updated":"2017-05-07T09:21:26.296Z","_id":"cj2ed41qp002n8jlpvmqkyead","comments":1,"layout":"post","photos":[],"link":"","content":"<p><img src=\"/images/springboot.png\" alt=\"\"></p>\n<h1 id=\"Generate-Content-pada-Client-Side-Menggunakan-AngularJS\"><a href=\"#Generate-Content-pada-Client-Side-Menggunakan-AngularJS\" class=\"headerlink\" title=\"Generate Content pada Client Side Menggunakan AngularJS\"></a>Generate Content pada Client Side Menggunakan AngularJS</h1><p>  Kita akan coba menggenate content dari materi.</p>\n<h2 id=\"Memulai-AngularJS\"><a href=\"#Memulai-AngularJS\" class=\"headerlink\" title=\"Memulai AngularJS\"></a>Memulai AngularJS</h2><ul>\n<li><p>Membuat file html (src/main/resources/templates/materi/listMateri.html)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;html xmlns:th=&quot;http://www.thymeleaf.org&quot;&gt;</div><div class=\"line\">  &lt;head&gt;</div><div class=\"line\">    &lt;meta charset=&quot;utf-8&quot;&gt;</div><div class=\"line\">    &lt;title&gt;Daftar Materi&lt;/title&gt;</div><div class=\"line\">  &lt;/head&gt;</div><div class=\"line\">  &lt;body ng-app=&quot;&quot;&gt;</div><div class=\"line\">    &lt;h1&gt;Daftar Materi&lt;/h1&gt;</div><div class=\"line\">    &lt;script th:src=&quot;@&#123;/js/angular.min.js&#125;&quot;&gt;&lt;/script&gt;</div><div class=\"line\">  &lt;/body&gt;</div><div class=\"line\">&lt;/html&gt;</div></pre></td></tr></table></figure>\n</li>\n<li><p>Register view(src/main/java/domain/config/KonfigurasiWeb)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">registry.addViewController(&quot;/materi/list&quot;).setViewName(&quot;materi/listMateri&quot;);</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"Binding\"><a href=\"#Binding\" class=\"headerlink\" title=\"Binding\"></a>Binding</h2><p>  Binding yaitu menggunakan data input untuk di outputkan secara dinamis(tanpa submit/client side). Prosesnya adalah user menginputkan data. Kemudian data itu disimpan ke sebuah variabel. Kemudian variabel itu dioutputkan lagi. Contoh<br>  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;body ng-app=&quot;&quot;&gt;</div><div class=\"line\"></div><div class=\"line\">  Nama anda : &lt;input type=&quot;text&quot; ng-model=&quot;nama&quot;/&gt;</div><div class=\"line\">  Selamat datang &#123;&#123;nama&#125;&#125;</div><div class=\"line\">  &lt;script th:src=&quot;@&#123;/js/angular.min.js&#125;&quot;&gt;&lt;/script&gt;</div><div class=\"line\">&lt;/body&gt;</div></pre></td></tr></table></figure></p>\n<h2 id=\"Menggunakan-scope\"><a href=\"#Menggunakan-scope\" class=\"headerlink\" title=\"Menggunakan $scope\"></a>Menggunakan $scope</h2><p>$scope digunakan untuk menghubungkan variabel di html dengan javascript.</p>\n<h3 id=\"Mencetak-data-Array\"><a href=\"#Mencetak-data-Array\" class=\"headerlink\" title=\"Mencetak data Array\"></a>Mencetak data Array</h3><ul>\n<li><p>(src/main/resources/templates/materi/listMateri.html)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;div ng-controller=&quot;MateriController&quot;&gt;</div><div class=\"line\">  Input Materi &lt;input type=&quot;text&quot; ng-model=&quot;namaMateri&quot;/&gt;&lt;br/&gt;</div><div class=\"line\">  Materi &#123;&#123;namaMateri&#125;&#125; berhasil diinput.</div><div class=\"line\">  &lt;ul&gt;</div><div class=\"line\">    &lt;li ng-repeat=&quot;materi in daftarMateri&quot;&gt;&#123;&#123;materi&#125;&#125;&lt;/li&gt;</div><div class=\"line\">  &lt;/ul&gt;</div><div class=\"line\">&lt;/div&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;script th:src=&quot;@&#123;/js/materi.js&#125;&quot;&gt;&lt;/script&gt;</div></pre></td></tr></table></figure>\n</li>\n<li><p>Membuat file JS(/src/main/resources/static/js/materi.js)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">var materiapp = angular.module (&apos;materiapp&apos;,[]);</div><div class=\"line\">materiapp.controller(&apos;MateriController&apos;, function($scope)&#123;</div><div class=\"line\">    $scope.daftarMateri = [</div><div class=\"line\">      &apos;Java Fundamental&apos;,</div><div class=\"line\">      &apos;Spring Framework&apos;</div><div class=\"line\">    ];</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"Memasukkan-Data-ke-Array\"><a href=\"#Memasukkan-Data-ke-Array\" class=\"headerlink\" title=\"Memasukkan Data ke Array\"></a>Memasukkan Data ke Array</h3><ul>\n<li><p>(src/main/resources/templates/materi/listMateri.html)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;button ng-click=&quot;tambahMateri()&quot;&gt;Tambahkan&lt;/button&gt;</div></pre></td></tr></table></figure>\n</li>\n<li><p>(/src/main/resources/static/js/materi.js)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$scope.tambahMateri = function()&#123;</div><div class=\"line\">  $scope.daftarMateri.push($scope.namaMateri);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"Menghapus-Data-dari-Array\"><a href=\"#Menghapus-Data-dari-Array\" class=\"headerlink\" title=\"Menghapus Data dari Array\"></a>Menghapus Data dari Array</h3><ul>\n<li><p>(src/main/resources/templates/materi/listMateri.html)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;button ng-click=&quot;tambahMateri()&quot;&gt;Tambahkan&lt;/button&gt;</div></pre></td></tr></table></figure>\n</li>\n<li><p>(/src/main/resources/static/js/materi.js)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$scope.tambahMateri = function()&#123;</div><div class=\"line\">  $scope.daftarMateri.push($scope.namaMateri);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>-</p>\n<h2 id=\"Membuat-objek-materi\"><a href=\"#Membuat-objek-materi\" class=\"headerlink\" title=\"Membuat objek materi\"></a>Membuat objek materi</h2><ul>\n<li><p>membuat model</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\">@Entity @Table(name = &quot;materi&quot;)</div><div class=\"line\">public class Materi &#123;</div><div class=\"line\"></div><div class=\"line\">    @Id @GeneratedValue(generator = &quot;uuid&quot;)</div><div class=\"line\">    @GenericGenerator(name = &quot;uuid&quot;, strategy = &quot;uuid2&quot;)</div><div class=\"line\">    private String id;</div><div class=\"line\"></div><div class=\"line\">    @Column(nullable = false, unique = true, length = 10)</div><div class=\"line\">    private String kode;</div><div class=\"line\"></div><div class=\"line\">    @Column(nullable = false)</div><div class=\"line\">    private String nama;</div><div class=\"line\"></div><div class=\"line\">    @JsonIgnore</div><div class=\"line\">    @OneToMany(</div><div class=\"line\">        cascade = CascadeType.ALL,</div><div class=\"line\">        orphanRemoval = true,</div><div class=\"line\">        mappedBy = &quot;materi&quot;</div><div class=\"line\">    )</div><div class=\"line\">    private List&lt;Sesi&gt; daftarSesi = new ArrayList&lt;&gt;();</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n<li><p>Generate Getter and Setter</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div></pre></td><td class=\"code\"><pre><div class=\"line\">public String getId() &#123;</div><div class=\"line\">    return id;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">public void setId(String id) &#123;</div><div class=\"line\">    this.id = id;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">public String getKode() &#123;</div><div class=\"line\">    return kode;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">public void setKode(String kode) &#123;</div><div class=\"line\">    this.kode = kode;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">public String getNama() &#123;</div><div class=\"line\">    return nama;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">public void setNama(String nama) &#123;</div><div class=\"line\">    this.nama = nama;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">public List&lt;Sesi&gt; getDaftarSesi() &#123;</div><div class=\"line\">    return daftarSesi;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">public void setDaftarSesi(List&lt;Sesi&gt; daftarSesi) &#123;</div><div class=\"line\">    this.daftarSesi = daftarSesi;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n<li><p>membuat dao</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">public interface MateriDao extends PagingAndSortingRepository&lt;Materi,String&gt;&#123;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"Generate-daftar-Materi\"><a href=\"#Generate-daftar-Materi\" class=\"headerlink\" title=\"Generate daftar Materi\"></a>Generate daftar Materi</h2><ul>\n<li><p>membuat controller</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">@RestController</div><div class=\"line\">@RequestMapping(&quot;/api&quot;)</div><div class=\"line\">public class MateriApiController &#123;</div><div class=\"line\">    @Autowired private MateriDao md;</div><div class=\"line\"></div><div class=\"line\">    @RequestMapping(value = &quot;/materi&quot;, method = RequestMethod.GET)</div><div class=\"line\">    public Page&lt;Materi&gt; daftarMateri(Pageable page)&#123;</div><div class=\"line\">        return md.findAll(page);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>Keteranga :<br>Karena kita menggunakan RestController maka hasil output akan berupa rest(biasanya json).</p>\n</li>\n<li><p>javascript</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\">materiapp.controller(&apos;GenerateMateriController&apos;, function($http, $scope)&#123;</div><div class=\"line\">  $scope.daftarMateri = &#123;&#125;;</div><div class=\"line\"></div><div class=\"line\">  $scope.listMateri = function()&#123;</div><div class=\"line\">    $http.get(&apos;/api/materi&apos;).then(sukses,gagal);</div><div class=\"line\"></div><div class=\"line\">    function sukses(response)&#123;</div><div class=\"line\">      $scope.daftarMateri = response.data;</div><div class=\"line\">      console.log($scope.daftarMateri);</div><div class=\"line\">    &#125;;</div><div class=\"line\"></div><div class=\"line\">    function gagal(response)&#123;</div><div class=\"line\">      console.log(response);</div><div class=\"line\">      alert(&apos;Error&apos;+response);</div><div class=\"line\">    &#125;;</div><div class=\"line\">  &#125;;</div><div class=\"line\">  $scope.listMateri();</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<p>Keterangan:<br>Kita membuat controller baru dengan nama GenerateMateriController. Lalu kita membuat daftarMateri sebagai penampung data json yang akan kita dapat dari <code>/api/materi</code> menggunakan fungsi listMateri.</p>\n</li>\n<li><p>html</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;div ng-controller=&quot;GenerateMateriController&quot;&gt;</div><div class=\"line\">  &lt;table border=&quot;1&quot;&gt;</div><div class=\"line\">    &lt;thead&gt;</div><div class=\"line\">      &lt;tr&gt;</div><div class=\"line\">        &lt;td&gt;Kode&lt;/td&gt;</div><div class=\"line\">        &lt;td&gt;Nama&lt;/td&gt;</div><div class=\"line\">      &lt;/tr&gt;</div><div class=\"line\">    &lt;/thead&gt;</div><div class=\"line\">    &lt;tbody&gt;</div><div class=\"line\">      &lt;tr ng-repeat= &quot;materi in daftarMateri.content&quot;&gt;</div><div class=\"line\">        &lt;td&gt;&#123;&#123;materi.kode&#125;&#125;&lt;/td&gt;</div><div class=\"line\">        &lt;td&gt;&#123;&#123;materi.nama&#125;&#125;&lt;/td&gt;</div><div class=\"line\">      &lt;/tr&gt;</div><div class=\"line\">    &lt;/tbody&gt;</div><div class=\"line\">  &lt;/table&gt;</div><div class=\"line\">&lt;/div&gt;</div></pre></td></tr></table></figure>\n<p>Keterangan :<br>membuat div yang telah diinjek dengan GenerateMateriController. kemudian menggenerate materi dari daftarMateri menggunakan ng-repeat.</p>\n</li>\n</ul>\n<h2 id=\"Menghapus-materi\"><a href=\"#Menghapus-materi\" class=\"headerlink\" title=\"Menghapus materi\"></a>Menghapus materi</h2><ul>\n<li><p>membuat fungsi hapus (javascript)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">$scope.hapusMateri = function(materi)&#123;</div><div class=\"line\">     $http.delete(&apos;/api/materi/&apos;+materi.id).then(sukses, gagal);</div><div class=\"line\">     function sukses(response)&#123;</div><div class=\"line\">         $scope.listMateri();</div><div class=\"line\">     &#125;</div><div class=\"line\">     function gagal(response)&#123;</div><div class=\"line\">         console.log(response);</div><div class=\"line\">         alert(&apos;Error : &apos;+response);</div><div class=\"line\">     &#125;;</div><div class=\"line\"> &#125;;</div></pre></td></tr></table></figure>\n</li>\n<li><p>menambahkan button hapus (html)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;td&gt;&lt;button ng-click=&quot;hapusMateri(materi)&quot;&gt;hapus&lt;/button&gt;&lt;/td&gt;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"Menyimpan-materi\"><a href=\"#Menyimpan-materi\" class=\"headerlink\" title=\"Menyimpan materi\"></a>Menyimpan materi</h2><ul>\n<li><p>membuat fungsi simpan (javascript)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">$scope.simpanMateri = function()&#123;</div><div class=\"line\">  $http.post(&apos;/api/materi&apos;, $scope.materi).then(sukses,gagal);</div><div class=\"line\">  function sukses(response)&#123;</div><div class=\"line\">     $scope.listMateri();</div><div class=\"line\">  &#125;</div><div class=\"line\">  function gagal(response)&#123;</div><div class=\"line\">     console.log(response);</div><div class=\"line\">     alert(&apos;Error : &apos;+response);</div><div class=\"line\">   &#125;;</div><div class=\"line\">&#125;;</div></pre></td></tr></table></figure>\n</li>\n<li><p>menambahkan form input (html)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;table&gt;</div><div class=\"line\">  &lt;tr&gt;</div><div class=\"line\">    &lt;td&gt;Kode&lt;/td&gt;</div><div class=\"line\">    &lt;td&gt;&lt;input type=&quot;text&quot; ng-model=&quot;materi.kode&quot; required=&quot;true&quot;/&gt;&lt;/td&gt;</div><div class=\"line\">    &lt;td&gt;Kode&lt;/td&gt;</div><div class=\"line\">  &lt;/tr&gt;</div><div class=\"line\">  &lt;tr&gt;</div><div class=\"line\">    &lt;td&gt;Nama&lt;/td&gt;</div><div class=\"line\">    &lt;td&gt;&lt;input type=&quot;text&quot; ng-model=&quot;materi.nama&quot; required=&quot;true&quot;/&gt;&lt;/td&gt;</div><div class=\"line\">    &lt;td&gt;Kode&lt;/td&gt;</div><div class=\"line\">  &lt;/tr&gt;</div><div class=\"line\">  &lt;tr&gt;</div><div class=\"line\">    &lt;td&gt;&amp;nbsp;&lt;/td&gt;</div><div class=\"line\">    &lt;td&gt;&lt;button ng-click=&quot;simpanMateri()&quot;&gt;Simpan&lt;/button&gt;&lt;/td&gt;</div><div class=\"line\">    &lt;td&gt;Kode&lt;/td&gt;</div><div class=\"line\">  &lt;/tr&gt;</div><div class=\"line\">&lt;/table&gt;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n","excerpt":"","more":"<p><img src=\"/images/springboot.png\" alt=\"\"></p>\n<h1 id=\"Generate-Content-pada-Client-Side-Menggunakan-AngularJS\"><a href=\"#Generate-Content-pada-Client-Side-Menggunakan-AngularJS\" class=\"headerlink\" title=\"Generate Content pada Client Side Menggunakan AngularJS\"></a>Generate Content pada Client Side Menggunakan AngularJS</h1><p>  Kita akan coba menggenate content dari materi.</p>\n<h2 id=\"Memulai-AngularJS\"><a href=\"#Memulai-AngularJS\" class=\"headerlink\" title=\"Memulai AngularJS\"></a>Memulai AngularJS</h2><ul>\n<li><p>Membuat file html (src/main/resources/templates/materi/listMateri.html)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;html xmlns:th=&quot;http://www.thymeleaf.org&quot;&gt;</div><div class=\"line\">  &lt;head&gt;</div><div class=\"line\">    &lt;meta charset=&quot;utf-8&quot;&gt;</div><div class=\"line\">    &lt;title&gt;Daftar Materi&lt;/title&gt;</div><div class=\"line\">  &lt;/head&gt;</div><div class=\"line\">  &lt;body ng-app=&quot;&quot;&gt;</div><div class=\"line\">    &lt;h1&gt;Daftar Materi&lt;/h1&gt;</div><div class=\"line\">    &lt;script th:src=&quot;@&#123;/js/angular.min.js&#125;&quot;&gt;&lt;/script&gt;</div><div class=\"line\">  &lt;/body&gt;</div><div class=\"line\">&lt;/html&gt;</div></pre></td></tr></table></figure>\n</li>\n<li><p>Register view(src/main/java/domain/config/KonfigurasiWeb)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">registry.addViewController(&quot;/materi/list&quot;).setViewName(&quot;materi/listMateri&quot;);</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"Binding\"><a href=\"#Binding\" class=\"headerlink\" title=\"Binding\"></a>Binding</h2><p>  Binding yaitu menggunakan data input untuk di outputkan secara dinamis(tanpa submit/client side). Prosesnya adalah user menginputkan data. Kemudian data itu disimpan ke sebuah variabel. Kemudian variabel itu dioutputkan lagi. Contoh<br>  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;body ng-app=&quot;&quot;&gt;</div><div class=\"line\"></div><div class=\"line\">  Nama anda : &lt;input type=&quot;text&quot; ng-model=&quot;nama&quot;/&gt;</div><div class=\"line\">  Selamat datang &#123;&#123;nama&#125;&#125;</div><div class=\"line\">  &lt;script th:src=&quot;@&#123;/js/angular.min.js&#125;&quot;&gt;&lt;/script&gt;</div><div class=\"line\">&lt;/body&gt;</div></pre></td></tr></table></figure></p>\n<h2 id=\"Menggunakan-scope\"><a href=\"#Menggunakan-scope\" class=\"headerlink\" title=\"Menggunakan $scope\"></a>Menggunakan $scope</h2><p>$scope digunakan untuk menghubungkan variabel di html dengan javascript.</p>\n<h3 id=\"Mencetak-data-Array\"><a href=\"#Mencetak-data-Array\" class=\"headerlink\" title=\"Mencetak data Array\"></a>Mencetak data Array</h3><ul>\n<li><p>(src/main/resources/templates/materi/listMateri.html)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;div ng-controller=&quot;MateriController&quot;&gt;</div><div class=\"line\">  Input Materi &lt;input type=&quot;text&quot; ng-model=&quot;namaMateri&quot;/&gt;&lt;br/&gt;</div><div class=\"line\">  Materi &#123;&#123;namaMateri&#125;&#125; berhasil diinput.</div><div class=\"line\">  &lt;ul&gt;</div><div class=\"line\">    &lt;li ng-repeat=&quot;materi in daftarMateri&quot;&gt;&#123;&#123;materi&#125;&#125;&lt;/li&gt;</div><div class=\"line\">  &lt;/ul&gt;</div><div class=\"line\">&lt;/div&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;script th:src=&quot;@&#123;/js/materi.js&#125;&quot;&gt;&lt;/script&gt;</div></pre></td></tr></table></figure>\n</li>\n<li><p>Membuat file JS(/src/main/resources/static/js/materi.js)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">var materiapp = angular.module (&apos;materiapp&apos;,[]);</div><div class=\"line\">materiapp.controller(&apos;MateriController&apos;, function($scope)&#123;</div><div class=\"line\">    $scope.daftarMateri = [</div><div class=\"line\">      &apos;Java Fundamental&apos;,</div><div class=\"line\">      &apos;Spring Framework&apos;</div><div class=\"line\">    ];</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"Memasukkan-Data-ke-Array\"><a href=\"#Memasukkan-Data-ke-Array\" class=\"headerlink\" title=\"Memasukkan Data ke Array\"></a>Memasukkan Data ke Array</h3><ul>\n<li><p>(src/main/resources/templates/materi/listMateri.html)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;button ng-click=&quot;tambahMateri()&quot;&gt;Tambahkan&lt;/button&gt;</div></pre></td></tr></table></figure>\n</li>\n<li><p>(/src/main/resources/static/js/materi.js)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$scope.tambahMateri = function()&#123;</div><div class=\"line\">  $scope.daftarMateri.push($scope.namaMateri);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"Menghapus-Data-dari-Array\"><a href=\"#Menghapus-Data-dari-Array\" class=\"headerlink\" title=\"Menghapus Data dari Array\"></a>Menghapus Data dari Array</h3><ul>\n<li><p>(src/main/resources/templates/materi/listMateri.html)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;button ng-click=&quot;tambahMateri()&quot;&gt;Tambahkan&lt;/button&gt;</div></pre></td></tr></table></figure>\n</li>\n<li><p>(/src/main/resources/static/js/materi.js)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$scope.tambahMateri = function()&#123;</div><div class=\"line\">  $scope.daftarMateri.push($scope.namaMateri);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>-</p>\n<h2 id=\"Membuat-objek-materi\"><a href=\"#Membuat-objek-materi\" class=\"headerlink\" title=\"Membuat objek materi\"></a>Membuat objek materi</h2><ul>\n<li><p>membuat model</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\">@Entity @Table(name = &quot;materi&quot;)</div><div class=\"line\">public class Materi &#123;</div><div class=\"line\"></div><div class=\"line\">    @Id @GeneratedValue(generator = &quot;uuid&quot;)</div><div class=\"line\">    @GenericGenerator(name = &quot;uuid&quot;, strategy = &quot;uuid2&quot;)</div><div class=\"line\">    private String id;</div><div class=\"line\"></div><div class=\"line\">    @Column(nullable = false, unique = true, length = 10)</div><div class=\"line\">    private String kode;</div><div class=\"line\"></div><div class=\"line\">    @Column(nullable = false)</div><div class=\"line\">    private String nama;</div><div class=\"line\"></div><div class=\"line\">    @JsonIgnore</div><div class=\"line\">    @OneToMany(</div><div class=\"line\">        cascade = CascadeType.ALL,</div><div class=\"line\">        orphanRemoval = true,</div><div class=\"line\">        mappedBy = &quot;materi&quot;</div><div class=\"line\">    )</div><div class=\"line\">    private List&lt;Sesi&gt; daftarSesi = new ArrayList&lt;&gt;();</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n<li><p>Generate Getter and Setter</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div></pre></td><td class=\"code\"><pre><div class=\"line\">public String getId() &#123;</div><div class=\"line\">    return id;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">public void setId(String id) &#123;</div><div class=\"line\">    this.id = id;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">public String getKode() &#123;</div><div class=\"line\">    return kode;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">public void setKode(String kode) &#123;</div><div class=\"line\">    this.kode = kode;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">public String getNama() &#123;</div><div class=\"line\">    return nama;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">public void setNama(String nama) &#123;</div><div class=\"line\">    this.nama = nama;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">public List&lt;Sesi&gt; getDaftarSesi() &#123;</div><div class=\"line\">    return daftarSesi;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">public void setDaftarSesi(List&lt;Sesi&gt; daftarSesi) &#123;</div><div class=\"line\">    this.daftarSesi = daftarSesi;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n<li><p>membuat dao</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">public interface MateriDao extends PagingAndSortingRepository&lt;Materi,String&gt;&#123;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"Generate-daftar-Materi\"><a href=\"#Generate-daftar-Materi\" class=\"headerlink\" title=\"Generate daftar Materi\"></a>Generate daftar Materi</h2><ul>\n<li><p>membuat controller</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">@RestController</div><div class=\"line\">@RequestMapping(&quot;/api&quot;)</div><div class=\"line\">public class MateriApiController &#123;</div><div class=\"line\">    @Autowired private MateriDao md;</div><div class=\"line\"></div><div class=\"line\">    @RequestMapping(value = &quot;/materi&quot;, method = RequestMethod.GET)</div><div class=\"line\">    public Page&lt;Materi&gt; daftarMateri(Pageable page)&#123;</div><div class=\"line\">        return md.findAll(page);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>Keteranga :<br>Karena kita menggunakan RestController maka hasil output akan berupa rest(biasanya json).</p>\n</li>\n<li><p>javascript</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\">materiapp.controller(&apos;GenerateMateriController&apos;, function($http, $scope)&#123;</div><div class=\"line\">  $scope.daftarMateri = &#123;&#125;;</div><div class=\"line\"></div><div class=\"line\">  $scope.listMateri = function()&#123;</div><div class=\"line\">    $http.get(&apos;/api/materi&apos;).then(sukses,gagal);</div><div class=\"line\"></div><div class=\"line\">    function sukses(response)&#123;</div><div class=\"line\">      $scope.daftarMateri = response.data;</div><div class=\"line\">      console.log($scope.daftarMateri);</div><div class=\"line\">    &#125;;</div><div class=\"line\"></div><div class=\"line\">    function gagal(response)&#123;</div><div class=\"line\">      console.log(response);</div><div class=\"line\">      alert(&apos;Error&apos;+response);</div><div class=\"line\">    &#125;;</div><div class=\"line\">  &#125;;</div><div class=\"line\">  $scope.listMateri();</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<p>Keterangan:<br>Kita membuat controller baru dengan nama GenerateMateriController. Lalu kita membuat daftarMateri sebagai penampung data json yang akan kita dapat dari <code>/api/materi</code> menggunakan fungsi listMateri.</p>\n</li>\n<li><p>html</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;div ng-controller=&quot;GenerateMateriController&quot;&gt;</div><div class=\"line\">  &lt;table border=&quot;1&quot;&gt;</div><div class=\"line\">    &lt;thead&gt;</div><div class=\"line\">      &lt;tr&gt;</div><div class=\"line\">        &lt;td&gt;Kode&lt;/td&gt;</div><div class=\"line\">        &lt;td&gt;Nama&lt;/td&gt;</div><div class=\"line\">      &lt;/tr&gt;</div><div class=\"line\">    &lt;/thead&gt;</div><div class=\"line\">    &lt;tbody&gt;</div><div class=\"line\">      &lt;tr ng-repeat= &quot;materi in daftarMateri.content&quot;&gt;</div><div class=\"line\">        &lt;td&gt;&#123;&#123;materi.kode&#125;&#125;&lt;/td&gt;</div><div class=\"line\">        &lt;td&gt;&#123;&#123;materi.nama&#125;&#125;&lt;/td&gt;</div><div class=\"line\">      &lt;/tr&gt;</div><div class=\"line\">    &lt;/tbody&gt;</div><div class=\"line\">  &lt;/table&gt;</div><div class=\"line\">&lt;/div&gt;</div></pre></td></tr></table></figure>\n<p>Keterangan :<br>membuat div yang telah diinjek dengan GenerateMateriController. kemudian menggenerate materi dari daftarMateri menggunakan ng-repeat.</p>\n</li>\n</ul>\n<h2 id=\"Menghapus-materi\"><a href=\"#Menghapus-materi\" class=\"headerlink\" title=\"Menghapus materi\"></a>Menghapus materi</h2><ul>\n<li><p>membuat fungsi hapus (javascript)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">$scope.hapusMateri = function(materi)&#123;</div><div class=\"line\">     $http.delete(&apos;/api/materi/&apos;+materi.id).then(sukses, gagal);</div><div class=\"line\">     function sukses(response)&#123;</div><div class=\"line\">         $scope.listMateri();</div><div class=\"line\">     &#125;</div><div class=\"line\">     function gagal(response)&#123;</div><div class=\"line\">         console.log(response);</div><div class=\"line\">         alert(&apos;Error : &apos;+response);</div><div class=\"line\">     &#125;;</div><div class=\"line\"> &#125;;</div></pre></td></tr></table></figure>\n</li>\n<li><p>menambahkan button hapus (html)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;td&gt;&lt;button ng-click=&quot;hapusMateri(materi)&quot;&gt;hapus&lt;/button&gt;&lt;/td&gt;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"Menyimpan-materi\"><a href=\"#Menyimpan-materi\" class=\"headerlink\" title=\"Menyimpan materi\"></a>Menyimpan materi</h2><ul>\n<li><p>membuat fungsi simpan (javascript)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">$scope.simpanMateri = function()&#123;</div><div class=\"line\">  $http.post(&apos;/api/materi&apos;, $scope.materi).then(sukses,gagal);</div><div class=\"line\">  function sukses(response)&#123;</div><div class=\"line\">     $scope.listMateri();</div><div class=\"line\">  &#125;</div><div class=\"line\">  function gagal(response)&#123;</div><div class=\"line\">     console.log(response);</div><div class=\"line\">     alert(&apos;Error : &apos;+response);</div><div class=\"line\">   &#125;;</div><div class=\"line\">&#125;;</div></pre></td></tr></table></figure>\n</li>\n<li><p>menambahkan form input (html)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;table&gt;</div><div class=\"line\">  &lt;tr&gt;</div><div class=\"line\">    &lt;td&gt;Kode&lt;/td&gt;</div><div class=\"line\">    &lt;td&gt;&lt;input type=&quot;text&quot; ng-model=&quot;materi.kode&quot; required=&quot;true&quot;/&gt;&lt;/td&gt;</div><div class=\"line\">    &lt;td&gt;Kode&lt;/td&gt;</div><div class=\"line\">  &lt;/tr&gt;</div><div class=\"line\">  &lt;tr&gt;</div><div class=\"line\">    &lt;td&gt;Nama&lt;/td&gt;</div><div class=\"line\">    &lt;td&gt;&lt;input type=&quot;text&quot; ng-model=&quot;materi.nama&quot; required=&quot;true&quot;/&gt;&lt;/td&gt;</div><div class=\"line\">    &lt;td&gt;Kode&lt;/td&gt;</div><div class=\"line\">  &lt;/tr&gt;</div><div class=\"line\">  &lt;tr&gt;</div><div class=\"line\">    &lt;td&gt;&amp;nbsp;&lt;/td&gt;</div><div class=\"line\">    &lt;td&gt;&lt;button ng-click=&quot;simpanMateri()&quot;&gt;Simpan&lt;/button&gt;&lt;/td&gt;</div><div class=\"line\">    &lt;td&gt;Kode&lt;/td&gt;</div><div class=\"line\">  &lt;/tr&gt;</div><div class=\"line\">&lt;/table&gt;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n"},{"title":"Kardinalitas","date":"2017-04-23T07:17:36.000Z","_content":"![](/images/springboot.png)\n","source":"_posts/pemrograman/spring/3.4-kardinalitas.md","raw":"---\ntitle: Kardinalitas\ndate: 2017-04-23 14:17:36\ncategories:\n  - Pemrograman\n  - Spring\n---\n![](/images/springboot.png)\n","slug":"pemrograman/spring/3.4-kardinalitas","published":1,"updated":"2017-05-07T09:21:31.148Z","_id":"cj2ed41qt002p8jlps47w3pxi","comments":1,"layout":"post","photos":[],"link":"","content":"<p><img src=\"/images/springboot.png\" alt=\"\"></p>\n","excerpt":"","more":"<p><img src=\"/images/springboot.png\" alt=\"\"></p>\n"},{"title":"Otorisasi Login dengan spring security","date":"2017-04-23T07:17:37.000Z","_content":"![](/images/springboot.png)\n# Bikin Otorisasi Login #\n- Tambahkan dependency (pom.xml)\n  ```\n    <dependency>\n      <groupId>org.springframework.boot</groupId>\n      <artifactId>spring-boot-starter-security</artifactId>\n    </dependency>\n  ```\n- Bikin KonfigurasiSecurity (main/java/domain/config/KonfigurasiSecurity.java)\n  ```\n    @Configuration\n    @EnableWebSecurity\n    @EnableGlobalMethodSecurity(prePostEnabled = true)\n    public class KonfigurasiSecurity extends WebSecurityConfigurerAdapter{\n        private static final String SQL_LOGIN\n                = \"SELECT username,password, enable \" +\n                \"FROM s_users WHERE username = ?\";\n\n        private static final String SQL_PERMISSION\n                = \"SELECT u.username, r.nama as authority \" +\n                \"FROM s_users u \" +\n                \"JOIN s_user_role ur on u.id = ur.id_user \" +\n                \"JOIN s_roles r on ur.id_role = r.id \" +\n                \"WHERE u.username = ?\";\n\n        @Autowired\n        private DataSource dataSource;\n\n        @Autowired\n        public void configureGlobal(AuthenticationManagerBuilder auth) throws Exception{\n\n            //setting security non database\n            auth\n                    .inMemoryAuthentication()\n                    .withUser(\"ciazhar\")\n                    .password(\"123\")\n                    .roles(\"apa\");\n\n            ///Setting security database\n            /*auth\n                    .jdbcAuthentication()\n                    .dataSource(dataSource)\n                    .usersByUsernameQuery(SQL_LOGIN)\n                    .authoritiesByUsernameQuery(SQL_PERMISSION);*/\n        }\n\n        ///konfigurasi web mana yg boleh diakses admin staf user dll\n        protected void configure(HttpSecurity http) throws Exception{\n            http\n                    .authorizeRequests()\n                    .antMatchers(\"/css/**\",\"/js/**\").permitAll()\n                    .anyRequest().authenticated()\n                    .and()\n                    .formLogin()\n                    .loginPage(\"/login\")\n                    .defaultSuccessUrl(\"/\")\n                    .permitAll()\n                    .and()\n                    .logout();\n        }\n    }\n  ```\n- Register UI(src/main/java/domain/config/KonfigurasiWeb.java)\n  Karena form login kita tidak menggunakan controller, maka harus didaftarkan terlebih dahulu.\n  ```\n    @Configuration\n    public class KonfigurasiWeb extends WebMvcConfigurerAdapter{\n\n        @Override\n        public void addViewControllers(ViewControllerRegistry registry){\n            registry.addViewController(\"/login\").setViewName(\"login\");\n            registry.addViewController(\"/materi/list\").setViewName(\"materi/listMateri\");\n        }\n    }\n  ```\n\n- Bikin UI Login(main/resources/login.html)\n  ```\n    <html xmlns:th=\"http://www.thymeleaf.org\">\n      <head>\n\n        <title>Log In</title>\n\n        <!-- Bootstrap core CSS -->\n\n        <link th:href=\"@{/css/bootstrap.min.css}\" rel=\"stylesheet\" />\n        <link th:href=\"@{/css/bootstrap-theme.min.css}\" rel=\"stylesheet\" />\n        <link th:href=\"@{/css/signin.css}\" rel=\"stylesheet\" />\n      </head>\n\n      <body>\n\n        <div class=\"container\">\n\n          <form name=\"f\" class=\"form-signin\"  th:action=\"@{/login}\" method=\"post\">\n            <div th:if=\"${param.error}\" class=\"alert alert-error\">\n              Invalid username and password.\n            </div>\n\n            <div th:if=\"${param.logout}\" class=\"alert alert-success\">\n              You have been logged out.\n            </div>\n\n            <h2 class=\"form-signin-heading\">Please sign in</h2>\n            <label for=\"username\" class=\"sr-only\">Username</label>\n            <input type=\"text\" name=\"username\" id=\"username\" class=\"form-control\" placeholder=\"Username\" required=\"true\" autofocus=\"true\" />\n            <label for=\"password\" class=\"sr-only\">Password</label>\n            <input type=\"password\" name=\"password\" id=\"password\" class=\"form-control\" placeholder=\"Password\" required=\"true\" />\n            <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Sign in</button>\n          </form>\n\n        </div>\n\n        <script th:src=\"@{/js/jquery.min.js}\"></script>\n        <script th:src=\"@{/js/bootstrap.min.js}\"></script>\n      </body>\n    </html>\n  ```\n","source":"_posts/pemrograman/spring/4-otorisasi-login-dengan-spring-security.md","raw":"---\ntitle: Otorisasi Login dengan spring security\ndate: 2017-04-23 14:17:37\ncategories:\n  - Pemrograman\n  - Spring\n---\n![](/images/springboot.png)\n# Bikin Otorisasi Login #\n- Tambahkan dependency (pom.xml)\n  ```\n    <dependency>\n      <groupId>org.springframework.boot</groupId>\n      <artifactId>spring-boot-starter-security</artifactId>\n    </dependency>\n  ```\n- Bikin KonfigurasiSecurity (main/java/domain/config/KonfigurasiSecurity.java)\n  ```\n    @Configuration\n    @EnableWebSecurity\n    @EnableGlobalMethodSecurity(prePostEnabled = true)\n    public class KonfigurasiSecurity extends WebSecurityConfigurerAdapter{\n        private static final String SQL_LOGIN\n                = \"SELECT username,password, enable \" +\n                \"FROM s_users WHERE username = ?\";\n\n        private static final String SQL_PERMISSION\n                = \"SELECT u.username, r.nama as authority \" +\n                \"FROM s_users u \" +\n                \"JOIN s_user_role ur on u.id = ur.id_user \" +\n                \"JOIN s_roles r on ur.id_role = r.id \" +\n                \"WHERE u.username = ?\";\n\n        @Autowired\n        private DataSource dataSource;\n\n        @Autowired\n        public void configureGlobal(AuthenticationManagerBuilder auth) throws Exception{\n\n            //setting security non database\n            auth\n                    .inMemoryAuthentication()\n                    .withUser(\"ciazhar\")\n                    .password(\"123\")\n                    .roles(\"apa\");\n\n            ///Setting security database\n            /*auth\n                    .jdbcAuthentication()\n                    .dataSource(dataSource)\n                    .usersByUsernameQuery(SQL_LOGIN)\n                    .authoritiesByUsernameQuery(SQL_PERMISSION);*/\n        }\n\n        ///konfigurasi web mana yg boleh diakses admin staf user dll\n        protected void configure(HttpSecurity http) throws Exception{\n            http\n                    .authorizeRequests()\n                    .antMatchers(\"/css/**\",\"/js/**\").permitAll()\n                    .anyRequest().authenticated()\n                    .and()\n                    .formLogin()\n                    .loginPage(\"/login\")\n                    .defaultSuccessUrl(\"/\")\n                    .permitAll()\n                    .and()\n                    .logout();\n        }\n    }\n  ```\n- Register UI(src/main/java/domain/config/KonfigurasiWeb.java)\n  Karena form login kita tidak menggunakan controller, maka harus didaftarkan terlebih dahulu.\n  ```\n    @Configuration\n    public class KonfigurasiWeb extends WebMvcConfigurerAdapter{\n\n        @Override\n        public void addViewControllers(ViewControllerRegistry registry){\n            registry.addViewController(\"/login\").setViewName(\"login\");\n            registry.addViewController(\"/materi/list\").setViewName(\"materi/listMateri\");\n        }\n    }\n  ```\n\n- Bikin UI Login(main/resources/login.html)\n  ```\n    <html xmlns:th=\"http://www.thymeleaf.org\">\n      <head>\n\n        <title>Log In</title>\n\n        <!-- Bootstrap core CSS -->\n\n        <link th:href=\"@{/css/bootstrap.min.css}\" rel=\"stylesheet\" />\n        <link th:href=\"@{/css/bootstrap-theme.min.css}\" rel=\"stylesheet\" />\n        <link th:href=\"@{/css/signin.css}\" rel=\"stylesheet\" />\n      </head>\n\n      <body>\n\n        <div class=\"container\">\n\n          <form name=\"f\" class=\"form-signin\"  th:action=\"@{/login}\" method=\"post\">\n            <div th:if=\"${param.error}\" class=\"alert alert-error\">\n              Invalid username and password.\n            </div>\n\n            <div th:if=\"${param.logout}\" class=\"alert alert-success\">\n              You have been logged out.\n            </div>\n\n            <h2 class=\"form-signin-heading\">Please sign in</h2>\n            <label for=\"username\" class=\"sr-only\">Username</label>\n            <input type=\"text\" name=\"username\" id=\"username\" class=\"form-control\" placeholder=\"Username\" required=\"true\" autofocus=\"true\" />\n            <label for=\"password\" class=\"sr-only\">Password</label>\n            <input type=\"password\" name=\"password\" id=\"password\" class=\"form-control\" placeholder=\"Password\" required=\"true\" />\n            <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Sign in</button>\n          </form>\n\n        </div>\n\n        <script th:src=\"@{/js/jquery.min.js}\"></script>\n        <script th:src=\"@{/js/bootstrap.min.js}\"></script>\n      </body>\n    </html>\n  ```\n","slug":"pemrograman/spring/4-otorisasi-login-dengan-spring-security","published":1,"updated":"2017-05-07T09:21:36.053Z","_id":"cj2ed41qw002r8jlpfxbvcbpx","comments":1,"layout":"post","photos":[],"link":"","content":"<p><img src=\"/images/springboot.png\" alt=\"\"></p>\n<h1 id=\"Bikin-Otorisasi-Login\"><a href=\"#Bikin-Otorisasi-Login\" class=\"headerlink\" title=\"Bikin Otorisasi Login\"></a>Bikin Otorisasi Login</h1><ul>\n<li><p>Tambahkan dependency (pom.xml)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;dependency&gt;</div><div class=\"line\">  &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</div><div class=\"line\">  &lt;artifactId&gt;spring-boot-starter-security&lt;/artifactId&gt;</div><div class=\"line\">&lt;/dependency&gt;</div></pre></td></tr></table></figure>\n</li>\n<li><p>Bikin KonfigurasiSecurity (main/java/domain/config/KonfigurasiSecurity.java)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div></pre></td><td class=\"code\"><pre><div class=\"line\">@Configuration</div><div class=\"line\">@EnableWebSecurity</div><div class=\"line\">@EnableGlobalMethodSecurity(prePostEnabled = true)</div><div class=\"line\">public class KonfigurasiSecurity extends WebSecurityConfigurerAdapter&#123;</div><div class=\"line\">    private static final String SQL_LOGIN</div><div class=\"line\">            = &quot;SELECT username,password, enable &quot; +</div><div class=\"line\">            &quot;FROM s_users WHERE username = ?&quot;;</div><div class=\"line\"></div><div class=\"line\">    private static final String SQL_PERMISSION</div><div class=\"line\">            = &quot;SELECT u.username, r.nama as authority &quot; +</div><div class=\"line\">            &quot;FROM s_users u &quot; +</div><div class=\"line\">            &quot;JOIN s_user_role ur on u.id = ur.id_user &quot; +</div><div class=\"line\">            &quot;JOIN s_roles r on ur.id_role = r.id &quot; +</div><div class=\"line\">            &quot;WHERE u.username = ?&quot;;</div><div class=\"line\"></div><div class=\"line\">    @Autowired</div><div class=\"line\">    private DataSource dataSource;</div><div class=\"line\"></div><div class=\"line\">    @Autowired</div><div class=\"line\">    public void configureGlobal(AuthenticationManagerBuilder auth) throws Exception&#123;</div><div class=\"line\"></div><div class=\"line\">        //setting security non database</div><div class=\"line\">        auth</div><div class=\"line\">                .inMemoryAuthentication()</div><div class=\"line\">                .withUser(&quot;ciazhar&quot;)</div><div class=\"line\">                .password(&quot;123&quot;)</div><div class=\"line\">                .roles(&quot;apa&quot;);</div><div class=\"line\"></div><div class=\"line\">        ///Setting security database</div><div class=\"line\">        /*auth</div><div class=\"line\">                .jdbcAuthentication()</div><div class=\"line\">                .dataSource(dataSource)</div><div class=\"line\">                .usersByUsernameQuery(SQL_LOGIN)</div><div class=\"line\">                .authoritiesByUsernameQuery(SQL_PERMISSION);*/</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    ///konfigurasi web mana yg boleh diakses admin staf user dll</div><div class=\"line\">    protected void configure(HttpSecurity http) throws Exception&#123;</div><div class=\"line\">        http</div><div class=\"line\">                .authorizeRequests()</div><div class=\"line\">                .antMatchers(&quot;/css/**&quot;,&quot;/js/**&quot;).permitAll()</div><div class=\"line\">                .anyRequest().authenticated()</div><div class=\"line\">                .and()</div><div class=\"line\">                .formLogin()</div><div class=\"line\">                .loginPage(&quot;/login&quot;)</div><div class=\"line\">                .defaultSuccessUrl(&quot;/&quot;)</div><div class=\"line\">                .permitAll()</div><div class=\"line\">                .and()</div><div class=\"line\">                .logout();</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n<li><p>Register UI(src/main/java/domain/config/KonfigurasiWeb.java)<br>Karena form login kita tidak menggunakan controller, maka harus didaftarkan terlebih dahulu.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">@Configuration</div><div class=\"line\">public class KonfigurasiWeb extends WebMvcConfigurerAdapter&#123;</div><div class=\"line\"></div><div class=\"line\">    @Override</div><div class=\"line\">    public void addViewControllers(ViewControllerRegistry registry)&#123;</div><div class=\"line\">        registry.addViewController(&quot;/login&quot;).setViewName(&quot;login&quot;);</div><div class=\"line\">        registry.addViewController(&quot;/materi/list&quot;).setViewName(&quot;materi/listMateri&quot;);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n<li><p>Bikin UI Login(main/resources/login.html)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;html xmlns:th=&quot;http://www.thymeleaf.org&quot;&gt;</div><div class=\"line\">  &lt;head&gt;</div><div class=\"line\"></div><div class=\"line\">    &lt;title&gt;Log In&lt;/title&gt;</div><div class=\"line\"></div><div class=\"line\">    &lt;!-- Bootstrap core CSS --&gt;</div><div class=\"line\"></div><div class=\"line\">    &lt;link th:href=&quot;@&#123;/css/bootstrap.min.css&#125;&quot; rel=&quot;stylesheet&quot; /&gt;</div><div class=\"line\">    &lt;link th:href=&quot;@&#123;/css/bootstrap-theme.min.css&#125;&quot; rel=&quot;stylesheet&quot; /&gt;</div><div class=\"line\">    &lt;link th:href=&quot;@&#123;/css/signin.css&#125;&quot; rel=&quot;stylesheet&quot; /&gt;</div><div class=\"line\">  &lt;/head&gt;</div><div class=\"line\"></div><div class=\"line\">  &lt;body&gt;</div><div class=\"line\"></div><div class=\"line\">    &lt;div class=&quot;container&quot;&gt;</div><div class=\"line\"></div><div class=\"line\">      &lt;form name=&quot;f&quot; class=&quot;form-signin&quot;  th:action=&quot;@&#123;/login&#125;&quot; method=&quot;post&quot;&gt;</div><div class=\"line\">        &lt;div th:if=&quot;$&#123;param.error&#125;&quot; class=&quot;alert alert-error&quot;&gt;</div><div class=\"line\">          Invalid username and password.</div><div class=\"line\">        &lt;/div&gt;</div><div class=\"line\"></div><div class=\"line\">        &lt;div th:if=&quot;$&#123;param.logout&#125;&quot; class=&quot;alert alert-success&quot;&gt;</div><div class=\"line\">          You have been logged out.</div><div class=\"line\">        &lt;/div&gt;</div><div class=\"line\"></div><div class=\"line\">        &lt;h2 class=&quot;form-signin-heading&quot;&gt;Please sign in&lt;/h2&gt;</div><div class=\"line\">        &lt;label for=&quot;username&quot; class=&quot;sr-only&quot;&gt;Username&lt;/label&gt;</div><div class=\"line\">        &lt;input type=&quot;text&quot; name=&quot;username&quot; id=&quot;username&quot; class=&quot;form-control&quot; placeholder=&quot;Username&quot; required=&quot;true&quot; autofocus=&quot;true&quot; /&gt;</div><div class=\"line\">        &lt;label for=&quot;password&quot; class=&quot;sr-only&quot;&gt;Password&lt;/label&gt;</div><div class=\"line\">        &lt;input type=&quot;password&quot; name=&quot;password&quot; id=&quot;password&quot; class=&quot;form-control&quot; placeholder=&quot;Password&quot; required=&quot;true&quot; /&gt;</div><div class=\"line\">        &lt;button class=&quot;btn btn-lg btn-primary btn-block&quot; type=&quot;submit&quot;&gt;Sign in&lt;/button&gt;</div><div class=\"line\">      &lt;/form&gt;</div><div class=\"line\"></div><div class=\"line\">    &lt;/div&gt;</div><div class=\"line\"></div><div class=\"line\">    &lt;script th:src=&quot;@&#123;/js/jquery.min.js&#125;&quot;&gt;&lt;/script&gt;</div><div class=\"line\">    &lt;script th:src=&quot;@&#123;/js/bootstrap.min.js&#125;&quot;&gt;&lt;/script&gt;</div><div class=\"line\">  &lt;/body&gt;</div><div class=\"line\">&lt;/html&gt;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n","excerpt":"","more":"<p><img src=\"/images/springboot.png\" alt=\"\"></p>\n<h1 id=\"Bikin-Otorisasi-Login\"><a href=\"#Bikin-Otorisasi-Login\" class=\"headerlink\" title=\"Bikin Otorisasi Login\"></a>Bikin Otorisasi Login</h1><ul>\n<li><p>Tambahkan dependency (pom.xml)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;dependency&gt;</div><div class=\"line\">  &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</div><div class=\"line\">  &lt;artifactId&gt;spring-boot-starter-security&lt;/artifactId&gt;</div><div class=\"line\">&lt;/dependency&gt;</div></pre></td></tr></table></figure>\n</li>\n<li><p>Bikin KonfigurasiSecurity (main/java/domain/config/KonfigurasiSecurity.java)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div></pre></td><td class=\"code\"><pre><div class=\"line\">@Configuration</div><div class=\"line\">@EnableWebSecurity</div><div class=\"line\">@EnableGlobalMethodSecurity(prePostEnabled = true)</div><div class=\"line\">public class KonfigurasiSecurity extends WebSecurityConfigurerAdapter&#123;</div><div class=\"line\">    private static final String SQL_LOGIN</div><div class=\"line\">            = &quot;SELECT username,password, enable &quot; +</div><div class=\"line\">            &quot;FROM s_users WHERE username = ?&quot;;</div><div class=\"line\"></div><div class=\"line\">    private static final String SQL_PERMISSION</div><div class=\"line\">            = &quot;SELECT u.username, r.nama as authority &quot; +</div><div class=\"line\">            &quot;FROM s_users u &quot; +</div><div class=\"line\">            &quot;JOIN s_user_role ur on u.id = ur.id_user &quot; +</div><div class=\"line\">            &quot;JOIN s_roles r on ur.id_role = r.id &quot; +</div><div class=\"line\">            &quot;WHERE u.username = ?&quot;;</div><div class=\"line\"></div><div class=\"line\">    @Autowired</div><div class=\"line\">    private DataSource dataSource;</div><div class=\"line\"></div><div class=\"line\">    @Autowired</div><div class=\"line\">    public void configureGlobal(AuthenticationManagerBuilder auth) throws Exception&#123;</div><div class=\"line\"></div><div class=\"line\">        //setting security non database</div><div class=\"line\">        auth</div><div class=\"line\">                .inMemoryAuthentication()</div><div class=\"line\">                .withUser(&quot;ciazhar&quot;)</div><div class=\"line\">                .password(&quot;123&quot;)</div><div class=\"line\">                .roles(&quot;apa&quot;);</div><div class=\"line\"></div><div class=\"line\">        ///Setting security database</div><div class=\"line\">        /*auth</div><div class=\"line\">                .jdbcAuthentication()</div><div class=\"line\">                .dataSource(dataSource)</div><div class=\"line\">                .usersByUsernameQuery(SQL_LOGIN)</div><div class=\"line\">                .authoritiesByUsernameQuery(SQL_PERMISSION);*/</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    ///konfigurasi web mana yg boleh diakses admin staf user dll</div><div class=\"line\">    protected void configure(HttpSecurity http) throws Exception&#123;</div><div class=\"line\">        http</div><div class=\"line\">                .authorizeRequests()</div><div class=\"line\">                .antMatchers(&quot;/css/**&quot;,&quot;/js/**&quot;).permitAll()</div><div class=\"line\">                .anyRequest().authenticated()</div><div class=\"line\">                .and()</div><div class=\"line\">                .formLogin()</div><div class=\"line\">                .loginPage(&quot;/login&quot;)</div><div class=\"line\">                .defaultSuccessUrl(&quot;/&quot;)</div><div class=\"line\">                .permitAll()</div><div class=\"line\">                .and()</div><div class=\"line\">                .logout();</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n<li><p>Register UI(src/main/java/domain/config/KonfigurasiWeb.java)<br>Karena form login kita tidak menggunakan controller, maka harus didaftarkan terlebih dahulu.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">@Configuration</div><div class=\"line\">public class KonfigurasiWeb extends WebMvcConfigurerAdapter&#123;</div><div class=\"line\"></div><div class=\"line\">    @Override</div><div class=\"line\">    public void addViewControllers(ViewControllerRegistry registry)&#123;</div><div class=\"line\">        registry.addViewController(&quot;/login&quot;).setViewName(&quot;login&quot;);</div><div class=\"line\">        registry.addViewController(&quot;/materi/list&quot;).setViewName(&quot;materi/listMateri&quot;);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n<li><p>Bikin UI Login(main/resources/login.html)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;html xmlns:th=&quot;http://www.thymeleaf.org&quot;&gt;</div><div class=\"line\">  &lt;head&gt;</div><div class=\"line\"></div><div class=\"line\">    &lt;title&gt;Log In&lt;/title&gt;</div><div class=\"line\"></div><div class=\"line\">    &lt;!-- Bootstrap core CSS --&gt;</div><div class=\"line\"></div><div class=\"line\">    &lt;link th:href=&quot;@&#123;/css/bootstrap.min.css&#125;&quot; rel=&quot;stylesheet&quot; /&gt;</div><div class=\"line\">    &lt;link th:href=&quot;@&#123;/css/bootstrap-theme.min.css&#125;&quot; rel=&quot;stylesheet&quot; /&gt;</div><div class=\"line\">    &lt;link th:href=&quot;@&#123;/css/signin.css&#125;&quot; rel=&quot;stylesheet&quot; /&gt;</div><div class=\"line\">  &lt;/head&gt;</div><div class=\"line\"></div><div class=\"line\">  &lt;body&gt;</div><div class=\"line\"></div><div class=\"line\">    &lt;div class=&quot;container&quot;&gt;</div><div class=\"line\"></div><div class=\"line\">      &lt;form name=&quot;f&quot; class=&quot;form-signin&quot;  th:action=&quot;@&#123;/login&#125;&quot; method=&quot;post&quot;&gt;</div><div class=\"line\">        &lt;div th:if=&quot;$&#123;param.error&#125;&quot; class=&quot;alert alert-error&quot;&gt;</div><div class=\"line\">          Invalid username and password.</div><div class=\"line\">        &lt;/div&gt;</div><div class=\"line\"></div><div class=\"line\">        &lt;div th:if=&quot;$&#123;param.logout&#125;&quot; class=&quot;alert alert-success&quot;&gt;</div><div class=\"line\">          You have been logged out.</div><div class=\"line\">        &lt;/div&gt;</div><div class=\"line\"></div><div class=\"line\">        &lt;h2 class=&quot;form-signin-heading&quot;&gt;Please sign in&lt;/h2&gt;</div><div class=\"line\">        &lt;label for=&quot;username&quot; class=&quot;sr-only&quot;&gt;Username&lt;/label&gt;</div><div class=\"line\">        &lt;input type=&quot;text&quot; name=&quot;username&quot; id=&quot;username&quot; class=&quot;form-control&quot; placeholder=&quot;Username&quot; required=&quot;true&quot; autofocus=&quot;true&quot; /&gt;</div><div class=\"line\">        &lt;label for=&quot;password&quot; class=&quot;sr-only&quot;&gt;Password&lt;/label&gt;</div><div class=\"line\">        &lt;input type=&quot;password&quot; name=&quot;password&quot; id=&quot;password&quot; class=&quot;form-control&quot; placeholder=&quot;Password&quot; required=&quot;true&quot; /&gt;</div><div class=\"line\">        &lt;button class=&quot;btn btn-lg btn-primary btn-block&quot; type=&quot;submit&quot;&gt;Sign in&lt;/button&gt;</div><div class=\"line\">      &lt;/form&gt;</div><div class=\"line\"></div><div class=\"line\">    &lt;/div&gt;</div><div class=\"line\"></div><div class=\"line\">    &lt;script th:src=&quot;@&#123;/js/jquery.min.js&#125;&quot;&gt;&lt;/script&gt;</div><div class=\"line\">    &lt;script th:src=&quot;@&#123;/js/bootstrap.min.js&#125;&quot;&gt;&lt;/script&gt;</div><div class=\"line\">  &lt;/body&gt;</div><div class=\"line\">&lt;/html&gt;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n"},{"title":"Thymeleaf","date":"2017-04-23T07:17:38.000Z","_content":"![](/images/springboot.png)\n# Layout dengan Thymeleaf\n  Thymeleaf adalah template engine untuk JVM. Dia support HTMl, XML, TEXT, CSS, JS, dan RAW. Thymeleaf emmpunya kemampuan yang dikenal dengan Natural Template yaitu dimana kita dapat membuat 2 buah value yang sama. Hal ini mempermudah antara designer dan programer agar dapat bekerja bersama. Ketika value dari backed belum ada designer dapat menggunakan value html.\n    ```\n      <input type=\"text\" name=\"userName\" value=\"James Carrot\" th:value=\"${user.name}\" />\n    ```\n\n# Menggunakan Thymeleaf\n  Tambahkan xmlns dibawah ini pada tag html\n  ```\n    <html xmlns:th=\"http://www.thymeleaf.org\">\n  ```\n# Expression di Thymeleaf\n  - Menampilkan pesan menggunakan `#{}`\n    Contoh Menampilkan nama user yang sedang online\n    ```\n      <p th:utext=\"#{home.welcome(${session.user.name})}\">\n    ```\n  - Menampilkan variabel menggunakan `${}`\n    contoh menggunakan th:each:\n    ```\n      <tr th:each=\"pesertas : ${peserta}\">\n          <td th:text=\"${pesertas.nama}\"></td>\n          <td th:text=\"${pesertas.email}\"></td>\n          <td th:text=\"${pesertas.noHp}\"></td>\n          <td>\n              <a th:href=\"${'/peserta/edit/'+pesertas.id}\"><span class=\"glyphicon glyphicon-edit\"></span></a>\n              <a th:href=\"${'/peserta/hapus/'+pesertas.id}\"><span class=\"glyphicon glyphicon-remove\"></span></a>\n          </td>\n      </tr>\n    ```\n  - Menampilkan link url menggunakan `@{}`.\n    Contoh url dapat berasal dari mapping controller :\n    ```\n      <a th:href=\"@{/peserta}\">Daftar Peserta</a>\n    ```\n    Contoh url dapat berasal dari default folder :\n    ```\n      <link th:href=\"@{/css/bootstrap.min.css}\" rel=\"stylesheet\" />\n    ```\n\n## Template Inheritance ##\n  Template Inheritance dapat menggunakan\n  ```\n    <div layout:fragment=\"content\">\n  ```\n","source":"_posts/pemrograman/spring/5-layout-dengan-thymeleaf.md","raw":"---\ntitle: Thymeleaf\ndate: 2017-04-23 14:17:38\ncategories:\n  - Pemrograman\n  - Spring\n---\n![](/images/springboot.png)\n# Layout dengan Thymeleaf\n  Thymeleaf adalah template engine untuk JVM. Dia support HTMl, XML, TEXT, CSS, JS, dan RAW. Thymeleaf emmpunya kemampuan yang dikenal dengan Natural Template yaitu dimana kita dapat membuat 2 buah value yang sama. Hal ini mempermudah antara designer dan programer agar dapat bekerja bersama. Ketika value dari backed belum ada designer dapat menggunakan value html.\n    ```\n      <input type=\"text\" name=\"userName\" value=\"James Carrot\" th:value=\"${user.name}\" />\n    ```\n\n# Menggunakan Thymeleaf\n  Tambahkan xmlns dibawah ini pada tag html\n  ```\n    <html xmlns:th=\"http://www.thymeleaf.org\">\n  ```\n# Expression di Thymeleaf\n  - Menampilkan pesan menggunakan `#{}`\n    Contoh Menampilkan nama user yang sedang online\n    ```\n      <p th:utext=\"#{home.welcome(${session.user.name})}\">\n    ```\n  - Menampilkan variabel menggunakan `${}`\n    contoh menggunakan th:each:\n    ```\n      <tr th:each=\"pesertas : ${peserta}\">\n          <td th:text=\"${pesertas.nama}\"></td>\n          <td th:text=\"${pesertas.email}\"></td>\n          <td th:text=\"${pesertas.noHp}\"></td>\n          <td>\n              <a th:href=\"${'/peserta/edit/'+pesertas.id}\"><span class=\"glyphicon glyphicon-edit\"></span></a>\n              <a th:href=\"${'/peserta/hapus/'+pesertas.id}\"><span class=\"glyphicon glyphicon-remove\"></span></a>\n          </td>\n      </tr>\n    ```\n  - Menampilkan link url menggunakan `@{}`.\n    Contoh url dapat berasal dari mapping controller :\n    ```\n      <a th:href=\"@{/peserta}\">Daftar Peserta</a>\n    ```\n    Contoh url dapat berasal dari default folder :\n    ```\n      <link th:href=\"@{/css/bootstrap.min.css}\" rel=\"stylesheet\" />\n    ```\n\n## Template Inheritance ##\n  Template Inheritance dapat menggunakan\n  ```\n    <div layout:fragment=\"content\">\n  ```\n","slug":"pemrograman/spring/5-layout-dengan-thymeleaf","published":1,"updated":"2017-05-07T09:21:40.069Z","_id":"cj2ed41r2002t8jlpx9b78bcp","comments":1,"layout":"post","photos":[],"link":"","content":"<p><img src=\"/images/springboot.png\" alt=\"\"></p>\n<h1 id=\"Layout-dengan-Thymeleaf\"><a href=\"#Layout-dengan-Thymeleaf\" class=\"headerlink\" title=\"Layout dengan Thymeleaf\"></a>Layout dengan Thymeleaf</h1><p>  Thymeleaf adalah template engine untuk JVM. Dia support HTMl, XML, TEXT, CSS, JS, dan RAW. Thymeleaf emmpunya kemampuan yang dikenal dengan Natural Template yaitu dimana kita dapat membuat 2 buah value yang sama. Hal ini mempermudah antara designer dan programer agar dapat bekerja bersama. Ketika value dari backed belum ada designer dapat menggunakan value html.<br>    <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;input type=&quot;text&quot; name=&quot;userName&quot; value=&quot;James Carrot&quot; th:value=&quot;$&#123;user.name&#125;&quot; /&gt;</div></pre></td></tr></table></figure></p>\n<h1 id=\"Menggunakan-Thymeleaf\"><a href=\"#Menggunakan-Thymeleaf\" class=\"headerlink\" title=\"Menggunakan Thymeleaf\"></a>Menggunakan Thymeleaf</h1><p>  Tambahkan xmlns dibawah ini pada tag html<br>  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;html xmlns:th=&quot;http://www.thymeleaf.org&quot;&gt;</div></pre></td></tr></table></figure></p>\n<h1 id=\"Expression-di-Thymeleaf\"><a href=\"#Expression-di-Thymeleaf\" class=\"headerlink\" title=\"Expression di Thymeleaf\"></a>Expression di Thymeleaf</h1><ul>\n<li><p>Menampilkan pesan menggunakan <code>#{}</code><br>Contoh Menampilkan nama user yang sedang online</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;p th:utext=&quot;#&#123;home.welcome($&#123;session.user.name&#125;)&#125;&quot;&gt;</div></pre></td></tr></table></figure>\n</li>\n<li><p>Menampilkan variabel menggunakan <code>${}</code><br>contoh menggunakan th:each:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;tr th:each=&quot;pesertas : $&#123;peserta&#125;&quot;&gt;</div><div class=\"line\">    &lt;td th:text=&quot;$&#123;pesertas.nama&#125;&quot;&gt;&lt;/td&gt;</div><div class=\"line\">    &lt;td th:text=&quot;$&#123;pesertas.email&#125;&quot;&gt;&lt;/td&gt;</div><div class=\"line\">    &lt;td th:text=&quot;$&#123;pesertas.noHp&#125;&quot;&gt;&lt;/td&gt;</div><div class=\"line\">    &lt;td&gt;</div><div class=\"line\">        &lt;a th:href=&quot;$&#123;&apos;/peserta/edit/&apos;+pesertas.id&#125;&quot;&gt;&lt;span class=&quot;glyphicon glyphicon-edit&quot;&gt;&lt;/span&gt;&lt;/a&gt;</div><div class=\"line\">        &lt;a th:href=&quot;$&#123;&apos;/peserta/hapus/&apos;+pesertas.id&#125;&quot;&gt;&lt;span class=&quot;glyphicon glyphicon-remove&quot;&gt;&lt;/span&gt;&lt;/a&gt;</div><div class=\"line\">    &lt;/td&gt;</div><div class=\"line\">&lt;/tr&gt;</div></pre></td></tr></table></figure>\n</li>\n<li><p>Menampilkan link url menggunakan <code>@{}</code>.<br>Contoh url dapat berasal dari mapping controller :</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;a th:href=&quot;@&#123;/peserta&#125;&quot;&gt;Daftar Peserta&lt;/a&gt;</div></pre></td></tr></table></figure>\n<p>Contoh url dapat berasal dari default folder :</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;link th:href=&quot;@&#123;/css/bootstrap.min.css&#125;&quot; rel=&quot;stylesheet&quot; /&gt;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"Template-Inheritance\"><a href=\"#Template-Inheritance\" class=\"headerlink\" title=\"Template Inheritance\"></a>Template Inheritance</h2><p>  Template Inheritance dapat menggunakan<br>  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;div layout:fragment=&quot;content&quot;&gt;</div></pre></td></tr></table></figure></p>\n","excerpt":"","more":"<p><img src=\"/images/springboot.png\" alt=\"\"></p>\n<h1 id=\"Layout-dengan-Thymeleaf\"><a href=\"#Layout-dengan-Thymeleaf\" class=\"headerlink\" title=\"Layout dengan Thymeleaf\"></a>Layout dengan Thymeleaf</h1><p>  Thymeleaf adalah template engine untuk JVM. Dia support HTMl, XML, TEXT, CSS, JS, dan RAW. Thymeleaf emmpunya kemampuan yang dikenal dengan Natural Template yaitu dimana kita dapat membuat 2 buah value yang sama. Hal ini mempermudah antara designer dan programer agar dapat bekerja bersama. Ketika value dari backed belum ada designer dapat menggunakan value html.<br>    <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;input type=&quot;text&quot; name=&quot;userName&quot; value=&quot;James Carrot&quot; th:value=&quot;$&#123;user.name&#125;&quot; /&gt;</div></pre></td></tr></table></figure></p>\n<h1 id=\"Menggunakan-Thymeleaf\"><a href=\"#Menggunakan-Thymeleaf\" class=\"headerlink\" title=\"Menggunakan Thymeleaf\"></a>Menggunakan Thymeleaf</h1><p>  Tambahkan xmlns dibawah ini pada tag html<br>  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;html xmlns:th=&quot;http://www.thymeleaf.org&quot;&gt;</div></pre></td></tr></table></figure></p>\n<h1 id=\"Expression-di-Thymeleaf\"><a href=\"#Expression-di-Thymeleaf\" class=\"headerlink\" title=\"Expression di Thymeleaf\"></a>Expression di Thymeleaf</h1><ul>\n<li><p>Menampilkan pesan menggunakan <code>#{}</code><br>Contoh Menampilkan nama user yang sedang online</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;p th:utext=&quot;#&#123;home.welcome($&#123;session.user.name&#125;)&#125;&quot;&gt;</div></pre></td></tr></table></figure>\n</li>\n<li><p>Menampilkan variabel menggunakan <code>${}</code><br>contoh menggunakan th:each:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;tr th:each=&quot;pesertas : $&#123;peserta&#125;&quot;&gt;</div><div class=\"line\">    &lt;td th:text=&quot;$&#123;pesertas.nama&#125;&quot;&gt;&lt;/td&gt;</div><div class=\"line\">    &lt;td th:text=&quot;$&#123;pesertas.email&#125;&quot;&gt;&lt;/td&gt;</div><div class=\"line\">    &lt;td th:text=&quot;$&#123;pesertas.noHp&#125;&quot;&gt;&lt;/td&gt;</div><div class=\"line\">    &lt;td&gt;</div><div class=\"line\">        &lt;a th:href=&quot;$&#123;&apos;/peserta/edit/&apos;+pesertas.id&#125;&quot;&gt;&lt;span class=&quot;glyphicon glyphicon-edit&quot;&gt;&lt;/span&gt;&lt;/a&gt;</div><div class=\"line\">        &lt;a th:href=&quot;$&#123;&apos;/peserta/hapus/&apos;+pesertas.id&#125;&quot;&gt;&lt;span class=&quot;glyphicon glyphicon-remove&quot;&gt;&lt;/span&gt;&lt;/a&gt;</div><div class=\"line\">    &lt;/td&gt;</div><div class=\"line\">&lt;/tr&gt;</div></pre></td></tr></table></figure>\n</li>\n<li><p>Menampilkan link url menggunakan <code>@{}</code>.<br>Contoh url dapat berasal dari mapping controller :</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;a th:href=&quot;@&#123;/peserta&#125;&quot;&gt;Daftar Peserta&lt;/a&gt;</div></pre></td></tr></table></figure>\n<p>Contoh url dapat berasal dari default folder :</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;link th:href=&quot;@&#123;/css/bootstrap.min.css&#125;&quot; rel=&quot;stylesheet&quot; /&gt;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"Template-Inheritance\"><a href=\"#Template-Inheritance\" class=\"headerlink\" title=\"Template Inheritance\"></a>Template Inheritance</h2><p>  Template Inheritance dapat menggunakan<br>  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;div layout:fragment=&quot;content&quot;&gt;</div></pre></td></tr></table></figure></p>\n"},{"title":"Jasper Report","date":"2017-04-23T07:17:39.000Z","_content":"![](/images/springboot.png)\n\n1. Tambahkan dependency\n```xml\n<dependency>\n\t\t\t<groupId>org.springframework</groupId>\n\t\t\t<artifactId>spring-context-support</artifactId>\n\t\t</dependency>\n\t\t<dependency>\n\t\t\t<groupId>io.github.jpenren</groupId>\n\t\t\t<artifactId>thymeleaf-spring-data-dialect</artifactId>\n\t\t\t<version>2.1.1</version>\n\t\t</dependency>\n\t\t<dependency>\n\t\t\t<groupId>net.sf.jasperreports</groupId>\n\t\t\t<artifactId>jasperreports</artifactId>\n\t\t\t<version>6.3.1</version>\n\t\t</dependency>\n\t\t<dependency>\n\t\t\t<groupId>org.apache.poi</groupId>\n\t\t\t<artifactId>poi</artifactId>\n\t\t\t<version>3.10.1</version>\n\t\t</dependency>\n```\n1. Membuat file .jrxml menggunakan Jaspersoft Studio\n2. Copy file ke resource/reports\n3. tambahkan bean `JasperReportsViewResolver` ke konfigurasiweb\n```java\n@Bean\n    public JasperReportsViewResolver getJasperReportsViewResolver(){\n        JasperReportsViewResolver resolver = new JasperReportsViewResolver();\n        resolver.setPrefix(\"classpath:/reports/\");\n        resolver.setSuffix(\".jrxml\");\n        resolver.setViewNames(\"report_*\");\n        resolver.setViewClass(JasperReportsMultiFormatView.class);\n        resolver.setOrder(0);\n        return resolver;\n    }\n```\n- buat controllernya\n```java\n@Controller\npublic class BugReportController {\n    @Autowired private BugDao dao;\n\n    @RequestMapping(\"/bug\")\n    public ModelAndView generateAllBugReport(ModelAndView m,\n                                             @RequestParam(value = \"format\", required = false) String format){\n        Iterable<Bug> data = dao.findAll();\n        m.addObject(\"dataSource\", data);\n        m.addObject(\"tanggalUpdate\", new Date());\n        m.addObject(\"format\", \"pdf\");\n\n        if(format != null && !format.isEmpty()){\n            m.addObject(\"format\", format);\n        }\n\n        m.setViewName(\"report_bug\");\n        return m;\n    }\n}\n```\n","source":"_posts/pemrograman/spring/6-jasper-report.md","raw":"---\ntitle: Jasper Report\ndate: 2017-04-23 14:17:39\ncategories:\n  - Pemrograman\n  - Spring\n---\n![](/images/springboot.png)\n\n1. Tambahkan dependency\n```xml\n<dependency>\n\t\t\t<groupId>org.springframework</groupId>\n\t\t\t<artifactId>spring-context-support</artifactId>\n\t\t</dependency>\n\t\t<dependency>\n\t\t\t<groupId>io.github.jpenren</groupId>\n\t\t\t<artifactId>thymeleaf-spring-data-dialect</artifactId>\n\t\t\t<version>2.1.1</version>\n\t\t</dependency>\n\t\t<dependency>\n\t\t\t<groupId>net.sf.jasperreports</groupId>\n\t\t\t<artifactId>jasperreports</artifactId>\n\t\t\t<version>6.3.1</version>\n\t\t</dependency>\n\t\t<dependency>\n\t\t\t<groupId>org.apache.poi</groupId>\n\t\t\t<artifactId>poi</artifactId>\n\t\t\t<version>3.10.1</version>\n\t\t</dependency>\n```\n1. Membuat file .jrxml menggunakan Jaspersoft Studio\n2. Copy file ke resource/reports\n3. tambahkan bean `JasperReportsViewResolver` ke konfigurasiweb\n```java\n@Bean\n    public JasperReportsViewResolver getJasperReportsViewResolver(){\n        JasperReportsViewResolver resolver = new JasperReportsViewResolver();\n        resolver.setPrefix(\"classpath:/reports/\");\n        resolver.setSuffix(\".jrxml\");\n        resolver.setViewNames(\"report_*\");\n        resolver.setViewClass(JasperReportsMultiFormatView.class);\n        resolver.setOrder(0);\n        return resolver;\n    }\n```\n- buat controllernya\n```java\n@Controller\npublic class BugReportController {\n    @Autowired private BugDao dao;\n\n    @RequestMapping(\"/bug\")\n    public ModelAndView generateAllBugReport(ModelAndView m,\n                                             @RequestParam(value = \"format\", required = false) String format){\n        Iterable<Bug> data = dao.findAll();\n        m.addObject(\"dataSource\", data);\n        m.addObject(\"tanggalUpdate\", new Date());\n        m.addObject(\"format\", \"pdf\");\n\n        if(format != null && !format.isEmpty()){\n            m.addObject(\"format\", format);\n        }\n\n        m.setViewName(\"report_bug\");\n        return m;\n    }\n}\n```\n","slug":"pemrograman/spring/6-jasper-report","published":1,"updated":"2017-05-07T09:21:44.501Z","_id":"cj2ed41r5002v8jlpp1q84tg7","comments":1,"layout":"post","photos":[],"link":"","content":"<p><img src=\"/images/springboot.png\" alt=\"\"></p>\n<ol>\n<li><p>Tambahkan dependency</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-context-support<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>io.github.jpenren<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>thymeleaf-spring-data-dialect<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.1.1<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>net.sf.jasperreports<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>jasperreports<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>6.3.1<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.apache.poi<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>poi<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.10.1<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></div></pre></td></tr></table></figure>\n</li>\n<li><p>Membuat file .jrxml menggunakan Jaspersoft Studio</p>\n</li>\n<li>Copy file ke resource/reports</li>\n<li>tambahkan bean <code>JasperReportsViewResolver</code> ke konfigurasiweb<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">@Bean</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> JasperReportsViewResolver <span class=\"title\">getJasperReportsViewResolver</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">        JasperReportsViewResolver resolver = <span class=\"keyword\">new</span> JasperReportsViewResolver();</div><div class=\"line\">        resolver.setPrefix(<span class=\"string\">\"classpath:/reports/\"</span>);</div><div class=\"line\">        resolver.setSuffix(<span class=\"string\">\".jrxml\"</span>);</div><div class=\"line\">        resolver.setViewNames(<span class=\"string\">\"report_*\"</span>);</div><div class=\"line\">        resolver.setViewClass(JasperReportsMultiFormatView.class);</div><div class=\"line\">        resolver.setOrder(<span class=\"number\">0</span>);</div><div class=\"line\">        <span class=\"keyword\">return</span> resolver;</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure>\n</li>\n</ol>\n<ul>\n<li>buat controllernya<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">@Controller</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">BugReportController</span> </span>&#123;</div><div class=\"line\">    <span class=\"meta\">@Autowired</span> <span class=\"keyword\">private</span> BugDao dao;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"meta\">@RequestMapping</span>(<span class=\"string\">\"/bug\"</span>)</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> ModelAndView <span class=\"title\">generateAllBugReport</span><span class=\"params\">(ModelAndView m,</span></span></div><div class=\"line\">                                             @RequestParam(value = <span class=\"string\">\"format\"</span>, required = <span class=\"keyword\">false</span>) String format)&#123;</div><div class=\"line\">        Iterable&lt;Bug&gt; data = dao.findAll();</div><div class=\"line\">        m.addObject(<span class=\"string\">\"dataSource\"</span>, data);</div><div class=\"line\">        m.addObject(<span class=\"string\">\"tanggalUpdate\"</span>, <span class=\"keyword\">new</span> Date());</div><div class=\"line\">        m.addObject(<span class=\"string\">\"format\"</span>, <span class=\"string\">\"pdf\"</span>);</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">if</span>(format != <span class=\"keyword\">null</span> &amp;&amp; !format.isEmpty())&#123;</div><div class=\"line\">            m.addObject(<span class=\"string\">\"format\"</span>, format);</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        m.setViewName(<span class=\"string\">\"report_bug\"</span>);</div><div class=\"line\">        <span class=\"keyword\">return</span> m;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n","excerpt":"","more":"<p><img src=\"/images/springboot.png\" alt=\"\"></p>\n<ol>\n<li><p>Tambahkan dependency</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-context-support<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>io.github.jpenren<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>thymeleaf-spring-data-dialect<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.1.1<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>net.sf.jasperreports<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>jasperreports<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>6.3.1<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.apache.poi<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>poi<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.10.1<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></div></pre></td></tr></table></figure>\n</li>\n<li><p>Membuat file .jrxml menggunakan Jaspersoft Studio</p>\n</li>\n<li>Copy file ke resource/reports</li>\n<li>tambahkan bean <code>JasperReportsViewResolver</code> ke konfigurasiweb<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">@Bean</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> JasperReportsViewResolver <span class=\"title\">getJasperReportsViewResolver</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">        JasperReportsViewResolver resolver = <span class=\"keyword\">new</span> JasperReportsViewResolver();</div><div class=\"line\">        resolver.setPrefix(<span class=\"string\">\"classpath:/reports/\"</span>);</div><div class=\"line\">        resolver.setSuffix(<span class=\"string\">\".jrxml\"</span>);</div><div class=\"line\">        resolver.setViewNames(<span class=\"string\">\"report_*\"</span>);</div><div class=\"line\">        resolver.setViewClass(JasperReportsMultiFormatView.class);</div><div class=\"line\">        resolver.setOrder(<span class=\"number\">0</span>);</div><div class=\"line\">        <span class=\"keyword\">return</span> resolver;</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure>\n</li>\n</ol>\n<ul>\n<li>buat controllernya<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">@Controller</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">BugReportController</span> </span>&#123;</div><div class=\"line\">    <span class=\"meta\">@Autowired</span> <span class=\"keyword\">private</span> BugDao dao;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"meta\">@RequestMapping</span>(<span class=\"string\">\"/bug\"</span>)</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> ModelAndView <span class=\"title\">generateAllBugReport</span><span class=\"params\">(ModelAndView m,</div><div class=\"line\">                                             @RequestParam(value = <span class=\"string\">\"format\"</span>, required = <span class=\"keyword\">false</span>)</span> String format)</span>&#123;</div><div class=\"line\">        Iterable&lt;Bug&gt; data = dao.findAll();</div><div class=\"line\">        m.addObject(<span class=\"string\">\"dataSource\"</span>, data);</div><div class=\"line\">        m.addObject(<span class=\"string\">\"tanggalUpdate\"</span>, <span class=\"keyword\">new</span> Date());</div><div class=\"line\">        m.addObject(<span class=\"string\">\"format\"</span>, <span class=\"string\">\"pdf\"</span>);</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">if</span>(format != <span class=\"keyword\">null</span> &amp;&amp; !format.isEmpty())&#123;</div><div class=\"line\">            m.addObject(<span class=\"string\">\"format\"</span>, format);</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        m.setViewName(<span class=\"string\">\"report_bug\"</span>);</div><div class=\"line\">        <span class=\"keyword\">return</span> m;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cj2ed41l600068jlpfsrkipkr","category_id":"cj2ed41kv00038jlph4pb0n3k","_id":"cj2ed41n5000s8jlpvxk95csn"},{"post_id":"cj2ed41l600068jlpfsrkipkr","category_id":"cj2ed41mf000i8jlpgamqvv8o","_id":"cj2ed41na000v8jlpjfsjytz2"},{"post_id":"cj2ed41kc00018jlpv8gzjc8h","category_id":"cj2ed41kv00038jlph4pb0n3k","_id":"cj2ed41nh000z8jlpduo32m3o"},{"post_id":"cj2ed41kc00018jlpv8gzjc8h","category_id":"cj2ed41mf000i8jlpgamqvv8o","_id":"cj2ed41nn00118jlp9dzr9pag"},{"post_id":"cj2ed41la00078jlpx3bj9j2z","category_id":"cj2ed41kv00038jlph4pb0n3k","_id":"cj2ed41nq00138jlp9c01foz1"},{"post_id":"cj2ed41la00078jlpx3bj9j2z","category_id":"cj2ed41n6000t8jlpfql6ilfq","_id":"cj2ed41nr00158jlp8lr5xh1a"},{"post_id":"cj2ed41ll00098jlpz8feyiun","category_id":"cj2ed41kv00038jlph4pb0n3k","_id":"cj2ed41ns00168jlp5imcjf32"},{"post_id":"cj2ed41ll00098jlpz8feyiun","category_id":"cj2ed41n6000t8jlpfql6ilfq","_id":"cj2ed41nt00188jlppfdau4hk"},{"post_id":"cj2ed41kl00028jlpbgql58cl","category_id":"cj2ed41kv00038jlph4pb0n3k","_id":"cj2ed41nu00198jlp2lm4gl3d"},{"post_id":"cj2ed41kl00028jlpbgql58cl","category_id":"cj2ed41mf000i8jlpgamqvv8o","_id":"cj2ed41ny001b8jlpxq6hwclu"},{"post_id":"cj2ed41lx000c8jlpzgqls440","category_id":"cj2ed41kv00038jlph4pb0n3k","_id":"cj2ed41nz001c8jlpber81c7l"},{"post_id":"cj2ed41lx000c8jlpzgqls440","category_id":"cj2ed41n6000t8jlpfql6ilfq","_id":"cj2ed41o1001e8jlppktxf10u"},{"post_id":"cj2ed41l100048jlpqb83e624","category_id":"cj2ed41kv00038jlph4pb0n3k","_id":"cj2ed41o5001g8jlpy9c6zmp2"},{"post_id":"cj2ed41l100048jlpqb83e624","category_id":"cj2ed41mf000i8jlpgamqvv8o","_id":"cj2ed41o9001i8jlpvg7dac2c"},{"post_id":"cj2ed41m7000e8jlps6xqglzk","category_id":"cj2ed41nu001a8jlp5xpq168r","_id":"cj2ed41or001q8jlp712f32aq"},{"post_id":"cj2ed41m7000e8jlps6xqglzk","category_id":"cj2ed41oo001o8jlpbe1v0vsp","_id":"cj2ed41os001s8jlpdjhsebg9"},{"post_id":"cj2ed41mi000j8jlp0e5vtyoh","category_id":"cj2ed41nu001a8jlp5xpq168r","_id":"cj2ed41oz001w8jlpyomf7z12"},{"post_id":"cj2ed41mi000j8jlp0e5vtyoh","category_id":"cj2ed41or001r8jlphgmmg2z5","_id":"cj2ed41p2001y8jlp5qs6jc8c"},{"post_id":"cj2ed41mm000m8jlpxik5gvjd","category_id":"cj2ed41nu001a8jlp5xpq168r","_id":"cj2ed41p3001z8jlpxe1p5lu3"},{"post_id":"cj2ed41mm000m8jlpxik5gvjd","category_id":"cj2ed41or001r8jlphgmmg2z5","_id":"cj2ed41p500218jlprkd24kkq"},{"post_id":"cj2ed41mw000o8jlpqmivxbzr","category_id":"cj2ed41nu001a8jlp5xpq168r","_id":"cj2ed41p600228jlpbodscpme"},{"post_id":"cj2ed41mw000o8jlpqmivxbzr","category_id":"cj2ed41or001r8jlphgmmg2z5","_id":"cj2ed41p700248jlpmfgyre9y"},{"post_id":"cj2ed41n7000u8jlpfm7p6z46","category_id":"cj2ed41nu001a8jlp5xpq168r","_id":"cj2ed41pa00288jlp9x4qjlvt"},{"post_id":"cj2ed41n7000u8jlpfm7p6z46","category_id":"cj2ed41p600238jlpd2sr0lah","_id":"cj2ed41pb00298jlp2jaapj2n"},{"post_id":"cj2ed41qb002j8jlpblep9912","category_id":"cj2ed41nu001a8jlp5xpq168r","_id":"cj2ed41rf00318jlprkhu7xmd"},{"post_id":"cj2ed41qt002p8jlps47w3pxi","category_id":"cj2ed41nu001a8jlp5xpq168r","_id":"cj2ed41rk003a8jlpjqlhd9zu"},{"post_id":"cj2ed41qw002r8jlpfxbvcbpx","category_id":"cj2ed41nu001a8jlp5xpq168r","_id":"cj2ed41rl003d8jlplznaskqv"},{"post_id":"cj2ed41r5002v8jlpp1q84tg7","category_id":"cj2ed41nu001a8jlp5xpq168r","_id":"cj2ed41rn003j8jlp6v4jrz0t"},{"post_id":"cj2ed41pv002f8jlpoyoqi0nh","category_id":"cj2ed41nu001a8jlp5xpq168r","_id":"cj2eeqzow0003rflpmb8aeq1z"},{"post_id":"cj2ed41px002g8jlp5n9soowm","category_id":"cj2ed41nu001a8jlp5xpq168r","_id":"cj2efxco700004dlpw1zflppo"},{"post_id":"cj2ed41pv002f8jlpoyoqi0nh","category_id":"cj2eh889u000r4nlpjg78752f","_id":"cj2eh8xpc000u4nlp3oxojhyl"},{"post_id":"cj2ed41px002g8jlp5n9soowm","category_id":"cj2eh889u000r4nlpjg78752f","_id":"cj2eh90ru000v4nlp1bzsgi4u"},{"post_id":"cj2ed41qb002j8jlpblep9912","category_id":"cj2eh889u000r4nlpjg78752f","_id":"cj2eh9752000x4nlphd3jbzop"},{"post_id":"cj2ed41qp002n8jlpvmqkyead","category_id":"cj2ed41nu001a8jlp5xpq168r","_id":"cj2eh9g92000z4nlp9kknpa28"},{"post_id":"cj2ed41qp002n8jlpvmqkyead","category_id":"cj2eh889u000r4nlpjg78752f","_id":"cj2eh9g9200104nlpie0x97ku"},{"post_id":"cj2ed41qt002p8jlps47w3pxi","category_id":"cj2eh889u000r4nlpjg78752f","_id":"cj2eh9k5s00114nlp994iebk4"},{"post_id":"cj2ed41qw002r8jlpfxbvcbpx","category_id":"cj2eh889u000r4nlpjg78752f","_id":"cj2eh9nlz00124nlpci4slr8f"},{"post_id":"cj2ed41r5002v8jlpp1q84tg7","category_id":"cj2eh889u000r4nlpjg78752f","_id":"cj2eh9uh600144nlplt4aamyk"},{"post_id":"cj2ed41nf000x8jlphlzgh5a2","category_id":"cj2ed41nu001a8jlp5xpq168r","_id":"cj2ehc4yd00154nlp3kpgo6eu"},{"post_id":"cj2ed41nf000x8jlphlzgh5a2","category_id":"cj2eh889u000r4nlpjg78752f","_id":"cj2ehc4yf00164nlpvg6nlh8y"},{"post_id":"cj2ed41md000h8jlp99pmswkz","category_id":"cj2ed41nu001a8jlp5xpq168r","_id":"cj2ehvye50000m4lpp5gfv71w"},{"post_id":"cj2ed41md000h8jlp99pmswkz","category_id":"cj2ed41oo001o8jlpbe1v0vsp","_id":"cj2ehvyea0001m4lphuqz9nyy"},{"post_id":"cj2ed41n1000q8jlp2tm4f24r","category_id":"cj2ed41nu001a8jlp5xpq168r","_id":"cj2ehvyev0002m4lp552x7d6r"},{"post_id":"cj2ed41n1000q8jlp2tm4f24r","category_id":"cj2ed41or001r8jlphgmmg2z5","_id":"cj2ehvyf10003m4lp2ma21djq"},{"post_id":"cj2ed41ps002e8jlpr9x3av0h","category_id":"cj2ed41nu001a8jlp5xpq168r","_id":"cj2ehvyf80004m4lpgme4d935"},{"post_id":"cj2ed41ps002e8jlpr9x3av0h","category_id":"cj2eh889u000r4nlpjg78752f","_id":"cj2ehvyfg0005m4lpis5hc3gt"},{"post_id":"cj2ed41q1002h8jlpnpcm8vkp","category_id":"cj2ed41nu001a8jlp5xpq168r","_id":"cj2ehvyfu0006m4lpicgan8xz"},{"post_id":"cj2ed41q1002h8jlpnpcm8vkp","category_id":"cj2eh889u000r4nlpjg78752f","_id":"cj2ehvyfz0007m4lp095y9301"},{"post_id":"cj2ed41qi002l8jlpi70nq6aw","category_id":"cj2ed41nu001a8jlp5xpq168r","_id":"cj2ehvyg40008m4lpjv1o8aw3"},{"post_id":"cj2ed41qi002l8jlpi70nq6aw","category_id":"cj2eh889u000r4nlpjg78752f","_id":"cj2ehvygd0009m4lpr0yowums"},{"post_id":"cj2ed41r2002t8jlpx9b78bcp","category_id":"cj2ed41nu001a8jlp5xpq168r","_id":"cj2ehvygq000am4lprt83v1ih"},{"post_id":"cj2ed41r2002t8jlpx9b78bcp","category_id":"cj2eh889u000r4nlpjg78752f","_id":"cj2ehvygq000bm4lpvni7gjv9"}],"PostTag":[{"post_id":"cj2ed41kl00028jlpbgql58cl","tag_id":"cj2ed41l500058jlpk15pcomi","_id":"cj2ed41lv000b8jlp1mgu5z3m"},{"post_id":"cj2ed41l100048jlpqb83e624","tag_id":"cj2ed41l500058jlpk15pcomi","_id":"cj2ed41mc000g8jlpb8jqcg81"},{"post_id":"cj2ed41l600068jlpfsrkipkr","tag_id":"cj2ed41l500058jlpk15pcomi","_id":"cj2ed41ml000l8jlpjvtuxulq"},{"post_id":"cj2ed41la00078jlpx3bj9j2z","tag_id":"cj2ed41mk000k8jlp2kd23gur","_id":"cj2ed41n3000r8jlpob3gz6o2"},{"post_id":"cj2ed41ll00098jlpz8feyiun","tag_id":"cj2ed41mk000k8jlp2kd23gur","_id":"cj2ed41nh000y8jlp1nwysjtk"},{"post_id":"cj2ed41lx000c8jlpzgqls440","tag_id":"cj2ed41mk000k8jlp2kd23gur","_id":"cj2ed41np00128jlpdaqjomqh"}],"Tag":[{"name":"ui-ux","_id":"cj2ed41l500058jlpk15pcomi"},{"name":"komputer","_id":"cj2ed41mk000k8jlp2kd23gur"}]}}